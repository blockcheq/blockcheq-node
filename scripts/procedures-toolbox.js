/////////////////////////////////////////
// Auto generated code. Do not modify! //
/////////////////////////////////////////

var RailwayProcedureCompiled = {"abi":[{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getRuleBookIdByIndex","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"string"},{"name":"activityId","type":"string"}],"name":"getActivityIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"string"}],"name":"getWorkday","outputs":[{"name":"","type":"string"},{"name":"workdayDate","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"string"},{"name":"activityId","type":"string"},{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"activityDate","type":"uint256"},{"name":"hash","type":"string"}],"name":"addActivity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"evidenceAddress","type":"address"}],"name":"setEvidenceContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"workdayStoreAddress","type":"address"}],"name":"setWorkdayContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerWorkday","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"string"}],"name":"activityCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"}],"name":"getChecklist","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"transferId","type":"string"}],"name":"getTransferIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTrainContract","outputs":[{"name":"trainAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"}],"name":"getChecklistStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"string"},{"name":"name","type":"string"},{"name":"workdayDate","type":"uint256"},{"name":"hash","type":"string"}],"name":"addWorkday","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"string"},{"name":"status","type":"uint8"}],"name":"getWorkdayInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerRuleBookDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"ruleBookDistribAddress","type":"address"}],"name":"setRuleBookDistributionContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"status","type":"uint8"}],"name":"getRuleBookDistributionInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"hash","type":"string"}],"name":"addRuleBookDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"string"},{"name":"status","type":"uint8"}],"name":"setWorkdayStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"name","type":"string"}],"name":"updateRuleBook","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"string"},{"name":"index","type":"uint256"},{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"activityDate","type":"uint256"}],"name":"updateActivity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getTransferInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"string"}],"name":"getWorkdayStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"string"},{"name":"status","type":"uint8"}],"name":"getRuleBookInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"}],"name":"getTransferStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"}],"name":"getTransfer","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"string"},{"name":"index","type":"uint256"}],"name":"getActivityStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"getEvidenceContract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"name","type":"string"},{"name":"hash","type":"string"}],"name":"addChecklist","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"name","type":"string"}],"name":"updateChecklist","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setActivityStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"}],"name":"evidenceCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"string"},{"name":"staffId","type":"string"}],"name":"getRuleBookDistributionStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getEvidenceInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerActivity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerChecklist","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRuleBookContract","outputs":[{"name":"ruleBookAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"}],"name":"transferCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setEvidenceStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"status","type":"uint8"}],"name":"setRuleBookDistributionStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getActivityContract","outputs":[{"name":"activityStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setTransferStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"string"}],"name":"getRuleBook","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"status","type":"uint8"}],"name":"getChecklistInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerTransfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"evidenceId","type":"string"},{"name":"evidenceName","type":"string"},{"name":"hash","type":"string"}],"name":"addEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"string"}],"name":"getRuleBookStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"status","type":"uint8"}],"name":"setChecklistStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"activityStoreAddress","type":"address"}],"name":"setActivityContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getChecklistContract","outputs":[{"name":"checklistStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"string"},{"name":"name","type":"string"},{"name":"workdayDate","type":"uint256"}],"name":"updateWorkday","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"status","type":"uint8"}],"name":"setRuleBookStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidence","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidenceStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerRuleBook","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRuleBookDistributionContract","outputs":[{"name":"ruleBookDistributionAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"ruleBookAddress","type":"address"}],"name":"setRuleBookContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"index","type":"uint256"}],"name":"getTransferIdByOutgoing","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"name","type":"string"}],"name":"updateTransfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"evidenceId","type":"string"}],"name":"getEvidenceIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTransferContract","outputs":[{"name":"transferStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getActivityInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getVerificationContract","outputs":[{"name":"verificationStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"}],"name":"transferCountIncoming","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"},{"name":"index","type":"uint256"}],"name":"getTransferIdByIncoming","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"checklistStoreAddress","type":"address"}],"name":"setChecklistContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"staffId","type":"string"}],"name":"transferCountOutgoing","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"transferId","type":"string"},{"name":"name","type":"string"},{"name":"outStaffId","type":"string"},{"name":"inStaffId","type":"string"},{"name":"hash","type":"string"}],"name":"addTransfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"workdayCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ruleBookCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"string"},{"name":"index","type":"uint256"}],"name":"getActivity","outputs":[{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"},{"name":"activityDate","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getWorkdayContract","outputs":[{"name":"workdayStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"transferStoreAddress","type":"address"}],"name":"setTransferContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getWorkdayIdByIndex","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"string"},{"name":"name","type":"string"},{"name":"hash","type":"string"}],"name":"addRuleBook","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"evidenceName","type":"string"}],"name":"updateEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"verificationStoreAddress","type":"address"}],"name":"setVerificationContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainAddress","type":"address"}],"name":"setTrainContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055615b65806100306000396000f3006060604052600436106103c35763ffffffff60e060020a60003504166302b028cc81146103c857806303e4bdde14610455578063055e3309146104fa57806305cf9c27146105ca57806306a05c841461072e5780630eaa6ef01461078a57806312058c42146107a957806316c845541461084857806317009dcd146108995780631af622d61461092c5780631e30c6d1146109bf578063278aaea9146109ee578063286de98f14610aa557806328a1e54114610b835780632ae3bbd414610c1a5780633322d60c14610cfb5780633698ef5314610d1a578063375ff43314610db25780633863c2b714610e87578063389b99db14610edd57806346e9a54014610f705780634b24bc19146110505780634fb2e45d146110ab57806350296d31146110ca57806353443bc71461112b57806354e5f2e91461118157806359aa80b8146111e45780635a0a5d85146113185780635a3eac161461136b5780635bab9d13146113bc57806361edcdaa146114d3578063623ffd0e146115a857806365554e77146116035780636a379074146116965780636aa2215a146117775780636bc57a121461181a5780636bfe7963146118b757806377a28bd7146119565780637b939282146119845780637bd3f2d614611a65578063813e6e5414611a78578063818ed8fe14611ac957806384a85d8a14611b6657806386ce438914611bfe57806388b431fd14611c115780638ea6167314611c6c5780638f32d59b14611cbd578063962085c414611cd0578063990cf6d214611d685780639dce466714611e075780639e15927f14611f60578063a2a45d8814611fb1578063a3e8337e14612049578063a498e34614612068578063a7a2619d1461207b578063a923c35a14612110578063a96960b814612166578063ae8ff061146121fb578063b8466223146122a0578063bb03341f1461233f578063be0d6c401461235e578063bfb26ac414612371578063bfc2149f14612390578063c1daea7b14612425578063c40fa65e146124c1578063c862c82514612596578063c93d7267146125a9578063ccf5662d14612604578063cd5e529214612617578063d8744285146126aa578063d99156921461273f578063d9a9a18b1461275e578063da7706bb146127f1578063db48c7dd1461298c578063dbf30aa81461299f578063dd9fd5da146129cf578063debf1a14146129e2578063ded34ca4146129f5578063e1cfb51e14612b99578063e3911c7614612bac578063e64f26b314612bcb578063ef4a5d5214612be1578063fa423dd314612cb6578063fb48d6be14612d94578063fba7716714612db3575b600080fd5b34156103d357600080fd5b6103de600435612dd2565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561041a578082015183820152602001610402565b50505050905090810190601f1680156104475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561046057600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650612e5595505050505050565b60405190815260200160405180910390f35b341561050557600080fd5b61054b60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650612f3395505050505050565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561058e578082015183820152602001610576565b50505050905090810190601f1680156105bb5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34156105d557600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650612fd895505050505050565b005b341561073957600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a0316925061310b915050565b341561079557600080fd5b61072c600160a060020a03600435166131a7565b34156107b457600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506131e995505050505050565b341561085357600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061327d95505050505050565b34156108a457600080fd5b6103de60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061334c95505050505050565b341561093757600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061343b95505050505050565b34156109ca57600080fd5b6109d2613461565b604051600160a060020a03909116815260200160405180910390f35b34156109f957600080fd5b610a8160046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061347195505050505050565b60405180826003811115610a9157fe5b60ff16815260200191505060405180910390f35b3415610ab057600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061352e95505050505050565b3415610b8e57600080fd5b610bd960046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff1692506135e5915050565b60405182815260406020820181815290820183818151815260200191508051906020019080838360008381101561058e578082015183820152602001610576565b3415610c2557600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506136a095505050505050565b3415610d0657600080fd5b61072c600160a060020a0360043516613780565b3415610d2557600080fd5b610bd960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff1692506137c2915050565b3415610dbd57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506138e095505050505050565b3415610e9257600080fd5b61072c60046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff1692506139a2915050565b3415610ee857600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650613a2395505050505050565b3415610f7b57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350613aa892505050565b341561105b57600080fd5b610bd960046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff169350613bbd92505050565b34156110b657600080fd5b61072c600160a060020a0360043516613c82565b34156110d557600080fd5b61111b60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650613cc495505050505050565b60405180826006811115610a9157fe5b341561113657600080fd5b610bd960046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff169250613d20915050565b341561118c57600080fd5b6111d460046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350613d7a92505050565b60405180826002811115610a9157fe5b34156111ef57600080fd5b61123760046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350613ddc92505050565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015611278578082015183820152602001611260565b50505050905090810190601f1680156112a55780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156112db5780820151838201526020016112c3565b50505050905090810190601f1680156113085780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b341561132357600080fd5b610a8160046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350613e9b92505050565b341561137657600080fd5b6109d260046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650613f5095505050505050565b34156113c757600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650613f7f95505050505050565b34156114de57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061407b95505050505050565b34156115b357600080fd5b61072c60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061416492505050565b341561160e57600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061422995505050505050565b34156116a157600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f83018190048102019051908101604052818152929190602084018383808284375094965061429f95505050505050565b341561178257600080fd5b61180a60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061433f95505050505050565b60405180826004811115610a9157fe5b341561182557600080fd5b610bd960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061435c92505050565b34156118c257600080fd5b61072c60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f83018190048102019051908101604052818152929190602084018383808284375094965061443c95505050505050565b341561196157600080fd5b61197061ffff600435166144e4565b604051901515815260200160405180910390f35b341561198f57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061453a95505050505050565b3415611a7057600080fd5b6109d26145eb565b3415611a8357600080fd5b6104e860046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506145fa95505050505050565b3415611ad457600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061461792505050565b3415611b7157600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff1692506146a4915050565b3415611c0957600080fd5b6109d261474c565b3415611c1c57600080fd5b61072c60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061475b92505050565b3415611c7757600080fd5b6103de60046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506147a795505050505050565b3415611cc857600080fd5b61197061480b565b3415611cdb57600080fd5b610bd960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff169250614826915050565b3415611d7357600080fd5b61072c60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f8301819004810201905190810160405281815292919060208401838380828437509496506148e395505050505050565b3415611e1257600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061490895505050505050565b3415611f6b57600080fd5b610a8160046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506149cc95505050505050565b3415611fbc57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff1692506149e9915050565b341561205457600080fd5b61072c600160a060020a0360043516614a90565b341561207357600080fd5b6109d2614ad2565b341561208657600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614ae192505050565b341561211b57600080fd5b61072c60046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff169250614b6e915050565b341561217157600080fd5b61123760046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614bb292505050565b341561220657600080fd5b61229060046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614c8d92505050565b60405180826000811115610a9157fe5b34156122ab57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614d2b95505050505050565b341561234a57600080fd5b61072c600160a060020a0360043516614d79565b341561236957600080fd5b6109d2614dbb565b341561237c57600080fd5b61072c600160a060020a0360043516614dca565b341561239b57600080fd5b6103de60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614e0c92505050565b341561243057600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614ee395505050505050565b34156124cc57600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614f0795505050505050565b34156125a157600080fd5b6109d2614f8b565b34156125b457600080fd5b610bd960046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff169350614f9a92505050565b341561260f57600080fd5b6109d261504f565b341561262257600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061505e95505050505050565b34156126b557600080fd5b6103de60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650509335935061507b92505050565b341561274a57600080fd5b61072c600160a060020a03600435166150a1565b341561276957600080fd5b6104e860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506150e395505050505050565b34156127fc57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061510095505050505050565b341561299757600080fd5b6104e86151ed565b34156129aa57600080fd5b6129b860ff60043516615256565b60405161ffff909116815260200160405180910390f35b34156129da57600080fd5b6109d261526d565b34156129ed57600080fd5b6104e861527c565b3415612a0057600080fd5b612a4860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050933593506152c692505050565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015612a93578082015183820152602001612a7b565b50505050905090810190601f168015612ac05780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015612af6578082015183820152602001612ade565b50505050905090810190601f168015612b235780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015612b59578082015183820152602001612b41565b50505050905090810190601f168015612b865780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b3415612ba457600080fd5b6109d2615419565b3415612bb757600080fd5b61072c600160a060020a0360043516615428565b3415612bd657600080fd5b6103de60043561546a565b3415612bec57600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506154c795505050505050565b3415612cc157600080fd5b61072c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061555e95505050505050565b3415612d9f57600080fd5b61072c600160a060020a0360043516615607565b3415612dbe57600080fd5b61072c600160a060020a0360043516615649565b612dda615ab8565b600254612e4f90600160a060020a031663ff94e5028460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515612e2f57600080fd5b6102c65a03f11515612e4057600080fd5b5050506040518051905061568b565b92915050565b600554600090600160a060020a031663d09aabea846040518082805190602001908083835b60208310612e995780518252601f199092019160209182019101612e7a565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020612ece856157ce565b60006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515612f1257600080fd5b6102c65a03f11515612f2357600080fd5b5050506040518051949350505050565b612f3b615ab8565b6000612f45615aca565b600454600160a060020a0316638eaa6ac0612f5f866157ce565b60006040516060015260405160e060020a63ffffffff84160281526004810191909152602401606060405180830381600087803b1515612f9e57600080fd5b6102c65a03f11515612faf57600080fd5b505050604051806040018051602090910160405292509050612fd0816157f9565b925050915091565b600554600160a060020a03166381798a51876040518082805190602001908083835b602083106130195780518252601f199092019160209182019101612ffa565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902061304e886157ce565b61305788615969565b613060886157ce565b8761306a886157ce565b60405160e060020a63ffffffff891602815260048101878152602482018790529060440185604080838360005b838110156130af578082015183820152602001613097565b505050509190910194855250506020830191909152604080830191909152606090910193506000925090505180830381600087803b15156130ef57600080fd5b6102c65a03f1151561310057600080fd5b505050505050505050565b6000805461312190600160a060020a03166159e3565b151561312c57600080fd5b613135836157ce565b6000818152600a6020526040902054909150600160a060020a0316151561317857600b8054600181016131688382615af2565b5060009182526020909120018190555b6000908152600a602052604090208054600160a060020a031916600160a060020a039290921691909117905550565b6000546131bc90600160a060020a03166159e3565b15156131c757600080fd5b60048054600160a060020a031916600160a060020a0392909216919091179055565b600454600160a060020a031663c704fb7d613203856157ce565b8461320d856157ce565b60405160e060020a63ffffffff8616028152600481018481529060240183600681111561323657fe5b60ff16815260208101929092525060409081019250600091505180830381600087803b151561326457600080fd5b6102c65a03f1151561327557600080fd5b505050505050565b600554600090600160a060020a0316637937354c836040518082805190602001908083835b602083106132c15780518252601f1990920191602091820191016132a2565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902060006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561332c57600080fd5b6102c65a03f1151561333d57600080fd5b50505060405180519392505050565b613354615ab8565b60085461343490600160a060020a031663658cc1f6613372866157ce565b856040518082805190602001908083835b602083106133a25780518252601f199092019160209182019101613383565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902060006040516040015260405160e060020a63ffffffff8516028152600481019290925260248201526044016040805180830381600087803b151561341157600080fd5b6102c65a03f1151561342257600080fd5b505050604051806040016040526157f9565b9392505050565b600754600090600160a060020a03166328098135613458856157ce565b612ece856157ce565b600654600160a060020a03165b90565b600854600090600160a060020a0316638e56ee2c61348e856157ce565b846040518082805190602001908083835b602083106134be5780518252601f19909201916020918201910161349f565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902060006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515612f1257600080fd5b600454600160a060020a031663f2677b43613548866157ce565b61355186615969565b8561355b866157ce565b60405160e060020a63ffffffff8716028152600481018581529060240184604080838360005b83811015613599578082015183820152602001613581565b50505050919091019384525050602082015260409081019250600091505180830381600087803b15156135cb57600080fd5b6102c65a03f115156135dc57600080fd5b50505050505050565b60006135ef615ab8565b600454600090600160a060020a0316634bd5322b61360c876157ce565b8660006040516040015260405160e060020a63ffffffff8516028152600481018381529060240182600681111561363f57fe5b60ff168152602001925050506040805180830381600087803b151561366357600080fd5b6102c65a03f1151561367457600080fd5b50505060405180519060200180519194509091508390506136948261568b565b92509250509250929050565b600354600160a060020a031663337187906136ba866157ce565b856040518082805190602001908083835b602083106136ea5780518252601f1990920191602091820191016136cb565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902085613720866157ce565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183600581111561375057fe5b60ff168152602081019290925250604090810193506000925090505180830381600087803b15156135cb57600080fd5b60005461379590600160a060020a03166159e3565b15156137a057600080fd5b60038054600160a060020a031916600160a060020a0392909216919091179055565b60006137cc615ab8565b600354600090600160a060020a031663cc21d1e96137e9886157ce565b876040518082805190602001908083835b602083106138195780518252601f1990920191602091820191016137fa565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208760006040516040015260405160e060020a63ffffffff86160281526004808201858152602483018590529160440190839081111561388057fe5b60ff16815260200193505050506040805180830381600087803b15156138a557600080fd5b6102c65a03f115156138b657600080fd5b50505060405180519060200180519194509091506138d590508161568b565b915050935093915050565b600354600160a060020a03166342de838d6138fa856157ce565b846040518082805190602001908083835b6020831061392a5780518252601f19909201916020918201910161390b565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902061395f856157ce565b60405160e060020a63ffffffff8616028152600481019390935260248301919091526044820152606401600060405180830381600087803b151561326457600080fd5b600454600160a060020a0316638de654ba6139bc846157ce565b8360405160e060020a63ffffffff851602815260048101838152906024018260068111156139e657fe5b60ff16815260200192505050600060405180830381600087803b1515613a0b57600080fd5b6102c65a03f11515613a1c57600080fd5b5050505050565b600254600160a060020a0316633284bb5a613a3d846157ce565b613a4684615969565b60405160e060020a63ffffffff8516028152600481018381529060240182604080838360005b83811015613a84578082015183820152602001613a6c565b5050505090500192505050600060405180830381600087803b1515613a0b57600080fd5b600554600160a060020a031663606618b9866040518082805190602001908083835b60208310613ae95780518252601f199092019160209182019101613aca565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902086613b1f87615969565b613b28876157ce565b8660405160e060020a63ffffffff881602815260048101868152602482018690529060440184604080838360005b83811015613b6e578082015183820152602001613b56565b505050509190910193845250506020820152604090810193506000925090505180830381600087803b1515613ba257600080fd5b6102c65a03f11515613bb357600080fd5b5050505050505050565b6000613bc7615ab8565b600754600090600160a060020a0316637b5348c9613be4886157ce565b878760006040516040015260405160e060020a63ffffffff8616028152600481018481526024820184905290604401826002811115613c1f57fe5b60ff16815260200193505050506040805180830381600087803b1515613c4457600080fd5b6102c65a03f11515613c5557600080fd5b5050506040518051906020018051919450909150839050613c758261568b565b9250925050935093915050565b600054613c9790600160a060020a03166159e3565b1515613ca257600080fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b600454600090600160a060020a0316635de28ae0613ce1846157ce565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561332c57600080fd5b6000613d2a615ab8565b600254600090600160a060020a0316634bd5322b613d47876157ce565b8660006040516040015260405160e060020a63ffffffff8516028152600481018381529060240182600381111561363f57fe5b600754600090600160a060020a031663a55f9927613d97856157ce565b8460006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515612f1257600080fd5b613de4615ab8565b613dec615ab8565b6000613df6615aca565b600754600160a060020a03166318ae19c2613e10886157ce565b8760006040516060015260405160e060020a63ffffffff851602815260048101929092526024820152604401606060405180830381600087803b1515613e5557600080fd5b6102c65a03f11515613e6657600080fd5b50505060405180516060820160405292506020019050613e858261568b565b613e8e826157f9565b9350935050509250929050565b600554600090600160a060020a031663a55f9927846040518082805190602001908083835b60208310613edf5780518252601f199092019160209182019101613ec0565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208460006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515612f1257600080fd5b6000600a6000613f5f846157ce565b8152602081019190915260400160002054600160a060020a031692915050565b600854600160a060020a03166354cdfd4d613f99866157ce565b856040518082805190602001908083835b60208310613fc95780518252601f199092019160209182019101613faa565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020613ffe86615969565b614007866157ce565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183604080838360005b8381101561404c578082015183820152602001614034565b50505050919091019283525050602001925060009150604090505180830381600087803b15156135cb57600080fd5b600854600160a060020a03166350e49a22614095856157ce565b846040518082805190602001908083835b602083106140c55780518252601f1990920191602091820191016140a6565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390206140fa85615969565b60405160e060020a63ffffffff861602815260048101848152602482018490529060440182604080838360005b8381101561413f578082015183820152602001614127565b505050509050019350505050600060405180830381600087803b151561326457600080fd5b600554600160a060020a031663673e639b846040518082805190602001908083835b602083106141a55780518252601f199092019160209182019101614186565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020848460405160e060020a63ffffffff861602815260048101848152602482018490529060440182600381111561420357fe5b60ff1681526020019350505050600060405180830381600087803b151561326457600080fd5b6000600a6000614238856157ce565b8152602081019190915260400160002054600160a060020a0316637937354c614260846157ce565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515612f1257600080fd5b600a60006142ac876157ce565b8152602081019190915260400160002054600160a060020a031663b7973ad96142d4866157ce565b85856142df866157ce565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183600181111561430f57fe5b60ff168152602081019290925250604090810193506000925090505180830381600087803b1515613ba257600080fd5b600354600090600160a060020a0316638e56ee2c61348e856157ce565b6000614366615ab8565b6000600a6000614375896157ce565b8152602081019190915260400160002054600160a060020a0316637b5348c961439d886157ce565b878760006040516040015260405160e060020a63ffffffff86160281526004810184815260248201849052906044018260008111156143d857fe5b60ff16815260200193505050506040805180830381600087803b15156143fd57600080fd5b6102c65a03f1151561440e57600080fd5b505050604051805190602001805191945090915083905061442e8261568b565b925092505094509492505050565b600554600160a060020a031663b7973ad9856040518082805190602001908083835b6020831061447d5780518252601f19909201916020918201910161445e565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902085856144b4866157ce565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183600381111561375057fe5b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561332c57600080fd5b600854600160a060020a03166333718790614554866157ce565b856040518082805190602001908083835b602083106145845780518252601f199092019160209182019101614565565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020856145ba866157ce565b60405160e060020a63ffffffff87160281526004808201868152602483018690529160440190849081111561375057fe5b600254600160a060020a031690565b600754600090600160a060020a0316637937354c613ce1846157ce565b600a6000614624866157ce565b8152602081019190915260400160002054600160a060020a031663673e639b61464c856157ce565b848460405160e060020a63ffffffff861602815260048101848152602482018490529060440182600081111561467e57fe5b60ff1681526020019350505050600060405180830381600087803b15156135cb57600080fd5b600354600160a060020a031663e17309306146be856157ce565b846040518082805190602001908083835b602083106146ee5780518252601f1990920191602091820191016146cf565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208460405160e060020a63ffffffff86160281526004808201858152602483018590529160440190839081111561420357fe5b600554600160a060020a031690565b600754600160a060020a031663673e639b614775856157ce565b848460405160e060020a63ffffffff861602815260048101848152602482018490529060440182600281111561420357fe5b6147af615ab8565b600254612e4f90600160a060020a0316638eaa6ac06147cd856157ce565b60006040516040015260405160e060020a63ffffffff841602815260048101919091526024016040805180830381600087803b151561341157600080fd5b6000805461482190600160a060020a03166159e3565b905090565b6000614830615ab8565b600854600090600160a060020a031663cc21d1e961484d886157ce565b876040518082805190602001908083835b6020831061487d5780518252601f19909201916020918201910161485e565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208760006040516040015260405160e060020a63ffffffff8616028152600481018481526024820184905290604401826003811115613c1f57fe5b600754600160a060020a031663b7973ad96148fd866157ce565b85856144b4866157ce565b600a6000614915876157ce565b8152602081019190915260400160002054600160a060020a03166354cdfd4d61493d866157ce565b614946866157ce565b61494f86615969565b614958866157ce565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183604080838360005b8381101561499d578082015183820152602001614985565b50505050919091019283525050602001925060009150604090505180830381600087803b1515613ba257600080fd5b600254600090600160a060020a0316635de28ae0613ce1846157ce565b600854600160a060020a031663e1730930614a03856157ce565b846040518082805190602001908083835b60208310614a335780518252601f199092019160209182019101614a14565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208460405160e060020a63ffffffff861602815260048101848152602482018490529060440182600381111561420357fe5b600054614aa590600160a060020a03166159e3565b1515614ab057600080fd5b60058054600160a060020a031916600160a060020a0392909216919091179055565b600854600160a060020a031690565b600454600160a060020a03166332e6895a614afb856157ce565b614b0485615969565b8460405160e060020a63ffffffff8616028152600481018481529060240183604080838360005b83811015614b43578082015183820152602001614b2b565b505050509050018281526020019350505050600060405180830381600087803b151561326457600080fd5b600254600160a060020a0316638de654ba614b88846157ce565b8360405160e060020a63ffffffff851602815260048101838152906024018260038111156139e657fe5b614bba615ab8565b614bc2615ab8565b6000614bcc615aca565b600a6000614bd9896157ce565b8152602081019190915260400160002054600160a060020a03166318ae19c2614c01886157ce565b8760006040516060015260405160e060020a63ffffffff851602815260048101929092526024820152604401606060405180830381600087803b1515614c4657600080fd5b6102c65a03f11515614c5757600080fd5b50505060405180516060820160405292506020019050614c768261568b565b614c7f826157f9565b935093505050935093915050565b6000600a6000614c9c866157ce565b8152602081019190915260400160002054600160a060020a031663a55f9927614cc4856157ce565b8460006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515614d0957600080fd5b6102c65a03f11515614d1a57600080fd5b505050604051805195945050505050565b600254600160a060020a031663c704fb7d614d45856157ce565b84614d4f856157ce565b60405160e060020a63ffffffff861602815260048082018581529160240190849081111561323657fe5b600054614d8e90600160a060020a03166159e3565b1515614d9957600080fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b600354600160a060020a031690565b600054614ddf90600160a060020a03166159e3565b1515614dea57600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b614e14615ab8565b600754614edb90600160a060020a0316632d7dba2c614e32876157ce565b866040518082805190602001908083835b60208310614e625780518252601f199092019160209182019101614e43565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208660006040516020015260405160e060020a63ffffffff8616028152600481019390935260248301919091526044820152606401602060405180830381600087803b1515612e2f57600080fd5b949350505050565b600754600160a060020a0316637bf03755614efd856157ce565b846140fa85615969565b6000600a6000614f16866157ce565b8152602081019190915260400160002054600160a060020a031663dd088d64614f3e856157ce565b614f47856157ce565b60006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515614d0957600080fd5b600754600160a060020a031690565b6000614fa4615ab8565b600554600090600160a060020a0316637b5348c9876040518082805190602001908083835b60208310614fe85780518252601f199092019160209182019101614fc9565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020878760006040516040015260405160e060020a63ffffffff8616028152600481018481526024820184905290604401826003811115613c1f57fe5b600954600160a060020a031690565b600754600090600160a060020a031663bf9ee0bf61348e856157ce565b615083615ab8565b600754614edb90600160a060020a0316639f06a1ba614e32876157ce565b6000546150b690600160a060020a03166159e3565b15156150c157600080fd5b60088054600160a060020a031916600160a060020a0392909216919091179055565b600754600090600160a060020a031663de4d33c861348e856157ce565b600754600160a060020a03166304b53b1261511a886157ce565b615123886157ce565b61512c88615969565b876040518082805190602001908083835b6020831061515c5780518252601f19909201916020918201910161513d565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020876040518082805190602001908083835b602083106151b85780518252601f199092019160209182019101615199565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902061306a886157ce565b600454600090600160a060020a03166306661abd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561523757600080fd5b6102c65a03f1151561524857600080fd5b505050604051805191505090565b600081600381111561526457fe5b60020a92915050565b600154600160a060020a031690565b600254600090600160a060020a03166306661abd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b151561523757600080fd5b6152ce615ab8565b6152d6615ab8565b6152de615ab8565b60006152e8615aca565b6152f0615aca565b600554600160a060020a03166318ae19c2896040518082805190602001908083835b602083106153315780518252601f199092019160209182019101615312565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902089600060405160a0015260405160e060020a63ffffffff85160281526004810192909252602482015260440160a060405180830381600087803b15156153a257600080fd5b6102c65a03f115156153b357600080fd5b50505060405180519060200180604001805190602001805160209182016040529086019190915291845290935090506153f38260005b602002015161568b565b6153fc826157f9565b6154078460016153e9565b91975095509350505092959194509250565b600454600160a060020a031690565b60005461543d90600160a060020a03166159e3565b151561544857600080fd5b60078054600160a060020a031916600160a060020a0392909216919091179055565b615472615ab8565b600454612e4f90600160a060020a031663ff94e5028460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515612e2f57600080fd5b600254600160a060020a03166381edaf906154e1856157ce565b6154ea85615969565b6154f3856157ce565b60405160e060020a63ffffffff8616028152600481018481529060240183604080838360005b83811015615531578082015183820152602001615519565b5050505091909101928352505060200191506000905060405180830381600087803b151561326457600080fd5b600a600061556b866157ce565b8152602081019190915260400160002054600160a060020a0316637bf03755615593856157ce565b8461559d85615969565b60405160e060020a63ffffffff861602815260048101848152602482018490529060440182604080838360005b838110156155e25780820151838201526020016155ca565b505050509050019350505050600060405180830381600087803b15156135cb57600080fd5b60005461561c90600160a060020a03166159e3565b151561562757600080fd5b60098054600160a060020a031916600160a060020a0392909216919091179055565b60005461565e90600160a060020a03166159e3565b151561566957600080fd5b60068054600160a060020a031916600160a060020a0392909216919091179055565b615693615ab8565b61569b615ab8565b60008060006156a8615ab8565b6000604080518059106156b85750595b818152601f19601f830116810160200160405290509550600093505b6020841015615747576008840260020a880292507fff0000000000000000000000000000000000000000000000000000000000000083161561573c578286868151811061571d57fe5b906020010190600160f860020a031916908160001a9053506001850194505b6001909301926156d4565b846040518059106157555750595b818152601f19601f830116810160200160405290509150600090505b848110156157c35785818151811061578557fe5b016020015160f860020a900460f860020a028282815181106157a357fe5b906020010190600160f860020a031916908160001a905350600101615771565b509695505050505050565b60006157d8615ab8565b5081805115156157eb57600091506157f3565b602083015191505b50919050565b615801615ab8565b615809615ab8565b600080600080615817615ab8565b604080518059106158255750595b818152601f19601f830116810160200160405290509550600093505b60028410156158df57600092505b60208310156158d4578260080260020a888560028110151561586d57fe5b60200201510291507fff000000000000000000000000000000000000000000000000000000000000008216156158c957818686815181106158aa57fe5b906020010190600160f860020a031916908160001a9053506001850194505b60019092019161584f565b600190930192615841565b846040518059106158ed5750595b818152601f19601f830116810160200160405290509050600093505b8484101561595e5785848151811061591d57fe5b016020015160f860020a900460f860020a0281858151811061593b57fe5b906020010190600160f860020a031916908160001a905350600190930192615909565b979650505050505050565b615971615aca565b615979615aca565b6000808451915060208211156159ce5761599e6159998660006020615a13565b6157ce565b835250601f1981016159c46159998660208085116159bc57846159bf565b60205b615a13565b60208401526159da565b6159d7856157ce565b83525b50909392505050565b600081600160a060020a031633600160a060020a03161480612e4f57505032600160a060020a0390811691161490565b615a1b615ab8565b615a23615ab8565b615a2b615ab8565b600086925084604051805910615a3e5750595b818152601f19601f830116810160200160405290509150600090505b84811015615aae578281870181518110615a7057fe5b016020015160f860020a900460f860020a02828281518110615a8e57fe5b906020010190600160f860020a031916908160001a905350600101615a5a565b5095945050505050565b60206040519081016040526000815290565b604080519081016040526002815b60008152600019919091019060200181615ad85790505090565b815481835581811511615b1657600083815260209020615b16918101908301615b1b565b505050565b61346e91905b80821115615b355760008155600101615b21565b50905600a165627a7a72305820c9c5ad9b266e0565a8451cd2d46c13c736c2f3c335d01950661ba4f337e51c470029"};

var TrainProcedureCompiled = {"abi":[{"constant":false,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"verificationId","type":"string"},{"name":"name","type":"string"},{"name":"hash","type":"string"}],"name":"addVerification","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"evidenceAddress","type":"address"}],"name":"setEvidenceContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"index","type":"uint256"},{"name":"verificationId","type":"string"},{"name":"name","type":"string"}],"name":"updateVerification","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"}],"name":"getCargoCardIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerBookDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"}],"name":"getCargoCardStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"}],"name":"getTrainStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getTrainContract","outputs":[{"name":"trainAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setVerificationStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"status","type":"uint8"}],"name":"setTrainStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getTrainIdByIndex","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"},{"name":"nameCard","type":"string"},{"name":"hash","type":"string"}],"name":"addCard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"status","type":"uint8"}],"name":"getBookDistributionInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"bookAddress","type":"address"}],"name":"setBookDistributionContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"cargoCardStoreAddress","type":"address"}],"name":"setCargoCardContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getCargoCardInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"}],"name":"verificationCount","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCargoCardContract","outputs":[{"name":"cargoCardStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"trainCount","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"status","type":"uint8"}],"name":"setBookDistributionStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"bookId","type":"string"},{"name":"nameBook","type":"string"},{"name":"hash","type":"string"}],"name":"addBook","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"getCardContract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"bookAddress","type":"address"}],"name":"setBookContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"name","type":"string"}],"name":"updateCargoCard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"verificationId","type":"string"}],"name":"getVerificationIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"getEvidenceContract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setCargoCardStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"getBookDistributionContract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setBookStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"name","type":"string"}],"name":"updateTrain","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"}],"name":"evidenceCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getEvidenceInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"},{"name":"status","type":"uint8"}],"name":"setCardStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"}],"name":"bookCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"}],"name":"getTrain","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"cardAddress","type":"address"}],"name":"setCardContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setEvidenceStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"nameBook","type":"string"}],"name":"updateBook","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"bookId","type":"string"}],"name":"getBookKey","outputs":[{"name":"","type":"string"},{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getBookInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"index","type":"uint256"}],"name":"getVerificationStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"bookId","type":"string"},{"name":"staffId","type":"string"}],"name":"getBookDistributionStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"evidenceId","type":"string"},{"name":"evidenceName","type":"string"},{"name":"hash","type":"string"}],"name":"addEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerTrain","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerVerification","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerCargoCard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerBook","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidence","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidenceStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"name","type":"string"},{"name":"hash","type":"string"}],"name":"addTrain","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"index","type":"uint256"}],"name":"getVerification","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"evidenceId","type":"string"}],"name":"getEvidenceIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerCard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getVerificationContract","outputs":[{"name":"verificationStoreAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"},{"name":"status","type":"uint8"}],"name":"getCardInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"}],"name":"getBookContract","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"bookId","type":"string"},{"name":"staffId","type":"string"},{"name":"hash","type":"string"}],"name":"addBookDistribution","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"}],"name":"getCardStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"index","type":"uint256"}],"name":"getBookStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"index","type":"uint256"}],"name":"getCargoCard","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"},{"name":"status","type":"uint8"}],"name":"getTrainInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookName","type":"string"},{"name":"bookId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getVerificationInfo","outputs":[{"name":"date","type":"uint256"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"}],"name":"getCard","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"},{"name":"name","type":"string"},{"name":"hash","type":"string"}],"name":"addCargoCard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"cargoCardId","type":"string"},{"name":"nameCard","type":"string"}],"name":"updateCard","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"string"}],"name":"cargoCardCount","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"name","type":"string"},{"name":"parentId","type":"string"},{"name":"index","type":"uint256"},{"name":"evidenceName","type":"string"}],"name":"updateEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"verificationStoreAddress","type":"address"}],"name":"setVerificationContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainAddress","type":"address"}],"name":"setTrainContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"name","type":"string"},{"name":"trainId","type":"string"},{"name":"index","type":"uint256"}],"name":"getBook","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055615c7e806100306000396000f30060606040526004361061036a5763ffffffff60e060020a600035041662a29f5b811461036f57806306a05c84146104ca5780630ba62561146105265780630c775b331461064657806314ce5545146106eb57806317ecfeb51461080e5780631a6a5a4f146108855780631e30c6d1146108e65780631f98a56114610915578063209d5fb1146109b257806322bd4fe414610a0857806322f291f314610a955780632648495b14610bee57806328d83c4614610d465780632db994dd14610da25780633081483014610dc15780633b9fb74a14610e1c5780633c320d6214610eaf5780633cfefa4614610ec25780633ebb440814610ed55780634137197214610faf578063441bcd1914611108578063442df079146111595780634a9b0342146111b55780634fb2e45d1461125157806351123e29146112705780635a3eac16146113455780635b207e42146113965780635cbf438d146113f15780635d21fe96146114425780635e2a6196146114df57806365554e77146115725780636a379074146116055780636bc57a12146116e65780636cea3a3b146117835780636f7056571461185d57806372f3a367146118f057806377a28bd71461194157806378a44f7f1461196f578063818ed8fe146119cb5780638cd35f4914611a685780638dc46ecc14611b465780638f32d59b14611c1b57806396bb955814611c2e578063983e9b9814611ccb57806399db5e1d14611d605780639dce466714611e455780639eca999814611f9e5780639f1759901461203d578063a2f2d0ea1461211e578063a3abd7f2146121bd578063a96960b81461229e578063ae8ff06114612414578063b4896d8f146124b9578063bb03341f1461258e578063c0f74be9146125ad578063c40fa65e14612642578063c6b7803514612717578063ccf5662d1461283a578063d91c01f61461284d578063da68a41714612927578063dbf30aa814612978578063dd9fd5da146129a8578063e0bc0069146129bb578063e597173b14612ad2578063e5accf6f14612ba7578063ea13737414612c52578063eabcedd814612ca5578063ecbbca2414612cfb578063ee485a5f14612d98578063efb39e0014612e6d578063f27bf66f14612f84578063f28e9da01461309b578063fa423dd3146130ec578063fb48d6be146131ca578063fba77167146131e9578063fe88bac014613208575b600080fd5b341561037a57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061329d95505050505050565b005b34156104d557600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a0316925061339a915050565b341561053157600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061343695505050505050565b341561065157600080fd5b6106d960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061350d95505050505050565b60405190815260200160405180910390f35b34156106f657600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061359895505050505050565b341561081957600080fd5b61086160046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050933593506136ae92505050565b6040518082600281111561087157fe5b60ff16815260200191505060405180910390f35b341561089057600080fd5b6108d660046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061371095505050505050565b6040518082600181111561087157fe5b34156108f157600080fd5b6108f961378c565b604051600160a060020a03909116815260200160405180910390f35b341561092057600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061379c92505050565b34156109bd57600080fd5b6104c860046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff169250613846915050565b3415610a1357600080fd5b610a1e6004356138c7565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015610a5a578082015183820152602001610a42565b50505050905090810190601f168015610a875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3415610aa057600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061394a95505050505050565b3415610bf957600080fd5b610cc860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff169250613a0e915050565b60405182815260406020820181815290820183818151815260200191508051906020019080838360005b83811015610d0a578082015183820152602001610cf2565b50505050905090810190601f168015610d375780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3415610d5157600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a03169250613b4a915050565b3415610dad57600080fd5b6104c8600160a060020a0360043516613bc9565b3415610dcc57600080fd5b610cc860046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff169350613c0b92505050565b3415610e2757600080fd5b6106d960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650613cd095505050505050565b3415610eba57600080fd5b6108f9613d7f565b3415610ecd57600080fd5b6106d9613d8e565b3415610ee057600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff169250613df7915050565b3415610fba57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650613efa95505050505050565b341561111357600080fd5b6108f960046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650613f0795505050505050565b341561116457600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a03169250613f36915050565b34156111c057600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650613fd295505050505050565b341561125c57600080fd5b6104c8600160a060020a0360043516614079565b341561127b57600080fd5b6106d960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506140bb95505050505050565b341561135057600080fd5b6108f960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061417c95505050505050565b34156113a157600080fd5b6104c860046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061418b92505050565b34156113fc57600080fd5b6108f960046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506141fd95505050505050565b341561144d57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061420c92505050565b34156114ea57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061428995505050505050565b341561157d57600080fd5b6106d960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061430e95505050505050565b341561161057600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f83018190048102019051908101604052818152929190602084018383808284375094965061438495505050505050565b34156116f157600080fd5b610cc860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff1693506143f492505050565b341561178e57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff169250614470915050565b341561186857600080fd5b6106d960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506144df95505050505050565b34156118fb57600080fd5b610a1e60046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506144ee95505050505050565b341561194c57600080fd5b61195b61ffff60043516614575565b604051901515815260200160405180910390f35b341561197a57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050509235600160a060020a031692506145cb915050565b34156119d657600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061466792505050565b3415611a7357600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506146ce95505050505050565b3415611b5157600080fd5b611bd960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061477795505050505050565b60405180806020018381526020018281038252848181518152602001915080519060200190808383600083811015610d0a578082015183820152602001610cf2565b3415611c2657600080fd5b61195b61482e565b3415611c3957600080fd5b610cc860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061484992505050565b3415611cd657600080fd5b6108d660046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965050933593506148da92505050565b3415611d6b57600080fd5b611e3560046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061497095505050505050565b6040518082600481111561087157fe5b3415611e5057600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614a4795505050505050565b3415611fa957600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614a5495505050505050565b341561204857600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f830181900481020190519081016040528181529291906020840183838082843750949650614acf95505050505050565b341561212957600080fd5b6104c860046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f830181900481020190519081016040528181529291906020840183838082843750949650614b8c95505050505050565b34156121c857600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f830181900481020190519081016040528181529291906020840183838082843750949650614c1195505050505050565b34156122a957600080fd5b61233360046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614c9c92505050565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561237457808201518382015260200161235c565b50505050905090810190601f1680156123a15780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156123d75780820151838201526020016123bf565b50505050905090810190601f1680156124045780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b341561241f57600080fd5b6124a960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614d7792505050565b6040518082600081111561087157fe5b34156124c457600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614df395505050505050565b341561259957600080fd5b6104c8600160a060020a0360043516614e8a565b34156125b857600080fd5b61233360046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505093359350614ecc92505050565b341561264d57600080fd5b6106d960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650614fc295505050505050565b341561272257600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061504695505050505050565b341561284557600080fd5b6108f96150be565b341561285857600080fd5b610cc860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505050923560ff1692506150cd915050565b341561293257600080fd5b6108f960046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061515195505050505050565b341561298357600080fd5b61299160ff60043516615160565b60405161ffff909116815260200160405180910390f35b34156129b357600080fd5b6108f9615177565b34156129c657600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061518695505050505050565b3415612add57600080fd5b61086160046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061526395505050505050565b3415612bb257600080fd5b612c3c60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650509335935061529a92505050565b60405160ff909116815260200160405180910390f35b3415612c5d57600080fd5b61233360046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050933593506152a992505050565b3415612cb057600080fd5b610cc860046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff169250615368915050565b3415612d0657600080fd5b610cc860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061542392505050565b3415612da357600080fd5b610a1e60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061552095505050505050565b3415612e7857600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506155e395505050505050565b3415612f8f57600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061568c95505050505050565b34156130a657600080fd5b6106d960046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506156d395505050505050565b34156130f757600080fd5b6104c860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506156f095505050505050565b34156131d557600080fd5b6104c8600160a060020a03600435166156fd565b34156131f457600080fd5b6104c8600160a060020a036004351661573f565b341561321357600080fd5b61233360046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650509335935061578192505050565b6000600560006132ac886157a4565b8152602081019190915260400160002054600454600160a060020a03918216925016637004bbbe826132dd886157a4565b6132e6886157a4565b6132ef886157cf565b6132f8886157a4565b60405160e060020a63ffffffff8816028152600160a060020a0386166004820190815260248201869052604482018590529060640183604080838360005b8381101561334e578082015183820152602001613336565b5050505091909101928352505060200193506000925060409150505180830381600087803b151561337e57600080fd5b6102c65a03f1151561338f57600080fd5b505050505050505050565b600080546133b090600160a060020a0316615849565b15156133bb57600080fd5b6133c4836157a4565b6000818152600a6020526040902054909150600160a060020a0316151561340757600b8054600181016133f78382615bd1565b5060009182526020909120018190555b6000908152600a602052604090208054600160a060020a031916600160a060020a039290921691909117905550565b600060056000613445886157a4565b8152602081019190915260400160002054600454600160a060020a03918216925016637fcaae0d82613476886157a4565b87613480886157a4565b613489886157cf565b60405160e060020a63ffffffff8816028152600160a060020a038616600482019081526024820186905260448201859052606482018490529060840182604080838360005b838110156134e65780820151838201526020016134ce565b5050505090500195505050505050600060405180830381600087803b151561337e57600080fd5b600354600090600160a060020a031663d9a23b0d61352a856157a4565b613533856157a4565b60006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b151561357757600080fd5b6102c65a03f1151561358857600080fd5b5050506040518051949350505050565b600760006135a5876157a4565b8152602081019190915260400160002054600160a060020a031663337187906135cd866157a4565b856040518082805190602001908083835b602083106135fd5780518252601f1990920191602091820191016135de565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902085613633866157a4565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183600581111561366357fe5b60ff168152602081019290925250604090810193506000925090505180830381600087803b151561369357600080fd5b6102c65a03f115156136a457600080fd5b5050505050505050565b600354600090600160a060020a031663a55f99276136cb856157a4565b8460006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b151561357757600080fd5b600254600090600160a060020a0316635de28ae061372d846157a4565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561376c57600080fd5b6102c65a03f1151561377d57600080fd5b50505060405180519392505050565b600254600160a060020a03165b90565b6000600560006137ab876157a4565b8152602081019190915260400160002054600454600160a060020a03918216925016634cfef301826137dc876157a4565b868660405160e060020a63ffffffff8716028152600160a060020a0385166004820190815260248201859052604482018490529060640182600181111561381f57fe5b60ff168152602001945050505050600060405180830381600087803b151561369357600080fd5b600254600160a060020a0316638de654ba613860846157a4565b8360405160e060020a63ffffffff8516028152600481018381529060240182600181111561388a57fe5b60ff16815260200192505050600060405180830381600087803b15156138af57600080fd5b6102c65a03f115156138c057600080fd5b5050505050565b6138cf615bfa565b60025461394490600160a060020a031663ff94e5028460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561392457600080fd5b6102c65a03f1151561393557600080fd5b50505060405180519050615879565b92915050565b60086000613957876157a4565b8152602081019190915260400160002054600160a060020a03166354cdfd4d61397f866157a4565b613988866157a4565b613991866157cf565b61399a866157a4565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183604080838360005b838110156139df5780820151838201526020016139c7565b50505050919091019283525050602001925060009150604090505180830381600087803b151561369357600080fd5b6000613a18615bfa565b600060076000613a27896157a4565b8152602081019190915260400160002054600160a060020a031663cc21d1e9613a4f886157a4565b876040518082805190602001908083835b60208310613a7f5780518252601f199092019160209182019101613a60565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208760006040516040015260405160e060020a63ffffffff861602815260048082018581526024830185905291604401908390811115613ae657fe5b60ff16815260200193505050506040805180830381600087803b1515613b0b57600080fd5b6102c65a03f11515613b1c57600080fd5b5050506040518051906020018051919450909150839050613b3c82615879565b925092505094509492505050565b60008054613b6090600160a060020a0316615849565b1515613b6b57600080fd5b613b74836157a4565b600081815260056020526040902054909150600160a060020a03161515613b9a57600080fd5b60009081526007602052604090208054600160a060020a031916600160a060020a039290921691909117905550565b600054613bde90600160a060020a0316615849565b1515613be957600080fd5b60038054600160a060020a031916600160a060020a0392909216919091179055565b6000613c15615bfa565b600354600090600160a060020a0316637b5348c9613c32886157a4565b878760006040516040015260405160e060020a63ffffffff8616028152600481018481526024820184905290604401826002811115613c6d57fe5b60ff16815260200193505050506040805180830381600087803b1515613c9257600080fd5b6102c65a03f11515613ca357600080fd5b5050506040518051906020018051919450909150839050613cc382615879565b9250925050935093915050565b60008060056000613ce0866157a4565b8152602081019190915260400160002054600454600160a060020a0391821692501663d185dd4e82613d11866157a4565b60006040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515613d5d57600080fd5b6102c65a03f11515613d6e57600080fd5b505050604051805195945050505050565b600354600160a060020a031690565b600254600090600160a060020a03166306661abd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515613dd857600080fd5b6102c65a03f11515613de957600080fd5b505050604051805191505090565b60076000613e04866157a4565b8152602081019190915260400160002054600160a060020a031663e1730930613e2c856157a4565b846040518082805190602001908083835b60208310613e5c5780518252601f199092019160209182019101613e3d565b6001836020036101000a038019825116818451161790925250505091909101925060409150505180910390208460405160e060020a63ffffffff861602815260048082018581526024830185905291604401908390811115613eba57fe5b60ff1681526020019350505050600060405180830381600087803b1515613ee057600080fd5b6102c65a03f11515613ef157600080fd5b50505050505050565b60056000613957876157a4565b600060086000613f16846157a4565b8152602081019190915260400160002054600160a060020a031692915050565b60008054613f4c90600160a060020a0316615849565b1515613f5757600080fd5b613f60836157a4565b600081815260056020526040902054909150600160a060020a03161515613fa3576006805460018101613f938382615bd1565b5060009182526020909120018190555b60009081526005602052604090208054600160a060020a031916600160a060020a039290921691909117905550565b600354600160a060020a0316637bf03755613fec856157a4565b84613ff6856157cf565b60405160e060020a63ffffffff861602815260048101848152602482018490529060440182604080838360005b8381101561403b578082015183820152602001614023565b505050509050019350505050600060405180830381600087803b151561406057600080fd5b6102c65a03f1151561407157600080fd5b505050505050565b60005461408e90600160a060020a0316615849565b151561409957600080fd5b60008054600160a060020a031916600160a060020a0392909216919091179055565b600080600560006140cb876157a4565b8152602081019190915260400160002054600454600160a060020a039182169250166302dd6353826140fc876157a4565b614105876157a4565b60006040516020015260405160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091526044820152606401602060405180830381600087803b151561415957600080fd5b6102c65a03f1151561416a57600080fd5b50505060405180519695505050505050565b6000600a6000613f16846157a4565b600354600160a060020a031663673e639b6141a5856157a4565b848460405160e060020a63ffffffff86160281526004810184815260248201849052906044018260028111156141d757fe5b60ff1681526020019350505050600060405180830381600087803b151561406057600080fd5b600060076000613f16846157a4565b60056000614219866157a4565b8152602081019190915260400160002054600160a060020a031663673e639b614241856157a4565b848460405160e060020a63ffffffff86160281526004810193909352602483019190915260ff166044820152606401600060405180830381600087803b1515613ee057600080fd5b600254600160a060020a0316633284bb5a6142a3846157a4565b6142ac846157cf565b60405160e060020a63ffffffff8516028152600481018381529060240182604080838360005b838110156142ea5780820151838201526020016142d2565b5050505090500192505050600060405180830381600087803b15156138af57600080fd5b6000600a600061431d856157a4565b8152602081019190915260400160002054600160a060020a0316637937354c614345846157a4565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561357757600080fd5b600a6000614391876157a4565b8152602081019190915260400160002054600160a060020a031663b7973ad96143b9866157a4565b85856143c4866157a4565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183600181111561366357fe5b60006143fe615bfa565b6000600a600061440d896157a4565b8152602081019190915260400160002054600160a060020a0316637b5348c9614435886157a4565b878760006040516040015260405160e060020a63ffffffff8616028152600481018481526024820184905290604401826000811115613ae657fe5b6008600061447d866157a4565b8152602081019190915260400160002054600160a060020a031663e17309306144a5856157a4565b6144ae856157a4565b8460405160e060020a63ffffffff8616028152600481018481526024820184905290604401826002811115613eba57fe5b60006005600061431d856157a4565b6144f6615bfa565b60025461394490600160a060020a0316638eaa6ac0614514856157a4565b60006040516040015260405160e060020a63ffffffff841602815260048101919091526024016040805180830381600087803b151561455257600080fd5b6102c65a03f1151561456357600080fd5b505050604051806040016040526159bc565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561376c57600080fd5b600080546145e190600160a060020a0316615849565b15156145ec57600080fd5b6145f5836157a4565b600081815260086020526040902054909150600160a060020a031615156146385760098054600181016146288382615bd1565b5060009182526020909120018190555b60009081526008602052604090208054600160a060020a031916600160a060020a039290921691909117905550565b600a6000614674866157a4565b8152602081019190915260400160002054600160a060020a031663673e639b61469c856157a4565b848460405160e060020a63ffffffff8616028152600481018481526024820184905290604401826000811115613eba57fe5b600560006146db866157a4565b8152602081019190915260400160002054600160a060020a0316637bf03755614703856157a4565b8461470d856157cf565b60405160e060020a63ffffffff861602815260048101848152602482018490529060440182604080838360005b8381101561475257808201518382015260200161473a565b505050509050019350505050600060405180830381600087803b1515613ee057600080fd5b61477f615bfa565b6000806005600061478f876157a4565b8152602081019190915260400160002054600160a060020a031663189363146147b7866157a4565b60006040516040015260405160e060020a63ffffffff841602815260048101919091526024016040805180830381600087803b15156147f557600080fd5b6102c65a03f1151561480657600080fd5b50505060405180519060200180519350909150614824905081615879565b9250509250929050565b6000805461484490600160a060020a0316615849565b905090565b6000614853615bfa565b600060056000614862896157a4565b8152602081019190915260400160002054600160a060020a0316637b5348c961488a886157a4565b878760006040516040015260405160e060020a63ffffffff86160281526004810193909352602483019190915260ff1660448201526064016040805180830381600087803b1515613b0b57600080fd5b600080600560006148ea876157a4565b8152602081019190915260400160002054600454600160a060020a0391821692501663bdad86bd8261491b876157a4565b8660006040516020015260405160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091526044820152606401602060405180830381600087803b151561415957600080fd5b60006007600061497f866157a4565b8152602081019190915260400160002054600160a060020a0316638e56ee2c6149a7856157a4565b846040518082805190602001908083835b602083106149d75780518252601f1990920191602091820191016149b8565b6001836020036101000a0380198251168184511617909252505050919091019250604091505051809103902060006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515613d5d57600080fd5b600a6000613957876157a4565b600254600160a060020a031663c704fb7d614a6e856157a4565b84614a78856157a4565b60405160e060020a63ffffffff86160281526004810184815290602401836002811115614aa157fe5b60ff16815260208101929092525060409081019250600091505180830381600087803b151561406057600080fd5b600060056000614ade886157a4565b8152602081019190915260400160002054600454600160a060020a0391821692501663581bd36a82614b0f886157a4565b8787614b1a886157a4565b60405160e060020a63ffffffff8816028152600160a060020a03861660048201908152602482018690526044820185905290606401836002811115614b5b57fe5b60ff16815260208101929092525060409081019450600093509150505180830381600087803b151561337e57600080fd5b600354600160a060020a031663b7973ad9614ba6866157a4565b8585614bb1866157a4565b60405160e060020a63ffffffff8716028152600481018581526024820185905290604401836003811115614be157fe5b60ff168152602081019290925250604090810193506000925090505180830381600087803b1515613ee057600080fd5b60056000614c1e876157a4565b8152602081019190915260400160002054600160a060020a031663b7973ad9614c46866157a4565b8585614c51866157a4565b60405160e060020a63ffffffff87160281526004810194909452602484019290925260ff1660448301526064820152608401600060405180830381600087803b151561369357600080fd5b614ca4615bfa565b614cac615bfa565b6000614cb6615c0c565b600a6000614cc3896157a4565b8152602081019190915260400160002054600160a060020a03166318ae19c2614ceb886157a4565b8760006040516060015260405160e060020a63ffffffff851602815260048101929092526024820152604401606060405180830381600087803b1515614d3057600080fd5b6102c65a03f11515614d4157600080fd5b50505060405180516060820160405292506020019050614d6082615879565b614d69826159bc565b935093505050935093915050565b6000600a6000614d86866157a4565b8152602081019190915260400160002054600160a060020a031663a55f9927614dae856157a4565b8460006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515613d5d57600080fd5b600254600160a060020a03166381edaf90614e0d856157a4565b614e16856157cf565b614e1f856157a4565b60405160e060020a63ffffffff8616028152600481018481529060240183604080838360005b83811015614e5d578082015183820152602001614e45565b5050505091909101928352505060200191506000905060405180830381600087803b151561406057600080fd5b600054614e9f90600160a060020a0316615849565b1515614eaa57600080fd5b60018054600160a060020a031916600160a060020a0392909216919091179055565b614ed4615bfa565b614edc615bfa565b600080614ee7615c0c565b60056000614ef48a6157a4565b8152602081019190915260400160002054600454600160a060020a03918216945016639ca8cf1f84614f258a6157a4565b8960006040516060015260405160e060020a63ffffffff8616028152600160a060020a03909316600484015260248301919091526044820152606401606060405180830381600087803b1515614f7a57600080fd5b6102c65a03f11515614f8b57600080fd5b50505060405180516060820160405292506020019050614faa82615879565b614fb3826159bc565b94509450505050935093915050565b6000600a6000614fd1866157a4565b8152602081019190915260400160002054600160a060020a031663dd088d64614ff9856157a4565b615002856157a4565b60006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b1515613d5d57600080fd5b60086000615053876157a4565b8152602081019190915260400160002054600160a060020a0316633371879061507b866157a4565b615084866157a4565b8561508e866157a4565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183600381111561366357fe5b600454600160a060020a031690565b60006150d7615bfa565b6000600860006150e6896157a4565b8152602081019190915260400160002054600160a060020a031663cc21d1e961510e886157a4565b615117886157a4565b8760006040516040015260405160e060020a63ffffffff8616028152600481018481526024820184905290604401826002811115613ae657fe5b600060056000613f16846157a4565b600081600381111561516e57fe5b60020a92915050565b600154600160a060020a031690565b60076000615193866157a4565b8152602081019190915260400160002054600160a060020a03166342de838d6151bb856157a4565b846040518082805190602001908083835b602083106151eb5780518252601f1990920191602091820191016151cc565b6001836020036101000a03801982511681845116179092525050509190910192506040915050518091039020615220856157a4565b60405160e060020a63ffffffff8616028152600481019390935260248301919091526044820152606401600060405180830381600087803b1515613ee057600080fd5b600060086000615272866157a4565b8152602081019190915260400160002054600160a060020a0316638e56ee2c614ff9856157a4565b600060056000614d86866157a4565b6152b1615bfa565b6152b9615bfa565b60006152c3615c0c565b600354600160a060020a03166318ae19c26152dd886157a4565b8760006040516060015260405160e060020a63ffffffff851602815260048101929092526024820152604401606060405180830381600087803b151561532257600080fd5b6102c65a03f1151561533357600080fd5b5050506040518051606082016040529250602001905061535282615879565b61535b826159bc565b9350935050509250929050565b6000615372615bfa565b600254600090600160a060020a0316634bd5322b61538f876157a4565b8660006040516040015260405160e060020a63ffffffff851602815260048101838152906024018260018111156153c257fe5b60ff168152602001925050506040805180830381600087803b15156153e657600080fd5b6102c65a03f115156153f757600080fd5b505050604051805190602001805191945090915083905061541782615879565b92509250509250929050565b600061542d615bfa565b6000806005600061543d8a6157a4565b8152602081019190915260400160002054600454600160a060020a039182169350166310bb2c368361546e8a6157a4565b898960006040516040015260405160e060020a63ffffffff8716028152600160a060020a038516600482019081526024820185905260448201849052906064018260018111156154ba57fe5b60ff1681526020019450505050506040805180830381600087803b15156154e057600080fd5b6102c65a03f115156154f157600080fd5b505050604051805190602001805191955090915084905061551182615879565b93509350505094509492505050565b615528615bfa565b615530615c0c565b6008600061553d876157a4565b8152602081019190915260400160002054600160a060020a031663658cc1f6615565866157a4565b61556e866157a4565b60006040516040015260405160e060020a63ffffffff8516028152600481019290925260248201526044016040805180830381600087803b15156155b157600080fd5b6102c65a03f115156155c257600080fd5b5050506040518060400160405290506155da816159bc565b95945050505050565b600354600160a060020a03166354cdfd4d6155fd866157a4565b615606866157a4565b61560f866157cf565b615618866157a4565b60405160e060020a63ffffffff871602815260048101858152602482018590529060440183604080838360005b8381101561565d578082015183820152602001615645565b50505050919091019283525050602001925060009150604090505180830381600087803b1515613ee057600080fd5b60086000615699866157a4565b8152602081019190915260400160002054600160a060020a03166350e49a226156c1856157a4565b6156ca856157a4565b61470d856157cf565b600354600090600160a060020a0316637937354c61372d846157a4565b600a60006146db866157a4565b60005461571290600160a060020a0316615849565b151561571d57600080fd5b60048054600160a060020a031916600160a060020a0392909216919091179055565b60005461575490600160a060020a0316615849565b151561575f57600080fd5b60028054600160a060020a031916600160a060020a0392909216919091179055565b615789615bfa565b615791615bfa565b600061579b615c0c565b60056000614cc3895b60006157ae615bfa565b5081805115156157c157600091506157c9565b602083015191505b50919050565b6157d7615c0c565b6157df615c0c565b600080845191506020821115615834576158046157ff8660006020615b2c565b6157a4565b835250601f19810161582a6157ff8660208085116158225784615825565b60205b615b2c565b6020840152615840565b61583d856157a4565b83525b50909392505050565b600081600160a060020a031633600160a060020a0316148061394457505032600160a060020a0390811691161490565b615881615bfa565b615889615bfa565b6000806000615896615bfa565b6000604080518059106158a65750595b818152601f19601f830116810160200160405290509550600093505b6020841015615935576008840260020a880292507fff0000000000000000000000000000000000000000000000000000000000000083161561592a578286868151811061590b57fe5b906020010190600160f860020a031916908160001a9053506001850194505b6001909301926158c2565b846040518059106159435750595b818152601f19601f830116810160200160405290509150600090505b848110156159b15785818151811061597357fe5b016020015160f860020a900460f860020a0282828151811061599157fe5b906020010190600160f860020a031916908160001a90535060010161595f565b509695505050505050565b6159c4615bfa565b6159cc615bfa565b6000806000806159da615bfa565b604080518059106159e85750595b818152601f19601f830116810160200160405290509550600093505b6002841015615aa257600092505b6020831015615a97578260080260020a8885600281101515615a3057fe5b60200201510291507fff00000000000000000000000000000000000000000000000000000000000000821615615a8c5781868681518110615a6d57fe5b906020010190600160f860020a031916908160001a9053506001850194505b600190920191615a12565b600190930192615a04565b84604051805910615ab05750595b818152601f19601f830116810160200160405290509050600093505b84841015615b2157858481518110615ae057fe5b016020015160f860020a900460f860020a02818581518110615afe57fe5b906020010190600160f860020a031916908160001a905350600190930192615acc565b979650505050505050565b615b34615bfa565b615b3c615bfa565b615b44615bfa565b600086925084604051805910615b575750595b818152601f19601f830116810160200160405290509150600090505b84811015615bc7578281870181518110615b8957fe5b016020015160f860020a900460f860020a02828281518110615ba757fe5b906020010190600160f860020a031916908160001a905350600101615b73565b5095945050505050565b815481835581811511615bf557600083815260209020615bf5918101908301615c34565b505050565b60206040519081016040526000815290565b604080519081016040526002815b60008152600019919091019060200181615c1a5790505090565b61379991905b80821115615c4e5760008155600101615c3a565b50905600a165627a7a723058207fa73b3026f14f482a95b3b60a5c5dafc9ed6b44a96e5d52c9d5d61add5d84f80029"};

var TrainStoreCompiled = {"abi":[{"constant":true,"inputs":[],"name":"count","outputs":[{"name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"}],"name":"get","outputs":[{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getIdByIndex","outputs":[{"name":"trainId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610ca6806100306000396000f3006060604052600436106100e25763ffffffff60e060020a60003504166306661abd81146100e75780633284bb5a1461010c5780634bd5322b1461014e5780634fb2e45d146101825780635de28ae0146101a157806377a28bd7146101db57806381edaf9014610209578063848a423f1461024b5780638de654ba146102a05780638eaa6ac0146102bc5780638f32d59b1461030a578063a3684f001461031d578063bb03341f1461034d578063c704fb7d1461036c578063dbf30aa81461038b578063dd9fd5da146103bb578063f7ff1b6a146103ea578063ff94e50214610409575b600080fd5b34156100f257600080fd5b6100fa61041f565b60405190815260200160405180910390f35b341561011757600080fd5b61014c600480359060646024600260408051908101604052809291908260026020028082843750939550610426945050505050565b005b341561015957600080fd5b61016a60043560ff60243516610469565b60405191825260208201526040908101905180910390f35b341561018d57600080fd5b61014c600160a060020a03600435166104c8565b34156101ac57600080fd5b6101b7600435610517565b604051808260018111156101c757fe5b60ff16815260200191505060405180910390f35b34156101e657600080fd5b6101f561ffff6004351661052f565b604051901515815260200160405180910390f35b341561021457600080fd5b61014c60048035906064602460026040805190810160405280929190826002602002808284375093955050923592506105a5915050565b341561025657600080fd5b61026a60ff60043581169060243516610699565b60405161ffff841681526020810183600181111561028457fe5b60ff168152602001828152602001935050505060405180910390f35b34156102ab57600080fd5b61014c60043560ff6024351661070a565b34156102c757600080fd5b6102d260043561074e565b6040518082604080838360005b838110156102f75780820151838201526020016102df565b5050505090500191505060405180910390f35b341561031557600080fd5b6101f56107b5565b341561032857600080fd5b61014c60ff60043581169060243581169061ffff6044351690606435166084356107d0565b341561035857600080fd5b61014c600160a060020a036004351661090e565b341561037757600080fd5b61014c60043560ff6024351660443561095d565b341561039657600080fd5b6103a460ff60043516610a4f565b60405161ffff909116815260200160405180910390f35b34156103c657600080fd5b6103ce610a66565b604051600160a060020a03909116815260200160405180910390f35b34156103f557600080fd5b61014c600160a060020a0360043516610a75565b341561041457600080fd5b6100fa600435610b29565b6003545b90565b61042f82610b5b565b151561043a57600080fd5b805115610465576000828152600260208190526040909120610463916001909101908390610bd4565b505b5050565b6000828152600260205260408120819060030183600181111561048857fe5b6002811061049257fe5b015460008581526002602052604090206005018460018111156104b157fe5b600281106104bb57fe5b0154915091509250929050565b6000546104dd90600160a060020a0316610b7a565b15156104e857600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60009081526002602052604090206007015460ff1690565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561058557600080fd5b6102c65a03f1151561059657600080fd5b50505060405180519392505050565b60006105b16003610a4f565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561060557600080fd5b6102c65a03f1151561061657600080fd5b50505060405180519050151561062b57600080fd5b61063485610b5b565b1561063e57600080fd5b600085815260026020819052604090912086815592506106649060018401908690610bd4565b5060038054600181016106778382610c14565b5060009182526020909120018590556106928560018561095d565b5050505050565b600080600080600460008760028111156106af57fe5b60ff1660ff16815260200190815260200160002060008660018111156106d157fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b61071382610b5b565b151561071e57600080fd5b6000828152600260205260409020600701805482919060ff19166001838181111561074557fe5b02179055505050565b610756610c38565b61075f82610b5b565b151561076a57600080fd5b6000828152600260208190526040918290206001019180519081016040529190828260026020028201915b815481526001909101906020018083116107955750505050509050919050565b600080546107cb90600160a060020a0316610b7a565b905090565b6107da6003610a4f565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561082e57600080fd5b6102c65a03f1151561083f57600080fd5b50505060405180519050151561085457600080fd5b6060604051908101604052808561ffff16815260200184600181111561087657fe5b81526020018390526004600088600281111561088e57fe5b60ff1660ff16815260200190815260200160002060008760018111156108b057fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360018111156108f557fe5b0217905550604082015160019091015550505050505050565b60005461092390600160a060020a0316610b7a565b151561092e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008061096985610b5b565b151561097457600080fd5b60008581526002602081905260408220935060049190869081111561099557fe5b60ff908116825260208201929092526040016000908120600785015490921660018111156109bf57fe5b60ff1681526020810191909152604001600020805490915061ffff1615156109e657610692565b6109ef81610bb3565b80546007830180546201000090920460ff169160ff191660018381811115610a1357fe5b021790555042826003018260010154600281101515610a2e57fe5b015560018101548390600584019060028110610a4657fe5b01555050505050565b6000816003811115610a5d57fe5b60020a92915050565b600154600160a060020a031690565b610a7f6003610a4f565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610ad357600080fd5b6102c65a03f11515610ae457600080fd5b505050604051805190501515610af957600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6003546000908210610b3a57600080fd5b6003805483908110610b4857fe5b9060005260206000209001549050919050565b600081815260026020526040812054610b7390610bd0565b1592915050565b600081600160a060020a031633600160a060020a03161480610bad575081600160a060020a031632600160a060020a0316145b92915050565b8054610bc29061ffff1661052f565b1515610bcd57600080fd5b50565b1590565b8260028101928215610c04579160200282015b82811115610c045782518255602090920191600190910190610be7565b50610c10929150610c60565b5090565b81548183558181151161046357600083815260209020610463918101908301610c60565b604080519081016040526002815b60008152600019919091019060200181610c465790505090565b61042391905b80821115610c105760008155600101610c665600a165627a7a72305820c7a5f38908fc28b813140a842ef9adb47ddbcb221b4e12cf53a7bb50430f2eec0029"};

var RuleBookStoreCompiled = {"abi":[{"constant":true,"inputs":[],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"_name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"exists","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"promoStatus","type":"uint16"}],"name":"isValidState","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"position","type":"uint8"}],"name":"getInfo","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"_status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"get","outputs":[{"name":"","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getIdByIndex","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610c7b806100306000396000f3006060604052600436106100f85763ffffffff60e060020a60003504166306661abd81146100fd5780633284bb5a1461012257806338a699a414610164578063445dad2e1461018e5780634bd5322b146101ab5780634fb2e45d146101df5780635de28ae0146101fe57806377a28bd71461023857806381edaf9014610252578063848a423f146102945780638de654ba146102e95780638eaa6ac0146103055780638f32d59b14610353578063a3684f0014610366578063bb03341f14610396578063c704fb7d146103b5578063dbf30aa8146103d4578063dd9fd5da14610404578063f7ff1b6a14610433578063ff94e50214610452575b600080fd5b341561010857600080fd5b610110610468565b60405190815260200160405180910390f35b341561012d57600080fd5b61016260048035906064602460026040805190810160405280929190826002602002808284375093955061046f945050505050565b005b341561016f57600080fd5b61017a6004356104aa565b604051901515815260200160405180910390f35b341561019957600080fd5b61017a60043561ffff602435166104bb565b34156101b657600080fd5b6101c760043560ff602435166104f0565b60405191825260208201526040908101905180910390f35b34156101ea57600080fd5b610162600160a060020a0360043516610545565b341561020957600080fd5b610214600435610594565b6040518082600381111561022457fe5b60ff16815260200191505060405180910390f35b341561024357600080fd5b61017a61ffff600435166105ac565b341561025d57600080fd5b6101626004803590606460246002604080519081016040528092919082600260200280828437509395505092359250610622915050565b341561029f57600080fd5b6102b360ff6004358116906024351661069d565b60405161ffff84168152602081018360038111156102cd57fe5b60ff168152602001828152602001935050505060405180910390f35b34156102f457600080fd5b61016260043560ff6024351661070e565b341561031057600080fd5b61031b600435610753565b6040518082604080838360005b83811015610340578082015183820152602001610328565b5050505090500191505060405180910390f35b341561035e57600080fd5b61017a6107a6565b341561037157600080fd5b61016260ff60043581169060243581169061ffff6044351690606435166084356107c1565b34156103a157600080fd5b610162600160a060020a03600435166108fe565b34156103c057600080fd5b61016260043560ff6024351660443561094d565b34156103df57600080fd5b6103ed60ff600435166109f3565b60405161ffff909116815260200160405180910390f35b341561040f57600080fd5b610417610a0a565b604051600160a060020a03909116815260200160405180910390f35b341561043e57600080fd5b610162600160a060020a0360043516610a19565b341561045d57600080fd5b610110600435610acd565b6003545b90565b61047882610aff565b151561048357600080fd5b60008281526002602081905260409091206104a5916001909101908390610ba9565b505050565b60006104b582610aff565b92915050565b6000828152600260205260408120600b01548190839060ff1660038111156104df57fe5b60020a1661ffff1611905092915050565b60008281526002602052604081208190600380820190859081111561051157fe5b6004811061051b57fe5b01548160070185600381111561052d57fe5b6004811061053757fe5b015492509250509250929050565b60005461055a90600160a060020a0316610b12565b151561056557600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000908152600260205260409020600b015460ff1690565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561060257600080fd5b6102c65a03f1151561061357600080fd5b50505060405180519392505050565b600061062d84610aff565b1561063757600080fd5b5060008381526002602081905260409091208481559061065d9060018301908590610ba9565b50600b8101805460ff191690556106768460018461094d565b60038054600181016106888382610be9565b50600091825260209091200193909355505050565b600080600080600460008760048111156106b357fe5b60ff1660ff16815260200190815260200160002060008660038111156106d557fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b61071782610aff565b151561072257600080fd5b6000828152600260205260409020600b01805482919060ff1916600183600381111561074a57fe5b02179055505050565b61075b610c0d565b6000828152600260208190526040918290206001019180519081016040529190828260026020028201915b815481526001909101906020018083116107865750505050509050919050565b600080546107bc90600160a060020a0316610b12565b905090565b6107cb60036109f3565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561081f57600080fd5b6102c65a03f1151561083057600080fd5b50505060405180519050151561084557600080fd5b6060604051908101604052808561ffff16815260200184600381111561086757fe5b815260200183905260046000888281111561087e57fe5b60ff1660ff16815260200190815260200160002060008760038111156108a057fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360038111156108e557fe5b0217905550604082015160019091015550505050505050565b60005461091390600160a060020a0316610b12565b151561091e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008061095985610aff565b151561096457600080fd5b60008581526002602052604081209250600490858281111561098257fe5b60ff908116825260208201929092526040016000908120600b85015490921660038111156109ac57fe5b60ff1660ff16815260200190815260200160002090506109cb81610b42565b6109ec828260000160029054906101000a900460ff16836001015486610b5f565b5050505050565b6000816003811115610a0157fe5b60020a92915050565b600154600160a060020a031690565b610a2360036109f3565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610a7757600080fd5b6102c65a03f11515610a8857600080fd5b505050604051805190501515610a9d57600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6003546000908210610ade57600080fd5b6003805483908110610aec57fe5b9060005260206000209001549050919050565b6000818152600260205260409020541490565b600081600160a060020a031633600160a060020a031614806104b557505032600160a060020a0390811691161490565b8054610b519061ffff166105ac565b1515610b5c57600080fd5b50565b600b8401805484919060ff19166001836003811115610b7a57fe5b021790555042600385018360048110610b8f57fe5b015580600785018360048110610ba157fe5b015550505050565b8260028101928215610bd9579160200282015b82811115610bd95782518255602090920191600190910190610bbc565b50610be5929150610c35565b5090565b8154818355818115116104a5576000838152602090206104a5918101908301610c35565b604080519081016040526002815b60008152600019919091019060200181610c1b5790505090565b61046c91905b80821115610be55760008155600101610c3b5600a165627a7a7230582060f0c2fb4a0024bec2e4fabdecf0b281b9fa741028a7b64fe678dada1e0dc9f10029"};

var RouteBookStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"getBookKey","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"exists","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"trainStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"promoStatus","type":"uint16"}],"name":"isValidState","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"bookId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"}],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055611098806100306000396000f3006060604052600436106100f85763ffffffff60e060020a6000350416631893631481146100fd57806318ae19c21461012b57806338a699a41461018357806342088fab146101ad578063445dad2e146101e65780634fb2e45d1461020357806354cdfd4d14610222578063673e639b1461026857806377a28bd7146102875780637937354c146102a15780637b5348c9146102c95780637bf03755146102e8578063848a423f1461032c5780638f32d59b1461037c578063a55f99271461038f578063b7973ad9146103be578063bb03341f146103e0578063dbf30aa8146103ff578063dd9fd5da1461042f578063f7ff1b6a1461045e575b600080fd5b341561010857600080fd5b61011360043561047d565b60405191825260208201526040908101905180910390f35b341561013657600080fd5b610144600435602435610497565b6040518281526020810182604080838360005b8381101561016f578082015183820152602001610157565b505050509050019250505060405180910390f35b341561018e57600080fd5b610199600435610518565b604051901515815260200160405180910390f35b34156101b857600080fd5b6101e460ff60043581169060243581169061ffff60443581169160643516906084359060a43516610529565b005b34156101f157600080fd5b61019960043561ffff60243516610657565b341561020e57600080fd5b6101e4600160a060020a03600435166106b4565b341561022d57600080fd5b6101e4600480359060243590608460446002604080519081016040528092919082600260200280828437509395505092359250610703915050565b341561027357600080fd5b6101e460043560243560ff604435166107da565b341561029257600080fd5b61019961ffff60043516610854565b34156102ac57600080fd5b6102b76004356108ca565b60405190815260200160405180910390f35b34156102d457600080fd5b61011360043560243560ff604435166108dc565b34156102f357600080fd5b6101e460048035906024359060846044600260408051908101604052809291908260026020028082843750939550610941945050505050565b341561033757600080fd5b61034b60ff600435811690602435166109b2565b60405161ffff948516815260ff90931660208401526040808401929092529092166060820152608001905180910390f35b341561038757600080fd5b610199610a2f565b341561039a57600080fd5b6103a8600435602435610a4b565b60405160ff909116815260200160405180910390f35b34156103c957600080fd5b6101e460043560243560ff60443516606435610a8c565b34156103eb57600080fd5b6101e4600160a060020a0360043516610b42565b341561040a57600080fd5b61041860ff60043516610b91565b60405161ffff909116815260200160405180910390f35b341561043a57600080fd5b610442610ba8565b604051600160a060020a03909116815260200160405180910390f35b341561046957600080fd5b6101e4600160a060020a0360043516610bb7565b600090815260036020526040902080546001909101549091565b60006104a1610f37565b60008481526002602052604081208054859081106104bb57fe5b90600052602060002090600e02019050806000015481600101806002806020026040519081016040529190828260026020028201915b815481526001909101906020018083116104f1575050505050905092509250509250929050565b600061052382610c6b565b92915050565b6105336003610b91565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561058757600080fd5b6102c65a03f1151561059857600080fd5b5050506040518051905015156105ad57600080fd5b6080604051908101604090815261ffff808816835260ff80881660208086019190915283850188905291861660608501528a8116600090815260048352838120918b1681529152208151815461ffff191661ffff919091161781556020820151815460ff91909116620100000262ff000019909116178155604082015181600101556060820151600291909101805461ffff191661ffff9092169190911790555050505050505050565b600082815260036020908152604080832080548452600290925282206001820154815484929190811061068657fe5b600091825260208220600e9190910201600d015460ff1660020a9490941661ffff1693909311949350505050565b6000546106c990600160a060020a0316610c8c565b15156106d457600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600061071187610cbc565b151561071c57600080fd5b61072586610c6b565b1561072f57600080fd5b600087815260026020526040902080549093509150816107528460018301610f5f565b50828281548110151561076157fe5b60009182526020909120600e90910201868155905061078560018201866002610f90565b50600d8101805460ff1916905561079f8783600187610a8c565b604080519081016040908152888252602080830185905260008981526003909152208151815560208201516001909101555050505050505050565b6107e383610cbc565b15156107ee57600080fd5b60008381526002602052604090205482901161080957600080fd5b600083815260026020526040902080548291908490811061082657fe5b90600052602060002090600e0201600d0160006101000a81548160ff021916908360ff160217905550505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156108aa57600080fd5b6102c65a03f115156108bb57600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b6000838152600260205260408120805482918291869081106108fa57fe5b90600052602060002090600e02019050806003018460ff1660058110151561091e57fe5b01546008820160ff86166005811061093257fe5b01549250925050935093915050565b61094a83610cbc565b151561095557600080fd5b60008381526002602052604090205482901161097057600080fd5b600083815260026020526040902080548291908490811061098d57fe5b90600052602060002090600e02016001019060026109ac929190610f90565b50505050565b6000806000806000600460008860058111156109ca57fe5b60ff1660ff16815260200190815260200160002060008760048111156109ec57fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60008054610a4590600160a060020a0316610c8c565b90505b90565b6000828152600260205260408120805482919084908110610a6857fe5b60009182526020909120600e90910201600d81015460ff16925090505b5092915050565b600080610a9886610cbc565b1515610aa357600080fd5b600086815260026020526040902054859011610abe57600080fd5b6000868152600260205260409020805486908110610ad857fe5b6000918252602080832060ff8089168552600483526040808620600d600e90960290930194850154909116855291529091209092509050610b198187610db5565b610b3a828260000160029054906101000a900460ff16836001015486610df1565b505050505050565b600054610b5790600160a060020a0316610c8c565b1515610b6257600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000816003811115610b9f57fe5b60020a92915050565b600154600160a060020a031690565b610bc16003610b91565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610c1557600080fd5b6102c65a03f11515610c2657600080fd5b505050604051805190501515610c3b57600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008181526003602052604081208054610c8490610e2c565b159392505050565b600081600160a060020a031633600160a060020a0316148061052357505032600160a060020a0390811691161490565b6005546000908190600160a060020a0316631e30c6d182604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610d0857600080fd5b6102c65a03f11515610d1957600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826001811115610d6557fe5b60ff168152602001925050506040805180830381600087803b1515610d8957600080fd5b6102c65a03f11515610d9a57600080fd5b50505060405180519060200180515050600090119392505050565b8154610dc49061ffff16610854565b1515610dcf57600080fd5b6002820154610de29061ffff1682610e30565b1515610ded57600080fd5b5050565b600d8401805460ff191660ff851617905542600385018360058110610e1257fe5b015580600885018360058110610e2457fe5b015550505050565b1590565b60008060008461ffff161115610f2d57600554600160a060020a0316631e30c6d16000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610e8857600080fd5b6102c65a03f11515610e9957600080fd5b50505060405180519050600160a060020a0316635de28ae08460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610ef157600080fd5b6102c65a03f11515610f0257600080fd5b505050604051805190506001811115610f1757fe5b90506000848260020a1661ffff16119150610a85565b5060019392505050565b604080519081016040526002815b60008152600019919091019060200181610f455790505090565b815481835581811511610f8b57600e0281600e028360005260206000209182019101610f8b9190610fd0565b505050565b8260028101928215610fc0579160200282015b82811115610fc05782518255602090920191600190910190610fa3565b50610fcc929150611021565b5090565b610a4891905b80821115610fcc576000808255610ff0600183018261103b565b610ffe600383016000611049565b61100c600883016000611049565b50600d8101805460ff19169055600e01610fd6565b610a4891905b80821115610fcc5760008155600101611027565b506000815560010160009055565b5060008155600101600081556001016000815560010160008155600101600090555600a165627a7a723058207f6ca742eb79b7ddcabca9b06df9bde6cf33f3651529cfd2b739672484f135a80029"};

var OperationBookStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"getBookKey","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"}],"name":"exists","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"trainStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"promoStatus","type":"uint16"}],"name":"isValidState","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"bookId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"}],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"_name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a03199091161790556110a8806100306000396000f3006060604052600436106100f85763ffffffff60e060020a6000350416631893631481146100fd57806318ae19c21461012b57806338a699a41461018357806342088fab146101ad578063445dad2e146101e65780634fb2e45d1461020357806354cdfd4d14610222578063673e639b1461026857806377a28bd7146102875780637937354c146102a15780637b5348c9146102c95780637bf03755146102e8578063848a423f1461032c5780638f32d59b1461037c578063a55f99271461038f578063b7973ad9146103be578063bb03341f146103e0578063dbf30aa8146103ff578063dd9fd5da1461042f578063f7ff1b6a1461045e575b600080fd5b341561010857600080fd5b61011360043561047d565b60405191825260208201526040908101905180910390f35b341561013657600080fd5b610144600435602435610497565b6040518281526020810182604080838360005b8381101561016f578082015183820152602001610157565b505050509050019250505060405180910390f35b341561018e57600080fd5b610199600435610518565b604051901515815260200160405180910390f35b34156101b857600080fd5b6101e460ff60043581169060243581169061ffff60443581169160643516906084359060a43516610529565b005b34156101f157600080fd5b61019960043561ffff60243516610657565b341561020e57600080fd5b6101e4600160a060020a03600435166106b4565b341561022d57600080fd5b6101e4600480359060243590608460446002604080519081016040528092919082600260200280828437509395505092359250610703915050565b341561027357600080fd5b6101e460043560243560ff604435166107f3565b341561029257600080fd5b61019961ffff60043516610869565b34156102ac57600080fd5b6102b76004356108df565b60405190815260200160405180910390f35b34156102d457600080fd5b61011360043560243560ff604435166108f1565b34156102f357600080fd5b6101e460048035906024359060846044600260408051908101604052809291908260026020028082843750939550610956945050505050565b341561033757600080fd5b61034b60ff600435811690602435166109c9565b60405161ffff948516815260ff90931660208401526040808401929092529092166060820152608001905180910390f35b341561038757600080fd5b610199610a46565b341561039a57600080fd5b6103a8600435602435610a62565b60405160ff909116815260200160405180910390f35b34156103c957600080fd5b6101e460043560243560ff60443516606435610aa3565b34156103eb57600080fd5b6101e4600160a060020a0360043516610b59565b341561040a57600080fd5b61041860ff60043516610ba8565b60405161ffff909116815260200160405180910390f35b341561043a57600080fd5b610442610bbf565b604051600160a060020a03909116815260200160405180910390f35b341561046957600080fd5b6101e4600160a060020a0360043516610bce565b600090815260046020526040902080546001909101549091565b60006104a1610f4e565b60008481526002602052604081208054859081106104bb57fe5b90600052602060002090600c02019050806000015481600101806002806020026040519081016040529190828260026020028201915b815481526001909101906020018083116104f1575050505050905092509250509250929050565b600061052382610c82565b92915050565b6105336003610ba8565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561058757600080fd5b6102c65a03f1151561059857600080fd5b5050506040518051905015156105ad57600080fd5b6080604051908101604090815261ffff808816835260ff80881660208086019190915283850188905291861660608501528a8116600090815260058352838120918b1681529152208151815461ffff191661ffff919091161781556020820151815460ff91909116620100000262ff000019909116178155604082015181600101556060820151600291909101805461ffff191661ffff9092169190911790555050505050505050565b600082815260046020908152604080832080548452600290925282206001820154815484929190811061068657fe5b600091825260208220600c9190910201600b015460ff1660020a9490941661ffff1693909311949350505050565b6000546106c990600160a060020a0316610ca3565b15156106d457600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008060008061071288610cd3565b151561071d57600080fd5b61072687610c82565b1561073057600080fd5b600088815260026020526040902080549094509250826107538560018301610f76565b50838381548110151561076257fe5b600091825260208220600c909102018881559250905061078760018301876002610fa7565b5080600381111561079457fe5b600b8301805460ff191660ff929092169190911790556107b78884600188610aa3565b604080519081016040908152898252602080830186905260008a8152600490915220815181556020820151600190910155505050505050505050565b60006107fe84610cd3565b151561080957600080fd5b60008481526002602052604090205483901161082457600080fd5b600084815260026020526040902080548490811061083e57fe5b60009182526020909120600c90910201600b01805460ff191660ff9390931692909217909155505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156108bf57600080fd5b6102c65a03f115156108d057600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b60008381526002602052604081208054829182918690811061090f57fe5b90600052602060002090600c02019050806003018460ff1660048110151561093357fe5b01546007820160ff86166004811061094757fe5b01549250925050935093915050565b600061096184610cd3565b151561096c57600080fd5b60008481526002602052604090205483901161098757600080fd5b60008481526002602052604090208054849081106109a157fe5b60009182526020909120600c9091020190506109c260018201836002610fa7565b5050505050565b6000806000806000600560008860048111156109e157fe5b60ff1660ff1681526020019081526020016000206000876003811115610a0357fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60008054610a5c90600160a060020a0316610ca3565b90505b90565b6000828152600260205260408120805482919084908110610a7f57fe5b60009182526020909120600c90910201600b81015460ff16925090505b5092915050565b600080610aaf86610cd3565b1515610aba57600080fd5b600086815260026020526040902054859011610ad557600080fd5b6000868152600260205260409020805486908110610aef57fe5b6000918252602080832060ff8089168552600583526040808620600b600c90960290930194850154909116855291529091209092509050610b308187610dcc565b610b51828260000160029054906101000a900460ff16836001015486610e08565b505050505050565b600054610b6e90600160a060020a0316610ca3565b1515610b7957600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000816003811115610bb657fe5b60020a92915050565b600154600160a060020a031690565b610bd86003610ba8565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610c2c57600080fd5b6102c65a03f11515610c3d57600080fd5b505050604051805190501515610c5257600080fd5b506003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008181526004602052604081208054610c9b90610e43565b159392505050565b600081600160a060020a031633600160a060020a0316148061052357505032600160a060020a0390811691161490565b6003546000908190600160a060020a0316631e30c6d182604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610d1f57600080fd5b6102c65a03f11515610d3057600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826001811115610d7c57fe5b60ff168152602001925050506040805180830381600087803b1515610da057600080fd5b6102c65a03f11515610db157600080fd5b50505060405180519060200180515050600090119392505050565b8154610ddb9061ffff16610869565b1515610de657600080fd5b6002820154610df99061ffff1682610e47565b1515610e0457600080fd5b5050565b600b8401805460ff191660ff851617905542600385018360048110610e2957fe5b015580600785018360048110610e3b57fe5b015550505050565b1590565b60008060008461ffff161115610f4457600354600160a060020a0316631e30c6d16000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610e9f57600080fd5b6102c65a03f11515610eb057600080fd5b50505060405180519050600160a060020a0316635de28ae08460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610f0857600080fd5b6102c65a03f11515610f1957600080fd5b505050604051805190506001811115610f2e57fe5b90506000848260020a1661ffff16119150610a9c565b5060019392505050565b604080519081016040526002815b60008152600019919091019060200181610f5c5790505090565b815481835581811511610fa257600c0281600c028360005260206000209182019101610fa29190610fe7565b505050565b8260028101928215610fd7579160200282015b82811115610fd75782518255602090920191600190910190610fba565b50610fe3929150611038565b5090565b610a5f91905b80821115610fe35760008082556110076001830182611052565b611015600383016000611060565b611023600783016000611060565b50600b8101805460ff19169055600c01610fed565b610a5f91905b80821115610fe3576000815560010161103e565b506000815560010160009055565b50600081556001016000815560010160008155600101600090555600a165627a7a7230582079532310e65315633b4a38eeb04d5d9372eb96eb10fa53466a485f051724e4ef0029"};

var BookDistributionStoreCompiled = {"abi":[{"constant":false,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"bookStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookDisId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"staffId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookDisId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_parentChecker","type":"address"}],"name":"setParentAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610aa1806100306000396000f3006060604052600436106100b65763ffffffff60e060020a6000350416633371879081146100bb57806342088fab146100df57806342de838d146101165780634fb2e45d1461013257806377a28bd714610151578063848a423f1461017f5780638e56ee2c146101db5780638f32d59b14610218578063bb03341f1461022b578063cc21d1e91461024a578063dbf30aa814610281578063dd9fd5da146102b1578063e1730930146102e0578063fa5afe40146102ff575b600080fd5b34156100c657600080fd5b6100dd60043560243560ff6044351660643561031e565b005b34156100ea57600080fd5b6100dd60ff60043581169060243581169061ffff60443581169160643516906084359060a435166103ce565b341561012157600080fd5b6100dd6004356024356044356104f2565b341561013d57600080fd5b6100dd600160a060020a03600435166105c4565b341561015c57600080fd5b61016b61ffff60043516610613565b604051901515815260200160405180910390f35b341561018a57600080fd5b61019e60ff60043581169060243516610689565b60405161ffff85168152602081018460048111156101b857fe5b60ff16815260200183815260200182815260200194505050505060405180910390f35b34156101e657600080fd5b6101f4600435602435610706565b6040518082600481111561020457fe5b60ff16815260200191505060405180910390f35b341561022357600080fd5b61016b610729565b341561023657600080fd5b6100dd600160a060020a0360043516610744565b341561025557600080fd5b61026960043560243560ff60443516610793565b60405191825260208201526040908101905180910390f35b341561028c57600080fd5b61029a60ff600435166107f7565b60405161ffff909116815260200160405180910390f35b34156102bc57600080fd5b6102c461080e565b604051600160a060020a03909116815260200160405180910390f35b34156102eb57600080fd5b6100dd60043560243560ff6044351661081d565b341561030a57600080fd5b6100dd600160a060020a03600435166108fa565b60008061032b8686610929565b151561033657600080fd5b60008681526002602090815260408083208884529091528120925060049085600581111561036057fe5b60ff908116825260208201929092526040016000908120600c850154909216600481111561038a57fe5b60ff1660ff16815260200190815260200160002090506103aa8187610946565b600181015481546103c691849162010000900460ff16866109f2565b505050505050565b60006103da60036107f7565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561042e57600080fd5b6102c65a03f1151561043f57600080fd5b50505060405180519050151561045457600080fd5b6004600089600581111561046457fe5b60ff1660ff168152602001908152602001600020600088600481111561048657fe5b60ff1681526020810191909152604001600020805461ffff191661ffff8816178082559092508590839062ff00001916620100008360048111156104c657fe5b02179055505060018101929092556002909101805461ffff191661ffff90921691909117905550505050565b60006104fe8484610929565b1561050857600080fd5b600354600160a060020a03166338a699a48560006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561055957600080fd5b6102c65a03f1151561056a57600080fd5b50505060405180519050151561057f57600080fd5b50600083815260026020908152604080832085845290915290208381556001808201849055600c8201805460ff191690556105be90859085908561031e565b50505050565b6000546105d990600160a060020a0316610a3c565b15156105e457600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561066957600080fd5b6102c65a03f1151561067a57600080fd5b50505060405180519392505050565b6000806000806000600460008860058111156106a157fe5b60ff1660ff16815260200190815260200160002060008760048111156106c357fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60009182526002602090815260408084209284529190529020600c015460ff1690565b6000805461073f90600160a060020a0316610a3c565b905090565b60005461075990600160a060020a0316610a3c565b151561076457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008381526002602081815260408084208685529091528220829181018460048111156107bc57fe5b60ff16600581106107c957fe5b0154816007018560048111156107db57fe5b60ff16600581106107e857fe5b01549250925050935093915050565b600081600381111561080557fe5b60020a92915050565b600154600160a060020a031690565b600061082960036107f7565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561087d57600080fd5b6102c65a03f1151561088e57600080fd5b5050506040518051905015156108a357600080fd5b6108ad8585610929565b15156108b857600080fd5b60008581526002602090815260408083208784529091529020600c81018054919350849160ff191660018360048111156108ee57fe5b02179055505050505050565b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082815260026020908152604080832093835292905220541490565b81546109559061ffff16610613565b151561096057600080fd5b6003546002830154600160a060020a039091169063445dad2e90839061ffff1660006040516020015260405160e060020a63ffffffff8516028152600481019290925261ffff166024820152604401602060405180830381600087803b15156109c857600080fd5b6102c65a03f115156109d957600080fd5b5050506040518051905015156109ee57600080fd5b5050565b600c8401805483919060ff19166001836004811115610a0d57fe5b021790555042600285018460058110610a2257fe5b015580600785018460058110610a3457fe5b015550505050565b600081600160a060020a031633600160a060020a03161480610a6f575081600160a060020a031632600160a060020a0316145b929150505600a165627a7a723058209838ab447209ebfe3d4664afba34a3a993e54ad025ca5a480bc43861def04fb60029"};

var CargoCardStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"cargoCardId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"trainStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"}],"name":"count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"}],"name":"getCargoCardIndex","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055611156806100306000396000f3006060604052600436106100e25763ffffffff60e060020a60003504166318ae19c281146100e757806342088fab1461013f5780634fb2e45d1461017857806354cdfd4d14610197578063673e639b146101dd57806377a28bd7146101fc5780637937354c1461022a5780637b5348c9146102525780637bf0375514610289578063848a423f146102cd5780638f32d59b14610331578063a55f992714610344578063b7973ad914610381578063bb03341f146103a3578063d9a23b0d146103c2578063dbf30aa8146103db578063dd9fd5da1461040b578063f7ff1b6a1461043a575b600080fd5b34156100f257600080fd5b610100600435602435610459565b6040518281526020810182604080838360005b8381101561012b578082015183820152602001610113565b505050509050019250505060405180910390f35b341561014a57600080fd5b61017660ff60043581169060243581169061ffff60443581169160643516906084359060a435166104da565b005b341561018357600080fd5b610176600160a060020a0360043516610641565b34156101a257600080fd5b610176600480359060243590608460446002604080519081016040528092919082600260200280828437509395505092359250610690915050565b34156101e857600080fd5b61017660043560243560ff6044351661081e565b341561020757600080fd5b61021661ffff6004351661089b565b604051901515815260200160405180910390f35b341561023557600080fd5b610240600435610911565b60405190815260200160405180910390f35b341561025d57600080fd5b61027160043560243560ff60443516610923565b60405191825260208201526040908101905180910390f35b341561029457600080fd5b6101766004803590602435906084604460026040805190810160405280929190826002602002808284375093955061099c945050505050565b34156102d857600080fd5b6102ec60ff60043581169060243516610a15565b60405161ffff851681526020810184600281111561030657fe5b60ff1681526020018381526020018261ffff1661ffff16815260200194505050505060405180910390f35b341561033c57600080fd5b610216610a92565b341561034f57600080fd5b61035d600435602435610aae565b6040518082600281111561036d57fe5b60ff16815260200191505060405180910390f35b341561038c57600080fd5b61017660043560243560ff60443516606435610ae6565b34156103ae57600080fd5b610176600160a060020a0360043516610bc5565b34156103cd57600080fd5b610240600435602435610c14565b34156103e657600080fd5b6103f460ff60043516610c4c565b60405161ffff909116815260200160405180910390f35b341561041657600080fd5b61041e610c63565b604051600160a060020a03909116815260200160405180910390f35b341561044557600080fd5b610176600160a060020a0360043516610c72565b6000610463611008565b600084815260026020526040812080548590811061047d57fe5b90600052602060002090600a02019050806000015481600101806002806020026040519081016040529190828260026020028201915b815481526001909101906020018083116104b3575050505050905092509250509250929050565b6104e46003610c4c565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561053857600080fd5b6102c65a03f1151561054957600080fd5b50505060405180519050151561055e57600080fd5b6080604051908101604052808661ffff16815260200185600281111561058057fe5b81526020018481526020018361ffff16815250600460008960038111156105a357fe5b60ff1660ff16815260200190815260200160002060008860028111156105c557fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff000019166201000083600281111561060a57fe5b0217905550604082015181600101556060820151600291909101805461ffff191661ffff9092169190911790555050505050505050565b60005461065690600160a060020a0316610d26565b151561066157600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000806000806106a06003610c4c565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156106f457600080fd5b6102c65a03f1151561070557600080fd5b50505060405180519050151561071a57600080fd5b6000898152600260205260409020945061073389610d5f565b151561073e57600080fd5b6107488989610e58565b1561075257600080fd5b84546107618660018301611030565b508454600019810194506000935085908590811061077b57fe5b60009182526020909120600a90910201888155915061079f6001830188600261105c565b5060098201805484919060ff191660018360028111156107bb57fe5b021790555060408051908101604090815260018252602080830187905260008c8152600382528281208c8252909152208151815460ff1916901515178155602082015181600101559050506108138985600189610ae6565b505050505050505050565b61082783610d5f565b151561083257600080fd5b60008381526002602052604090205482901161084d57600080fd5b600083815260026020526040902080548291908490811061086a57fe5b600091825260209091206009600a9092020101805460ff1916600183600281111561089157fe5b0217905550505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156108f157600080fd5b6102c65a03f1151561090257600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b60008381526002602052604081208054829182918690811061094157fe5b90600052602060002090600a020190508060030184600281111561096157fe5b60ff166003811061096e57fe5b01548160060185600281111561098057fe5b60ff166003811061098d57fe5b01549250925050935093915050565b6109a583610d5f565b15156109b057600080fd5b6000838152600260205260409020548290116109cb57600080fd5b805115610a105760008381526002602052604090208054829190849081106109ef57fe5b90600052602060002090600a0201600101906002610a0e92919061105c565b505b505050565b600080600080600060046000886003811115610a2d57fe5b60ff1660ff1681526020019081526020016000206000876002811115610a4f57fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60008054610aa890600160a060020a0316610d26565b90505b90565b6000828152600260205260408120805483908110610ac857fe5b60009182526020909120600a909102016009015460ff169392505050565b600080610af286610d5f565b1515610afd57600080fd5b600086815260026020526040902054859011610b1857600080fd5b6000868152600260205260409020805486908110610b3257fe5b90600052602060002090600a0201915060046000856003811115610b5257fe5b60ff90811682526020820192909252604001600090812060098501549092166002811115610b7c57fe5b60ff1660ff1681526020019081526020016000209050610b9c8187610e78565b610bbd828260000160029054906101000a900460ff16836001015486610eb5565b505050505050565b600054610bda90600160a060020a0316610d26565b1515610be557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008281526003602090815260408083208484529091528120805460ff161515610c3d57600080fd5b806001015491505b5092915050565b6000816003811115610c5a57fe5b60020a92915050565b600154600160a060020a031690565b610c7c6003610c4c565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610cd057600080fd5b6102c65a03f11515610ce157600080fd5b505050604051805190501515610cf657600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081600160a060020a031633600160a060020a03161480610d59575081600160a060020a031632600160a060020a0316145b92915050565b6005546000908190600160a060020a0316631e30c6d182604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610dab57600080fd5b6102c65a03f11515610dbc57600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826001811115610e0857fe5b60ff168152602001925050506040805180830381600087803b1515610e2c57600080fd5b6102c65a03f11515610e3d57600080fd5b50505060405180519060200180515050600090119392505050565b600091825260036020908152604080842092845291905290205460ff1690565b8154610e879061ffff1661089b565b1515610e9257600080fd5b6002820154610ea690829061ffff16610f01565b1515610eb157600080fd5b5050565b60098401805484919060ff19166001836002811115610ed057fe5b0217905550428460030183600381101515610ee757fe5b015580600685018360038110610ef957fe5b015550505050565b60008060008361ffff161115610ffe57600554600160a060020a0316631e30c6d16000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610f5957600080fd5b6102c65a03f11515610f6a57600080fd5b50505060405180519050600160a060020a0316635de28ae08560006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610fc257600080fd5b6102c65a03f11515610fd357600080fd5b505050604051805190506001811115610fe857fe5b90506000838260020a1661ffff16119150610c45565b5060019392505050565b604080519081016040526002815b600081526000199190910190602001816110165790505090565b815481835581811511610a1057600a0281600a028360005260206000209182019101610a10919061109c565b826002810192821561108c579160200282015b8281111561108c578251825560209092019160019091019061106f565b506110989291506110ed565b5090565b610aab91905b808211156110985760008082556110bc6001830182611107565b6110ca600383016000611115565b6110d8600683016000611115565b5060098101805460ff19169055600a016110a2565b610aab91905b8082111561109857600081556001016110f3565b506000815560010160009055565b506000815560010160008155600101600090555600a165627a7a72305820b69b48c58344de2397a9eac9be052c19156fd3daeafa8411071513e7491fb21c0029"};

var TransferStoreCompiled = {"abi":[{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"transferId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"outStaffId","type":"bytes32"},{"name":"inStaffId","type":"bytes32"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"transferId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"transferId","type":"bytes32"}],"name":"getTransferIndex","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getTransferIdOutgoing","outputs":[{"name":"transferId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"trainStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"}],"name":"count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getTransferIdByIncoming","outputs":[{"name":"transferId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"}],"name":"countIncoming","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"}],"name":"countOutgoing","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055611429806100306000396000f30060606040526004361061010e5763ffffffff60e060020a60003504166304b53b12811461011357806318ae19c21461016657806328098135146101be5780632d7dba2c146101e957806342088fab146102055780634fb2e45d1461023c578063673e639b1461025b57806377a28bd71461027a5780637937354c146102a85780637b5348c9146102be5780637bf03755146102f5578063848a423f146103395780638f32d59b1461039d5780639f06a1ba146103b0578063a55f9927146103cc578063b7973ad914610409578063bb03341f1461042b578063bf9ee0bf1461044a578063dbf30aa814610463578063dd9fd5da14610493578063de4d33c8146104c2578063f7ff1b6a146104db575b600080fd5b341561011e57600080fd5b6101646004803590602435906084604460026040805190810160405280929190826002602002808284375093955050833593602081013593506040013591506104fa9050565b005b341561017157600080fd5b61017f60043560243561075c565b6040518281526020810182604080838360005b838110156101aa578082015183820152602001610192565b505050509050019250505060405180910390f35b34156101c957600080fd5b6101d76004356024356107dd565b60405190815260200160405180910390f35b34156101f457600080fd5b6101d7600435602435604435610815565b341561021057600080fd5b61016460ff60043581169060243581169061ffff60443581169160643516906084359060a43516610899565b341561024757600080fd5b610164600160a060020a0360043516610a00565b341561026657600080fd5b61016460043560243560ff60443516610a4f565b341561028557600080fd5b61029461ffff60043516610acc565b604051901515815260200160405180910390f35b34156102b357600080fd5b6101d7600435610b42565b34156102c957600080fd5b6102dd60043560243560ff60443516610b54565b60405191825260208201526040908101905180910390f35b341561030057600080fd5b61016460048035906024359060846044600260408051908101604052809291908260026020028082843750939550610bcd945050505050565b341561034457600080fd5b61035860ff60043581169060243516610c46565b60405161ffff851681526020810184600281111561037257fe5b60ff1681526020018381526020018261ffff1661ffff16815260200194505050505060405180910390f35b34156103a857600080fd5b610294610cc3565b34156103bb57600080fd5b6101d7600435602435604435610cdf565b34156103d757600080fd5b6103e5600435602435610d07565b604051808260028111156103f557fe5b60ff16815260200191505060405180910390f35b341561041457600080fd5b61016460043560243560ff60443516606435610d3f565b341561043657600080fd5b610164600160a060020a0360043516610e1e565b341561045557600080fd5b6101d7600435602435610e6d565b341561046e57600080fd5b61047c60ff60043516610e8a565b60405161ffff909116815260200160405180910390f35b341561049e57600080fd5b6104a6610ea1565b604051600160a060020a03909116815260200160405180910390f35b34156104cd57600080fd5b6101d7600435602435610eb0565b34156104e657600080fd5b610164600160a060020a0360043516610ecd565b600080600080610508611261565b6105126000610e8a565b61051c6003610e8a565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561057357600080fd5b6102c65a03f1151561058457600080fd5b50505060405180519050151561059957600080fd5b60008c815260026020526040902095506105b28c610f81565b15156105bd57600080fd5b6105c78c8c61107a565b156105d157600080fd5b85546105e08760018301611278565b50855460001981019550600094508690869081106105fa57fe5b60009182526020909120600c909102018b8155925061061e600184018b60026112a4565b506003830189905560048301889055600b8301805485919060ff1916600183600281111561064857fe5b021790555060408051908101604090815260018252602080830188905260008f8152600382528281208f82529091522090925082908151815460ff1916901515178155602082015160019182015560008e81526004602090815260408083208d8452909152902080549092509081016106c183826112e4565b600092835260209092208491600202018151815460ff1916901515178155602082015160019182015560008f81526005602090815260408083208f8452909152902080549093509150810161071683826112e4565b600092835260209092208491600202018151815460ff19169015151781556020820151816001015550505061074e8c8660018a610d3f565b505050505050505050505050565b6000610766611310565b600084815260026020526040812080548590811061078057fe5b90600052602060002090600c02019050806000015481600101806002806020026040519081016040529190828260026020028201915b815481526001909101906020018083116107b6575050505050905092509250509250929050565b60008281526003602090815260408083208484529091528120805460ff16151561080657600080fd5b806001015491505b5092915050565b6000838152600560209081526040808320858452909152812080548291908490811061083d57fe5b60009182526020909120600290910201805490915060ff16151561086057600080fd5b600085815260026020526040902060018201548154811061087d57fe5b90600052602060002090600c0201600001549150509392505050565b6108a36003610e8a565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156108f757600080fd5b6102c65a03f1151561090857600080fd5b50505060405180519050151561091d57600080fd5b6080604051908101604052808661ffff16815260200185600281111561093f57fe5b81526020018481526020018361ffff168152506006600089600381111561096257fe5b60ff1660ff168152602001908152602001600020600088600281111561098457fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360028111156109c957fe5b0217905550604082015181600101556060820151600291909101805461ffff191661ffff9092169190911790555050505050505050565b600054610a1590600160a060020a031661109a565b1515610a2057600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b610a5883610f81565b1515610a6357600080fd5b600083815260026020526040902054829011610a7e57600080fd5b6000838152600260205260409020805482919084908110610a9b57fe5b60009182526020909120600b600c9092020101805460ff19166001836002811115610ac257fe5b0217905550505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610b2257600080fd5b6102c65a03f11515610b3357600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b600083815260026020526040812080548291829186908110610b7257fe5b90600052602060002090600c0201905080600501846002811115610b9257fe5b60ff1660038110610b9f57fe5b015481600801856002811115610bb157fe5b60ff1660038110610bbe57fe5b01549250925050935093915050565b610bd683610f81565b1515610be157600080fd5b600083815260026020526040902054829011610bfc57600080fd5b805115610c41576000838152600260205260409020805482919084908110610c2057fe5b90600052602060002090600c0201600101906002610c3f9291906112a4565b505b505050565b600080600080600060066000886003811115610c5e57fe5b60ff1660ff1681526020019081526020016000206000876002811115610c8057fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60008054610cd990600160a060020a031661109a565b90505b90565b6000838152600460209081526040808320858452909152812080548291908490811061083d57fe5b6000828152600260205260408120805483908110610d2157fe5b60009182526020909120600c90910201600b015460ff169392505050565b600080610d4b86610f81565b1515610d5657600080fd5b600086815260026020526040902054859011610d7157600080fd5b6000868152600260205260409020805486908110610d8b57fe5b90600052602060002090600c0201915060066000856003811115610dab57fe5b60ff908116825260208201929092526040016000908120600b8501549092166002811115610dd557fe5b60ff1660ff1681526020019081526020016000209050610df581876110d3565b610e16828260000160029054906101000a900460ff16836001015486611110565b505050505050565b600054610e3390600160a060020a031661109a565b1515610e3e57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600091825260046020908152604080842092845291905290205490565b6000816003811115610e9857fe5b60020a92915050565b600154600160a060020a031690565b600091825260056020908152604080842092845291905290205490565b610ed76003610e8a565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610f2b57600080fd5b6102c65a03f11515610f3c57600080fd5b505050604051805190501515610f5157600080fd5b506007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6007546000908190600160a060020a0316631e30c6d182604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610fcd57600080fd5b6102c65a03f11515610fde57600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff8516028152600481018381529060240182600181111561102a57fe5b60ff168152602001925050506040805180830381600087803b151561104e57600080fd5b6102c65a03f1151561105f57600080fd5b50505060405180519060200180515050600090119392505050565b600091825260036020908152604080842092845291905290205460ff1690565b600081600160a060020a031633600160a060020a031614806110cd575081600160a060020a031632600160a060020a0316145b92915050565b81546110e29061ffff16610acc565b15156110ed57600080fd5b600282015461110190829061ffff1661115a565b151561110c57600080fd5b5050565b600b8401805484919060ff1916600183600281111561112b57fe5b02179055504260058501836003811061114057fe5b01558060088501836003811061115257fe5b015550505050565b60008060008361ffff16111561125757600754600160a060020a0316631e30c6d16000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156111b257600080fd5b6102c65a03f115156111c357600080fd5b50505060405180519050600160a060020a0316635de28ae08560006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561121b57600080fd5b6102c65a03f1151561122c57600080fd5b50505060405180519050600181111561124157fe5b90506000838260020a1661ffff1611915061080e565b5060019392505050565b604080519081016040526000808252602082015290565b815481835581811511610c4157600c0281600c028360005260206000209182019101610c419190611338565b82600281019282156112d4579160200282015b828111156112d457825182556020909201916001909101906112b7565b506112e092915061139b565b5090565b815481835581811511610c4157600202816002028360005260206000209182019101610c4191906113b5565b604080519081016040526002815b6000815260001991909101906020018161131e5790505090565b610cdc91905b808211156112e057600080825561135860018301826113da565b6003820160009055600482016000905560058201600061137891906113e8565b6113866008830160006113e8565b50600b8101805460ff19169055600c0161133e565b610cdc91905b808211156112e057600081556001016113a1565b610cdc91905b808211156112e057805460ff19168155600060018201556002016113bb565b506000815560010160009055565b506000815560010160008155600101600090555600a165627a7a723058207f8b86d14a7bd894a1d50b3558cbdd3d833ea52d37f9c8cde73c117b358bdfcc0029"};

var ChecklistStoreCompiled = {"abi":[{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"trainStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"}],"name":"get","outputs":[{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"staffId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610eff806100306000396000f3006060604052600436106100cc5763ffffffff60e060020a6000350416633371879081146100d157806342088fab146100f55780634fb2e45d1461012c57806350e49a221461014b57806354cdfd4d1461018f578063658cc1f6146101d557806377a28bd714610226578063848a423f146102545780638e56ee2c146102b85780638f32d59b146102f5578063bb03341f14610308578063cc21d1e914610327578063dbf30aa81461035e578063dd9fd5da1461038e578063e1730930146103bd578063f7ff1b6a146103dc575b600080fd5b34156100dc57600080fd5b6100f360043560243560ff604435166064356103fb565b005b341561010057600080fd5b6100f360ff60043581169060243581169061ffff60443581169160643516906084359060a435166104b0565b341561013757600080fd5b6100f3600160a060020a0360043516610617565b341561015657600080fd5b6100f360048035906024359060846044600260408051908101604052809291908260026020028082843750939550610666945050505050565b341561019a57600080fd5b6100f36004803590602435906084604460026040805190810160405280929190826002602002808284375093955050923592506106c2915050565b34156101e057600080fd5b6101ee6004356024356107e8565b6040518082604080838360005b838110156102135780820151838201526020016101fb565b5050505090500191505060405180910390f35b341561023157600080fd5b61024061ffff60043516610847565b604051901515815260200160405180910390f35b341561025f57600080fd5b61027360ff600435811690602435166108bd565b60405161ffff851681526020810184600381111561028d57fe5b60ff1681526020018381526020018261ffff1661ffff16815260200194505050505060405180910390f35b34156102c357600080fd5b6102d160043560243561093a565b604051808260038111156102e157fe5b60ff16815260200191505060405180910390f35b341561030057600080fd5b61024061095d565b341561031357600080fd5b6100f3600160a060020a0360043516610979565b341561033257600080fd5b61034660043560243560ff604435166109c8565b60405191825260208201526040908101905180910390f35b341561036957600080fd5b61037760ff60043516610a2f565b60405161ffff909116815260200160405180910390f35b341561039957600080fd5b6103a1610a46565b604051600160a060020a03909116815260200160405180910390f35b34156103c857600080fd5b6100f360043560243560ff60443516610a55565b34156103e757600080fd5b6100f3600160a060020a0360043516610abb565b6000806104088686610b6f565b151561041357600080fd5b60008681526002602090815260408083208884529091528120925060039085600481111561043d57fe5b60ff908116825260208201929092526040016000908120600b850154909216600381111561046757fe5b60ff1660ff16815260200190815260200160002090506104878187610b91565b6104a8828260000160029054906101000a900460ff16836001015486610bce565b505050505050565b6104ba6003610a2f565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561050e57600080fd5b6102c65a03f1151561051f57600080fd5b50505060405180519050151561053457600080fd5b6080604051908101604052808661ffff16815260200185600381111561055657fe5b81526020018481526020018361ffff168152506003600089600481111561057957fe5b60ff1660ff168152602001908152602001600020600088600381111561059b57fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360038111156105e057fe5b0217905550604082015181600101556060820151600291909101805461ffff191661ffff9092169190911790555050505050505050565b60005461062c90600160a060020a0316610c18565b151561063757600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61066f83610c51565b151561067a57600080fd5b6106848383610b6f565b151561068f57600080fd5b8051156106bd5760008381526002602081815260408084208685529091529091206106bb918390610e51565b505b505050565b6000806106cf6000610a2f565b6106d96003610a2f565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561073057600080fd5b6102c65a03f1151561074157600080fd5b50505060405180519050151561075657600080fd5b61075f87610c51565b151561076a57600080fd5b6107748787610b6f565b1561077e57600080fd5b60008781526002602081815260408084208a855290915282209194509092506107aa9083908790610e51565b5060028201869055600b8201805484919060ff191660018360038111156107cd57fe5b02179055506107df87876001876103fb565b50505050505050565b6107f0610e91565b6000838152600260208181526040808420868552909152918290209182919080519081016040529190828260026020028201915b8154815260019091019060200180831161082457505050505091505b5092915050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561089d57600080fd5b6102c65a03f115156108ae57600080fd5b50505060405180519392505050565b6000806000806000600360008860048111156108d557fe5b60ff1660ff16815260200190815260200160002060008760038111156108f757fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60009182526002602090815260408084209284529190529020600b015460ff1690565b6000805461097390600160a060020a0316610c18565b90505b90565b60005461098e90600160a060020a0316610c18565b151561099957600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008381526002602090815260408083208584529091528120819060038082019085908111156109f457fe5b60ff1660048110610a0157fe5b015481600701856003811115610a1357fe5b60ff1660048110610a2057fe5b01549250925050935093915050565b6000816003811115610a3d57fe5b60020a92915050565b600154600160a060020a031690565b610a5e83610c51565b1515610a6957600080fd5b610a738383610b6f565b1515610a7e57600080fd5b60008381526002602090815260408083208584529091529020600b01805482919060ff19166001836003811115610ab157fe5b0217905550505050565b610ac56003610a2f565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610b1957600080fd5b6102c65a03f11515610b2a57600080fd5b505050604051805190501515610b3f57600080fd5b506004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000918252600260208181526040808520848652909152909220909101541490565b8154610ba09061ffff16610847565b1515610bab57600080fd5b6002820154610bbf90829061ffff16610d4a565b1515610bca57600080fd5b5050565b600b8401805484919060ff19166001836003811115610be957fe5b021790555042600385018360048110610bfe57fe5b015580600785018360048110610c1057fe5b015550505050565b600081600160a060020a031633600160a060020a03161480610c4b575081600160a060020a031632600160a060020a0316145b92915050565b6004546000908190600160a060020a0316631e30c6d182604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610c9d57600080fd5b6102c65a03f11515610cae57600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826001811115610cfa57fe5b60ff168152602001925050506040805180830381600087803b1515610d1e57600080fd5b6102c65a03f11515610d2f57600080fd5b50505060405180519060200180515050600090119392505050565b60008060008361ffff161115610e4757600454600160a060020a0316631e30c6d16000604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610da257600080fd5b6102c65a03f11515610db357600080fd5b50505060405180519050600160a060020a0316635de28ae08560006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610e0b57600080fd5b6102c65a03f11515610e1c57600080fd5b505050604051805190506001811115610e3157fe5b90506000838260020a1661ffff16119150610840565b5060019392505050565b8260028101928215610e81579160200282015b82811115610e815782518255602090920191600190910190610e64565b50610e8d929150610eb9565b5090565b604080519081016040526002815b60008152600019919091019060200181610e9f5790505090565b61097691905b80821115610e8d5760008155600101610ebf5600a165627a7a723058207b2ff35886c35a4c2da05821dc65efc75db99860726ec878f8b743d6d5034a310029"};

var CardStoreCompiled = {"abi":[{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"cargoCardStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"}],"name":"get","outputs":[{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"trainId","type":"bytes32"},{"name":"cargoCardId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":""};

var VerificationStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"verificationId","type":"bytes32"}],"name":"getVerificationIndex","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"bookStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"verificationId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"verificationId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"verificationId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"bookAddress","type":"address"},{"name":"bookId","type":"bytes32"}],"name":"count","outputs":[{"name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":""};

var WorkdayStoreCompiled = {"abi":[{"constant":true,"inputs":[],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"workdayDate","type":"uint256"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"bytes32"}],"name":"exists","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"bytes32"},{"name":"promoStatus","type":"uint16"}],"name":"isValidState","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"bytes32"},{"name":"_status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"workdayId","type":"bytes32"}],"name":"get","outputs":[{"name":"","type":"bytes32[2]"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"workdayId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"workdayDate","type":"uint256"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getIdByIndex","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610cba806100306000396000f3006060604052600436106100f85763ffffffff60e060020a60003504166306661abd81146100fd57806332e6895a1461012257806338a699a414610166578063445dad2e146101905780634bd5322b146101ad5780634fb2e45d146101e15780635de28ae01461020057806377a28bd71461023a578063848a423f146102545780638de654ba146102a95780638eaa6ac0146102c55780638f32d59b1461031a578063a3684f001461032d578063bb03341f1461035d578063c704fb7d1461037c578063dbf30aa81461039b578063dd9fd5da146103cb578063f2677b43146103fa578063f7ff1b6a14610441578063ff94e50214610460575b600080fd5b341561010857600080fd5b610110610476565b60405190815260200160405180910390f35b341561012d57600080fd5b610164600480359060646024600260408051908101604052809291908260026020028082843750939550509235925061047d915050565b005b341561017157600080fd5b61017c6004356104c7565b604051901515815260200160405180910390f35b341561019b57600080fd5b61017c60043561ffff602435166104d8565b34156101b857600080fd5b6101c960043560ff60243516610512565b60405191825260208201526040908101905180910390f35b34156101ec57600080fd5b610164600160a060020a036004351661056c565b341561020b57600080fd5b6102166004356105bb565b6040518082600681111561022657fe5b60ff16815260200191505060405180910390f35b341561024557600080fd5b61017c61ffff600435166105d3565b341561025f57600080fd5b61027360ff60043581169060243516610649565b60405161ffff841681526020810183600681111561028d57fe5b60ff168152602001828152602001935050505060405180910390f35b34156102b457600080fd5b61016460043560ff602435166106ba565b34156102d057600080fd5b6102db6004356106ff565b6040518083604080838360005b838110156103005780820151838201526020016102e8565b505050509050018281526020019250505060405180910390f35b341561032557600080fd5b61017c610778565b341561033857600080fd5b61016460ff60043581169060243581169061ffff604435169060643516608435610793565b341561036857600080fd5b610164600160a060020a03600435166108d1565b341561038757600080fd5b61016460043560ff60243516604435610920565b34156103a657600080fd5b6103b460ff600435166109c7565b60405161ffff909116815260200160405180910390f35b34156103d657600080fd5b6103de6109de565b604051600160a060020a03909116815260200160405180910390f35b341561040557600080fd5b610164600480359060646024600260408051908101604052809291908260026020028082843750939550508335936020013592506109ed915050565b341561044c57600080fd5b610164600160a060020a0360043516610a69565b341561046b57600080fd5b610110600435610b1d565b6003545b90565b600061048884610b41565b151561049357600080fd5b506000838152600260208190526040909120906104b69060018301908590610be3565b50816003820160065b015550505050565b60006104d282610b41565b92915050565b600082815260026020526040812060100154819060ff1660068111156104fa57fe5b90506000838260020a1661ffff161191505092915050565b600082815260026020526040812081906003810184600681111561053257fe5b60ff166007811061053f57fe5b015481600a0185600681111561055157fe5b60ff166006811061055e57fe5b015492509250509250929050565b60005461058190600160a060020a0316610b54565b151561058c57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60009081526002602052604090206010015460ff1690565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561062957600080fd5b6102c65a03f1151561063a57600080fd5b50505060405180519392505050565b6000806000806005600087600681111561065f57fe5b60ff1660ff168152602001908152602001600020600086600681111561068157fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b6106c382610b41565b15156106ce57600080fd5b6000828152600260205260409020601001805482919060ff191660018360068111156106f657fe5b02179055505050565b610707610c23565b60008061071384610b41565b151561071e57600080fd5b506000838152600260205260409020600181016003820160060154816002604080519081016040529190828260026020028201915b8154815260019091019060200180831161075357505050505091509250925050915091565b6000805461078e90600160a060020a0316610b54565b905090565b61079d60036109c7565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156107f157600080fd5b6102c65a03f1151561080257600080fd5b50505060405180519050151561081757600080fd5b6060604051908101604052808561ffff16815260200184600681111561083957fe5b81526020018390526005600088600681111561085157fe5b60ff1660ff168152602001908152602001600020600087600681111561087357fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360068111156108b857fe5b0217905550604082015160019091015550505050505050565b6000546108e690600160a060020a0316610b54565b15156108f157600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008061092c85610b41565b151561093757600080fd5b6000858152600260205260408120925060059085600681111561095657fe5b60ff9081168252602082019290925260400160009081206010850154909216600681111561098057fe5b60ff1660ff168152602001908152602001600020905061099f81610b84565b6109c0828260000160029054906101000a900460ff16836001015486610ba1565b5050505050565b60008160038111156109d557fe5b60020a92915050565b600154600160a060020a031690565b60006109f885610b41565b15610a0257600080fd5b50600084815260026020819052604090912085815590610a289060018301908690610be3565b506009810183905560108101805460ff191690556003805460018101610a4e8382610c4b565b5060009182526020909120018590556109c085600184610920565b610a7360036109c7565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610ac757600080fd5b6102c65a03f11515610ad857600080fd5b505050604051805190501515610aed57600080fd5b506004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000600382815481101515610b2e57fe5b9060005260206000209001549050919050565b6000818152600260205260409020541490565b600081600160a060020a031633600160a060020a031614806104d257505032600160a060020a0390811691161490565b8054610b939061ffff166105d3565b1515610b9e57600080fd5b50565b60108401805484919060ff19166001836006811115610bbc57fe5b021790555042600385018360078110610bd157fe5b015580600a850183600681106104bf57fe5b8260028101928215610c13579160200282015b82811115610c135782518255602090920191600190910190610bf6565b50610c1f929150610c74565b5090565b604080519081016040526002815b60008152600019919091019060200181610c315790505090565b815481835581811511610c6f57600083815260209020610c6f918101908301610c74565b505050565b61047a91905b80821115610c1f5760008155600101610c7a5600a165627a7a723058200f9966ad38b295e180d88aa8c72397e28f40951503d21c00a14e743db06deb800029"};

var ActivityStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"activityId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"trainId","type":"bytes32"},{"name":"activityDate","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"name","type":"bytes32[2]"},{"name":"trainId","type":"bytes32"},{"name":"activityDate","type":"uint256"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"bytes32"}],"name":"count","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"activityId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"trainId","type":"bytes32"},{"name":"activityDate","type":"uint256"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"staffId","type":"bytes32"},{"name":"activityId","type":"bytes32"}],"name":"getActivityIndex","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055611031806100306000396000f3006060604052600436106100e25763ffffffff60e060020a60003504166318ae19c281146100e75780634fb2e45d1461014d578063606618b91461016e578063673e639b146101b957806377a28bd7146101d85780637937354c146102065780637b5348c91461022e57806381798a5114610265578063848a423f146102b65780638f32d59b1461030b578063a3684f001461031e578063a55f99271461034e578063b7973ad91461038b578063bb03341f146103ad578063d09aabea146103cc578063dbf30aa8146103e5578063dd9fd5da14610415578063f7ff1b6a14610444575b600080fd5b34156100f257600080fd5b610100600435602435610463565b6040518481526020810184604080838360005b8381101561012b578082015183820152602001610113565b5050505091909101938452505060208201526040908101925090505180910390f35b341561015857600080fd5b61016c600160a060020a036004351661050f565b005b341561017957600080fd5b61016c600480359060243590608460446002604080519081016040528092919082600260200280828437509395505083359360200135925061055e915050565b34156101c457600080fd5b61016c60043560243560ff6044351661063f565b34156101e357600080fd5b6101f261ffff600435166106af565b604051901515815260200160405180910390f35b341561021157600080fd5b61021c600435610725565b60405190815260200160405180910390f35b341561023957600080fd5b61024d60043560243560ff60443516610737565b60405191825260208201526040908101905180910390f35b341561027057600080fd5b61016c6004803590602435906084604460026040805190810160405280929190826002602002808284375093955050833593602081013593506040013591506107b09050565b34156102c157600080fd5b6102d560ff600435811690602435166108bd565b60405161ffff84168152602081018360038111156102ef57fe5b60ff168152602001828152602001935050505060405180910390f35b341561031657600080fd5b6101f261092e565b341561032957600080fd5b61016c60ff60043581169060243581169061ffff60443516906064351660843561094a565b341561035957600080fd5b610367600435602435610a88565b6040518082600381111561037757fe5b60ff16815260200191505060405180910390f35b341561039657600080fd5b61016c60043560243560ff60443516606435610ac0565b34156103b857600080fd5b61016c600160a060020a0360043516610b89565b34156103d757600080fd5b61021c600435602435610bd8565b34156103f057600080fd5b6103fe60ff60043516610c0c565b60405161ffff909116815260200160405180910390f35b341561042057600080fd5b610428610c23565b604051600160a060020a03909116815260200160405180910390f35b341561044f57600080fd5b61016c600160a060020a0360043516610c32565b600061046d610ea1565b60008481526002602052604081208054829182918790811061048b57fe5b90600052602060002090600c020190508060000154816001018260030154836004016003808111156104b957fe5b60ff16600481106104c657fe5b0154826002604080519081016040529190828260026020028201915b815481526001909101906020018083116104e2575050505050925094509450945094505092959194509250565b60005461052490600160a060020a0316610ce6565b151561052f57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61056782610d1f565b151561057257600080fd5b60008581526002602052604090205484901161058d57600080fd5b8251156105d25760008581526002602052604090208054849190869081106105b157fe5b90600052602060002090600c02016001019060026105d0929190610ec9565b505b60008581526002602052604090208054839190869081106105ef57fe5b600091825260208083206003600c90930201919091019290925586815260029091526040902080548291908690811061062457fe5b600091825260209091206007600c9092020101555050505050565b60008381526002602052604081205483901161065a57600080fd5b600084815260026020526040902080548490811061067457fe5b90600052602060002090600c020190508181600b0160006101000a81548160ff021916908360038111156106a457fe5b021790555050505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561070557600080fd5b6102c65a03f1151561071657600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b60008381526002602052604081208054829182918690811061075557fe5b90600052602060002090600c020190508060040184600381111561077557fe5b60ff166004811061078257fe5b01548160080185600381111561079457fe5b60ff16600381106107a157fe5b01549250925050935093915050565b60008060006107bd610f09565b60008a815260026020526040902093506107d78a8a610e18565b156107e157600080fd5b6107ea87610d1f565b15156107f557600080fd5b83546108048560018301610f20565b5083546000198101935084908490811061081a57fe5b60009182526020909120600c90910201898155915061083e60018301896002610ec9565b5060038201879055600b8201805460ff191690556007820186905560408051908101604090815260018252602080830186905260008d8152600382528281208d82529091522090915081908151815460ff1916901515178155602082015181600101559050506108b18a84600188610ac0565b50505050505050505050565b600080600080600460008760038111156108d357fe5b60ff1660ff16815260200190815260200160002060008660038111156108f557fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b6000805461094490600160a060020a0316610ce6565b90505b90565b6109546003610c0c565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156109a857600080fd5b6102c65a03f115156109b957600080fd5b5050506040518051905015156109ce57600080fd5b6060604051908101604052808561ffff1681526020018460038111156109f057fe5b815260200183905260046000886003811115610a0857fe5b60ff1660ff1681526020019081526020016000206000876003811115610a2a57fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff0000191662010000836003811115610a6f57fe5b0217905550604082015160019091015550505050505050565b6000828152600260205260408120805483908110610aa257fe5b60009182526020909120600c90910201600b015460ff169392505050565b6000848152600260205260408120548190859011610add57600080fd5b6000868152600260205260409020805486908110610af757fe5b90600052602060002090600c0201915060046000856003811115610b1757fe5b60ff908116825260208201929092526040016000908120600b8501549092166003811115610b4157fe5b60ff1660ff1681526020019081526020016000209050610b6081610e38565b610b81828260000160029054906101000a900460ff16836001015486610e55565b505050505050565b600054610b9e90600160a060020a0316610ce6565b1515610ba957600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008281526003602090815260408083208484529091528120805460ff161515610c0157600080fd5b600101549392505050565b6000816003811115610c1a57fe5b60020a92915050565b600154600160a060020a031690565b610c3c6003610c0c565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610c9057600080fd5b6102c65a03f11515610ca157600080fd5b505050604051805190501515610cb657600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081600160a060020a031633600160a060020a03161480610d19575081600160a060020a031632600160a060020a0316145b92915050565b6005546000908190600160a060020a0316631e30c6d182604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610d6b57600080fd5b6102c65a03f11515610d7c57600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826001811115610dc857fe5b60ff168152602001925050506040805180830381600087803b1515610dec57600080fd5b6102c65a03f11515610dfd57600080fd5b50505060405180519060200180515050600090119392505050565b600091825260036020908152604080842092845291905290205460ff1690565b8054610e479061ffff166106af565b1515610e5257600080fd5b50565b600b8401805484919060ff19166001836003811115610e7057fe5b0217905550428460040183600481101515610e8757fe5b015580600885018360038110610e9957fe5b015550505050565b604080519081016040526002815b60008152600019919091019060200181610eaf5790505090565b8260028101928215610ef9579160200282015b82811115610ef95782518255602090920191600190910190610edc565b50610f05929150610f51565b5090565b604080519081016040526000808252602082015290565b815481835581811511610f4c57600c0281600c028360005260206000209182019101610f4c9190610f6b565b505050565b61094791905b80821115610f055760008155600101610f57565b61094791905b80821115610f05576000808255610f8b6001830182610fc6565b6003820160009055600482016000610fa39190610fd4565b610fb1600883016000610ff0565b50600b8101805460ff19169055600c01610f71565b506000815560010160009055565b5060008155600101600081556001016000815560010160009055565b506000815560010160008155600101600090555600a165627a7a723058203ade1e66b807f271cbb3558f6837d07cdce3b9068bb95b863c016381dd9d945a0029"};

var EvidenceStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"get","outputs":[{"name":"evidenceId","type":"bytes32"},{"name":"name","type":"bytes32[2]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"},{"name":"parentStatus","type":"uint16"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"evidenceId","type":"bytes32"},{"name":"name","type":"bytes32[2]"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"parentId","type":"bytes32"}],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"name","type":"bytes32[2]"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"},{"name":"","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"parentId","type":"bytes32"},{"name":"evidenceId","type":"bytes32"}],"name":"getEvidenceIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_parentAddress","type":"address"}],"name":"setParentAddress","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a031990911617905561134c806100306000396000f3006060604052600436106100e25763ffffffff60e060020a60003504166318ae19c281146100e757806342088fab1461013f5780634fb2e45d1461017857806354cdfd4d14610197578063673e639b146101dd57806377a28bd7146101fc5780637937354c1461022a5780637b5348c9146102525780637bf0375514610289578063848a423f146102cd5780638f32d59b14610331578063a55f992714610344578063b7973ad914610381578063bb03341f146103a3578063dbf30aa8146103c2578063dd088d64146103f2578063dd9fd5da1461040b578063fa5afe401461043a575b600080fd5b34156100f257600080fd5b610100600435602435610459565b6040518281526020810182604080838360005b8381101561012b578082015183820152602001610113565b505050509050019250505060405180910390f35b341561014a57600080fd5b61017660ff60043581169060243581169061ffff60443581169160643516906084359060a4351661058f565b005b341561018357600080fd5b610176600160a060020a03600435166106f6565b34156101a257600080fd5b610176600480359060243590608460446002604080519081016040528092919082600260200280828437509395505092359250610745915050565b34156101e857600080fd5b61017660043560243560ff604435166108d9565b341561020757600080fd5b61021661ffff60043516610a43565b604051901515815260200160405180910390f35b341561023557600080fd5b610240600435610ab9565b60405190815260200160405180910390f35b341561025d57600080fd5b61027160043560243560ff60443516610acb565b60405191825260208201526040908101905180910390f35b341561029457600080fd5b61017660048035906024359060846044600260408051908101604052809291908260026020028082843750939550610ba4945050505050565b34156102d857600080fd5b6102ec60ff60043581169060243516610c78565b60405161ffff851681526020810184600081111561030657fe5b60ff1681526020018381526020018261ffff1661ffff16815260200194505050505060405180910390f35b341561033c57600080fd5b610216610cf5565b341561034f57600080fd5b61035d600435602435610d11565b6040518082600081111561036d57fe5b60ff16815260200191505060405180910390f35b341561038c57600080fd5b61017660043560243560ff60443516606435610ddd565b34156103ae57600080fd5b610176600160a060020a0360043516610fa5565b34156103cd57600080fd5b6103db60ff60043516610ff4565b60405161ffff909116815260200160405180910390f35b34156103fd57600080fd5b61024060043560243561100b565b341561041657600080fd5b61041e6110d0565b604051600160a060020a03909116815260200160405180910390f35b341561044557600080fd5b610176600160a060020a03600435166110df565b600061046361121c565b600554600160a060020a03166338a699a48560006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b15156104b457600080fd5b6102c65a03f115156104c557600080fd5b5050506040518051905015156104da57600080fd5b6000848152600260205260409020548390116104f557600080fd5b600084815260026020526040902080548490811061050f57fe5b600091825260208083206006909202909101548683526002909152604090912080548590811061053b57fe5b9060005260206000209060060201600101806002806020026040519081016040529190828260026020028201915b815481526001909101906020018083116105695750505050509050915091509250929050565b6105996003610ff4565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156105ed57600080fd5b6102c65a03f115156105fe57600080fd5b50505060405180519050151561061357600080fd5b6080604051908101604052808661ffff16815260200185600081111561063557fe5b81526020018481526020018361ffff168152506004600089600181111561065857fe5b60ff1660ff168152602001908152602001600020600088600081111561067a57fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360008111156106bf57fe5b0217905550604082015181600101556060820151600291909101805461ffff191661ffff9092169190911790555050505050505050565b60005461070b90600160a060020a0316611193565b151561071657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60055460009081908190600160a060020a03166338a699a488836040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561079c57600080fd5b6102c65a03f115156107ad57600080fd5b5050506040518051905015156107c257600080fd5b8515156107ce57600080fd5b600087815260036020908152604080832089845290915290205460ff16156107f557600080fd5b83151561080157600080fd5b60008551141561081057600080fd5b600087815260026020526040902080549093506108308460018301611244565b5082546000198101925083908390811061084657fe5b60009182526020909120600690910201868155905061086a60018201866002611275565b5060408051908101604090815260018252602080830185905260008a8152600382528281208a8252909152208151815460ff1916901515178155602082015181600101559050506108be8783600187610ddd565b6003810154600090116108d057600080fd5b50505050505050565b6108e36003610ff4565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561093757600080fd5b6102c65a03f1151561094857600080fd5b50505060405180519050151561095d57600080fd5b600554600160a060020a03166338a699a48560006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b15156109ae57600080fd5b6102c65a03f115156109bf57600080fd5b5050506040518051905015156109d457600080fd5b6000848152600260205260409020548390116109ef57600080fd5b6000848152600260205260409020805483919085908110610a0c57fe5b906000526020600020906006020160050160006101000a81548160ff02191690836000811115610a3857fe5b021790555050505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610a9957600080fd5b6102c65a03f11515610aaa57600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b60055460009081908190600160a060020a03166338a699a487836040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610b2257600080fd5b6102c65a03f11515610b3357600080fd5b505050604051805190501515610b4857600080fd5b600086815260026020526040902054859011610b6357600080fd5b6000868152600260205260409020805486908110610b7d57fe5b90600052602060002090600602019050806003015481600401549250925050935093915050565b600554600160a060020a03166338a699a48460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610bf557600080fd5b6102c65a03f11515610c0657600080fd5b505050604051805190501515610c1b57600080fd5b600083815260026020526040902054829011610c3657600080fd5b6000838152600260205260409020805482919084908110610c5357fe5b9060005260206000209060060201600101906002610c72929190611275565b50505050565b600080600080600060046000886001811115610c9057fe5b60ff1660ff1681526020019081526020016000206000876000811115610cb257fe5b60ff908116825260208201929092526040016000208054600182015460029092015461ffff8083169c620100009093049094169a50919850911695509350505050565b60008054610d0b90600160a060020a0316611193565b90505b90565b600554600090600160a060020a03166338a699a484836040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610d6457600080fd5b6102c65a03f11515610d7557600080fd5b505050604051805190501515610d8a57600080fd5b600083815260026020526040902054829011610da557600080fd5b6000838152600260205260409020805483908110610dbf57fe5b600091825260209091206006909102016005015460ff169392505050565b6005546000908190600160a060020a03166338a699a487836040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b1515610e3257600080fd5b6102c65a03f11515610e4357600080fd5b505050604051805190501515610e5857600080fd5b600086815260026020526040902054859011610e7357600080fd5b6000868152600260205260409020805486908110610e8d57fe5b9060005260206000209060060201915060046000856001811115610ead57fe5b60ff908116825260208201929092526040016000908120600585015490921681811115610ed657fe5b60ff1681526020810191909152604090810160009081206005546002820154919450600160a060020a03169263445dad2e928a9261ffff1691516020015260405160e060020a63ffffffff8516028152600481019290925260ff166024820152604401602060405180830381600087803b1515610f5257600080fd5b6102c65a03f11515610f6357600080fd5b505050604051805190501515610f7857600080fd5b610f81816111cc565b60018101548154610f9d91849162010000900460ff16866111e9565b505050505050565b600054610fba90600160a060020a0316611193565b1515610fc557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081600381111561100257fe5b60020a92915050565b600554600090600160a060020a03166338a699a484836040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561105e57600080fd5b6102c65a03f1151561106f57600080fd5b50505060405180519050151561108457600080fd5b600083815260036020908152604080832085845290915290205460ff1615156001146110af57600080fd5b50600091825260036020908152604080842092845291905290206001015490565b600154600160a060020a031690565b6110e96003610ff4565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561113d57600080fd5b6102c65a03f1151561114e57600080fd5b50505060405180519050151561116357600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081600160a060020a031633600160a060020a031614806111c6575081600160a060020a031632600160a060020a0316145b92915050565b80546111db9061ffff16610a43565b15156111e657600080fd5b50565b60058401805483919060ff1916600183600081111561120457fe5b02179055504260038501556004909301929092555050565b604080519081016040526002815b6000815260001991909101906020018161122a5790505090565b8154818355818115116112705760060281600602836000526020600020918201910161127091906112b5565b505050565b82600281019282156112a5579160200282015b828111156112a55782518255602090920191600190910190611288565b506112b19291506112f8565b5090565b610d0e91905b808211156112b15760008082556112d56001830182611312565b50600060038201819055600482015560058101805460ff191690556006016112bb565b610d0e91905b808211156112b157600081556001016112fe565b5060008155600101600090555600a165627a7a72305820489007b0b6a3f971d7ef634733b575109284546332370d40c2594964345be82f0029"};

var RoleStoreCompiled = {"abi":[{"constant":false,"inputs":[{"name":"account","type":"address"},{"name":"role","type":"uint16"}],"name":"setRole","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getRole","outputs":[{"name":"role","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"bytecode":"0x6060604052341561000f57600080fd5b60008054600160a060020a03191633600160a060020a0381169190911790915561004a90600360020a64010000000061020561004f82021704565b610093565b600160a060020a038216151561006457600080fd5b600160a060020a03919091166000908152600160205260409020805461ffff191661ffff909216919091179055565b610285806100a26000396000f3006060604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166315f924a98114610066578063442767331461008e5780634fb2e45d146100c457806377a28bd7146100e3575b600080fd5b341561007157600080fd5b61008c600160a060020a036004351661ffff60243516610111565b005b341561009957600080fd5b6100ad600160a060020a036004351661013f565b60405161ffff909116815260200160405180910390f35b34156100cf57600080fd5b61008c600160a060020a036004351661015e565b34156100ee57600080fd5b6100fd61ffff600435166101ad565b604051901515815260200160405180910390f35b60005461012690600160a060020a03166101cc565b151561013157600080fd5b61013b8282610205565b5050565b600160a060020a031660009081526001602052604090205461ffff1690565b60005461017390600160a060020a03166101cc565b151561017e57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000806101b8610249565b9050600081841661ffff1611915050919050565b600081600160a060020a031633600160a060020a031614806101ff575081600160a060020a031632600160a060020a0316145b92915050565b600160a060020a038216151561021a57600080fd5b600160a060020a03919091166000908152600160205260409020805461ffff191661ffff909216919091179055565b60006102543261013f565b9050905600a165627a7a723058200ba030664c55cebd6307c867cb3924d71b3279e473e547c40afe7461bc1d2af60029"};

var railwayProcedureDefault = "0x1349f3e1b8d71effb47b840594ff27da7e603d17";
var trainProcedureDefault = "0x9d13c6d3afe1721beef56b55d303b09e021e27ab";
var trainStoreDefault = "0x064f860b6683223b03b38252853d5d2c210cce19";
var routeBookStoreDefault = "0xe62a84ad37f45ad4cb238192bb996ddc1afcb69a";
var operationbookStoreDefault = "0xb81c1fea49fab3687941a4fb31027eabd98e66dc";
var ruleBookStoreDefault = "0x3950943d8d86267c04a4bba804f9f0b8a01c2fb8";

var rulebookDistributionStoreDefault = "0xd9d64b7dc034fafdba5dc2902875a67b5d586420";
var operationbookDistributionStoreDefault = "0x84272f3e148eb3f957e3df666d91a15a6bd1db7f";
var routebookDistributionStoreDefault = "";
var cargoCardStoreDefault = "0x6585c8466ecd527dda9e09ebc1390ecab0844f2c";
var transferStoreDefault = "0xfe0602d820f42800e3ef3f89e1c39cd15f78d283";
var checklistStoreDefault = "0x4d3bfd7821e237ffe84209d8e638f9f309865b87";
var cardCGSStoreDefault = "";
var cardPFStoreDefault = "";
var verificationStoreDefault = "0x7e4255a77f5470ac83b7c69b017c7824434267e3";
var workdayStoreDefault = "0x7e4255a77f5470ac83b7c69b017c7824434267e3";
var activityStoreDefault = "0x938781b9796aea6376e40ca158f67fa89d5d8a18";
var routebookEvidenceStoreDefault = "";
var workdayEvidenceStoreDefault = "";
var roleStoreDefault = "0xe273fd8a6deb07c4bd7226e0ba05724dcb4bd38a";



var railwayProcedureAddress = "";
var trainProcedureAddress = "";
var trainStoreAddress = "";
var ruleBookStoreAddress = "";
var routeBookStoreAddress = "";
var operationbookStoreAddress = ""
var rulebookDistributionStoreAddress = "";
var operationbookDistributionStoreAddress = "";
var routebookDistributionStoreAddress = "";
var cargoCardStoreAddress = "";
var transferStoreAddress = "";
var checklistStoreAddress = "";
var cardCGSStoreAddress =  "";
var cardPFStoreAddress =  "";
var verificationStoreAddress = "";
var workdayStoreAddress = "";
var activityStoreAddress = "";
var routebookEvidenceStoreAddress = "";
var workdayEvidenceStoreAddress = "";
var roleStoreAddress = "";

var owner = web3.personal.listAccounts[0];
var roleRS = owner;
var roleRO = web3.personal.listAccounts[1];
var rolePF = web3.personal.listAccounts[2];
var roleCGS = web3.personal.listAccounts[3];

console.log("Unlocking roleRS (owner)");
web3.personal.unlockAccount(owner, "", 15000);
console.log("Unlocking roleRO");
web3.personal.unlockAccount(roleRO, "garfield123", 15000);
console.log("Unlocking rolePF");
web3.personal.unlockAccount(rolePF, "garfield123", 15000);
console.log("Unlocking roleCGS");
web3.personal.unlockAccount(roleCGS, "garfield123", 15000);

var railwayProcedureContract = web3.eth.contract(RailwayProcedureCompiled.abi);
var trainProcedureContract = web3.eth.contract(TrainProcedureCompiled.abi);
var trainContract = web3.eth.contract(TrainStoreCompiled.abi);
var ruleBookContract = web3.eth.contract(RuleBookStoreCompiled.abi);

var routeBookContract = web3.eth.contract(RouteBookStoreCompiled.abi);
var operationbookContract = web3.eth.contract(OperationBookStoreCompiled.abi);

var bookDistributionContract = web3.eth.contract(BookDistributionStoreCompiled.abi);
var routebookDistributionContract = web3.eth.contract(BookDistributionStoreCompiled.abi);
var rulebookDistributionContract = web3.eth.contract(BookDistributionStoreCompiled.abi);
var operationbookDistributionContract = web3.eth.contract(BookDistributionStoreCompiled.abi);


var cargoCardContract = web3.eth.contract(CargoCardStoreCompiled.abi);
var transferContract = web3.eth.contract(TransferStoreCompiled.abi);
var checklistContract = web3.eth.contract(ChecklistStoreCompiled.abi);
var cardContract = web3.eth.contract(CardStoreCompiled.abi);
var verificationContract = web3.eth.contract(VerificationStoreCompiled.abi);
var workdayContract = web3.eth.contract(WorkdayStoreCompiled.abi);
var activityContract = web3.eth.contract(ActivityStoreCompiled.abi);
var evidenceContract = web3.eth.contract(EvidenceStoreCompiled.abi);


var roleContract = web3.eth.contract(RoleStoreCompiled.abi);

var railwayProcedureStore = {};        // eth.contract(RailwayProcedureCompiled.abi).at(railwayProcedureAddress);
var trainProcedureStore = {};        // eth.contract(TrainProcedureCompiled.abi).at(trainProcedureAddress);
var trainStore = {};        // eth.contract(TrainStoreCompiled.abi).at(trainStoreAddress);
var ruleBookStore = {};        // eth.contract(RuleBookStoreCompiled.abi).at(ruleBookStoreAddress);
var routeBookStore = {};        // eth.contract(RouteBookStoreCompiled.abi).at(routeBookStoreAddress);
var operationbookStore = {};        // eth.contract(operationbookStoreCompiled.abi).at(operationbookStoreAddress);
var bookDistributionStore = {};        // eth.contract(BookDistributionStoreCompiled.abi).at(bookDistributionStoreDefault);
var cargoCardStore = {};        // eth.contract(CargoCardStoreCompiled.abi).at(cargoCardStoreAddress);
var transferStore = {};        // eth.contract(TransferStoreCompiled.abi).at(transferStoreAddress);
var checklistStore = {};        // eth.contract(ChecklistStoreCompiled.abi).at(checklistStoreAddress);
var cardCGSStore = {};        // eth.contract(CardStoreCompiled.abi).at(cardStoreAddress);
var cardPFStore = {};        // eth.contract(CardStoreCompiled.abi).at(cardStoreAddress);
var verificationStore = {};        // eth.contract(VerificationStoreCompiled.abi).at(verificationStoreAddress);
var workdayStore = {};        // eth.contract(WorkdayStoreCompiled.abi).at(workdayStoreAddress);
var activityStore = {};        // eth.contract(ActivityStoreCompiled.abi).at(activityStoreAddress);
var routebookEvidenceStore = {};        // eth.contract(EvidenceStoreCompiled.abi).at(evidenceStoreAddress);
var workdayEvidenceStore = {}; // eth.contract(EvidenceStoreCompiled.abi).at(evidenceStoreAddress);
var roleStore = {};        // eth.contract(RoleStoreCompiled.abi).at(roleStoreAddress);
var operationbookDistributionStore = {};
var rulebookDistributionStore = {};
var routebookDistributionStore = {};



var deployGas = 6712390;
var transGas = 600000;

var procedures = [];

var Actor = {
    'NONE' : 0,
    'PF' :  1,
    'CGS' : 2,
    'RO' : 4,
    'RS' :  8
}
var RuleBookStatus = {
  'Created' : 0,
  'CGSSent' : 1,
  'CGSReceived' : 2,
  'DistributionDone' : 3
};

var RuleBookAction = {
  'None' : 0,
  'Create' : 1,
  'SendCGS' : 2,
  'ReceiveCGS' : 3,
  'EndDistribution' : 4
};

var RuleBookStatusFlag = {
  'NONE': 0,
  'Created' : 1,
  'CGSSent' : 2,
  'CGSReceived' : 4,
  'DistributionDone' : 8
};

var WorkdayStatus = {
  'Analyzing' : 0,
  'Created' : 1,
  'Reviewing' : 2,
  'Sent' : 3,
  'Received' : 4,
  'Verified' : 5,
  'WorkDate': 6
};

var WorkdayAction = {
  'None' : 0,
  'Create' : 1,
  'DoGraphic' : 2,
  'Review' : 3,
  'Send' : 4,
  'Receive' : 5,
  'SendVerification' : 6
};

var WorkdayStatusFlag = {
  'NONE': 0,
  'Analyzing' : 1,
  'Created' : 2,
  'Reviewing' : 4,
  'Sent' : 8,
  'Received' : 16,
  'Verified' : 32,
  'WorkDate': 64
};


var ActivityStatus = {
    'Reported': 0,
    'CGSReceived': 1,
    'ReportDone': 2,
    'ActivityDate': 3
};

var ActivityAction = {
    'None': 0,
    'Create': 1,
    'Receive': 2,
    'DoReport': 3
};

var TrainStatus = {
    'Created': 0,
    'End': 1
};

var TrainAction = {
    'None': 0,
    'Create': 1,
    'Close': 2
};

var TrainStatusFlag = {
  'NONE' : 0,
  'Created' : 1,
  'End' : 2
}

var operationbookStatus = {
  'Created' : 0,
  'CGSSent' : 1,
  'CGSReceived' : 2,
  'DistributionDone' : 3
};

var operationbookStatusFlag = {
  'NONE': 0,
  'Created' : 1,
  'CGSSent' : 2,
  'CGSReceived' : 4,
  'DistributionDone' : 8
};

var operationbookAction = {
  'None' : 0,
  'Create' : 1,
  'SendCGS' : 2,
  'ReceiveCGS' : 3,
  'EndDistribution' : 4
};

var RouteBookStatus = {
  'Analyzing' : 0,
  'Created' : 1,
  'CGSSent' : 2,
  'CGSReceived' : 3,
  'DistributionDone' : 4
};

var RouteBookStatusFlag = {
  'NONE': 0,
  'Analyzing' : 1,
  'Created' : 2,
  'CGSSent' : 4,
  'CGSReceived' : 8,
  'DistributionDone' : 16
};

var RouteBookAction = {
  'None' : 0,
  'Open' : 1,
  'Create' : 2,
  'SendCGS' : 3,
  'ReceiveCGS' : 4,
  'EndDistribution' : 5
};

var ChecklistStatus = {
  'Created' : 0,
  'Sent' : 1,
  'Received' : 2,
  'Stored' : 3
};

var ChecklistAction = {
  'None' : 0,
  'Create' : 1,
  'Send' : 2,
  'Receive' : 3,
  'Store' : 4
};

var TransferStatus = {
  'Created' : 0,
  'OutgoingSigned' : 1,
  'IncomingSigned' : 2
};

var TransferAction = {
  'None' : 0,
  'Create' : 1,
  'SignOut' : 2,
  'SignIn' : 3
};

var CargoCardStatus = {
  'Created' : 0,
  'ResultsSent' : 1,
  'ResultsReceived' : 2
};

var CargoCardStatusFlag = {
  'NONE' : 0,
  'Created' : 1,
  'ResultsSent' : 2,
  'ResultsReceived' : 4,
};

var CargoCardAction = {
  'None' : 0,
  'Create' : 1,
  'SendResults' : 2,
  'ReceiveResults' : 3
};

var BookDistributionStatus = {
  'Created' : 0,
  'PFReceived' : 1,
  'RSSent' : 2,
  'RSReceived' : 3,
  'End' : 4
};

var BookDistributionAction = {
  'None' : 0,
  'Create' : 1,
  'ReceivePF' : 2,
  'SendRS' : 3,
  'ReceiveRS' : 4,
  'StoreACK' : 5
};

var EvidenceStatus = {
  'Created' : 0
};

var EvidenceAction = {
  'None' : 0,
  'Create' : 1
};

var EvidenceStatusFlag = {
  'NONE': 0,
  'Created' : 1
};

var CardStatus = {
  'CardSent' : 0,
  'Received' : 1,
  'Stored' : 2
};

var CardAction = {
  'None' : 0,
  'Create' : 1,
  'Receive' : 2,
  'Store' : 3
};

var VerificationStatus = {
  'InformationSent' : 0,
  'Verified' : 1
};

var VerificationAction = {
  'None' : 0,
  'SendInformation' : 1,
  'VerifyCGS' : 2
};

var CardType =  {
    'CGSCards': 'cgscard',
    'PFCards': 'pfcard'
};

var EvidenceStoreName = {
    'BookEvidence' : 'BookEvidence',
    'WorkdayEvidence' : 'WorkdayEvidence'
};

var BookStoreName = {
    'operationbook' : 'operationbook',
    'RouteBook' : 'routebook'
};

var BookDistributionName = {
    'RuleBook' : 'rulebook',
    'RouteBook' : 'routebook',
    'operationbook' : 'operationbook'
};

var deployRailwayProcedure = function (owner, deployRailwayProcedureCallback) {
    railwayProcedureContract.new({
        from: owner,
        data: RailwayProcedureCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RailwayProcedureStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RailwayProcedureStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RailwayProcedureStore contract mined! address: "' + contract.address + '"\n');
                deployRailwayProcedureCallback(contract);
            }
        }
    });
};

var deployTrainProcedure = function (owner, deployTrainProcedureCallback) {
    trainProcedureContract.new({
        from: owner,
        data: TrainProcedureCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating TrainProcedureStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for TrainProcedureStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('TrainProcedureStore contract mined! address: "' + contract.address + '"\n');
                deployTrainProcedureCallback(contract);
            }
        }
    });
};

var deployTrainStore = function (owner, deployTrainStoreCallback) {
    trainContract.new({
        from: owner,
        data: TrainStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating TrainStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for TrainStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('TrainStore contract mined! address: "' + contract.address + '"\n');
                deployTrainStoreCallback(contract);
            }
        }
    });
};

var deployRuleBookStore = function (owner, deployRuleBookStoreCallback) {
    ruleBookContract.new({
        from: owner,
        data: RuleBookStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RuleBookStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RuleBookStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RuleBookStore contract mined! address: "' + contract.address + '"\n');
                deployRuleBookStoreCallback(contract);
            }
        }
    });
};

var deployOperationBookStore = function (owner, deployOperationbookStoreCallback) {
    routeBookContract.new({
        from: owner,
        data: OperationBookStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RouteBookStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RouteBookStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RouteBookStore contract mined! address: "' + contract.address + '"\n');
                deployOperationbookStoreCallback(contract);
            }
        }
    });
};

var deployRouteBookStore = function (owner, deployRouteBookStoreCallback) {
    routeBookContract.new({
        from: owner,
        data: RouteBookStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RouteBookStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RouteBookStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RouteBookStore contract mined! address: "' + contract.address + '"\n');
                deployRouteBookStoreCallback(contract);
            }
        }
    });
};

var deployBookDistributionStore = function (owner, deployBookDistributionStoreCallback) {
    bookDistributionContract.new({
        from: owner,
        data: BookDistributionStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating BookDistributionStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for BookDistributionStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('BookDistributionStore contract mined! address: "' + contract.address + '"\n');
                deployBookDistributionStoreCallback(contract);
            }
        }
    });
};

var deployCargoCardStore = function (owner, deployCargoCardStoreCallback) {
    cargoCardContract.new({
        from: owner,
        data: CargoCardStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating CargoCardStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for CargoCardStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('CargoCardStore contract mined! address: "' + contract.address + '"\n');
                deployCargoCardStoreCallback(contract);
            }
        }
    });
};

var deployTransferStore = function (owner, deployTransferStoreCallback) {
    transferContract.new({
        from: owner,
        data: TransferStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating TransferStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for TransferStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('TransferStore contract mined! address: "' + contract.address + '"\n');
                deployTransferStoreCallback(contract);
            }
        }
    });
};

var deployChecklistStore = function (owner, deployChecklistStoreCallback) {
    checklistContract.new({
        from: owner,
        data: ChecklistStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating ChecklistStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for ChecklistStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('ChecklistStore contract mined! address: "' + contract.address + '"\n');
                deployChecklistStoreCallback(contract);
            }
        }
    });
};

var deployCardStore = function (owner, deployCardStoreCallback) {
    cardContract.new({
        from: owner,
        data: CardStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating CardStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for CardStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('CardStore contract mined! address: "' + contract.address + '"\n');
                deployCardStoreCallback(contract);
            }
        }
    });
};

var deployVerificationStore = function (owner, deployVerificationStoreCallback) {
    verificationContract.new({
        from: owner,
        data: VerificationStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating VerificationStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for VerificationStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('VerificationStore contract mined! address: "' + contract.address + '"\n');
                deployVerificationStoreCallback(contract);
            }
        }
    });
};

var deployWorkdayStore = function (owner, deployWorkdayStoreCallback) {
    workdayContract.new({
        from: owner,
        data: WorkdayStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating WorkdayStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for WorkdayStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('WorkdayStore contract mined! address: "' + contract.address + '"\n');
                deployWorkdayStoreCallback(contract);
            }
        }
    });
};

var deployActivityStore = function (owner, deployActivityStoreCallback) {
    activityContract.new({
        from: owner,
        data: ActivityStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating ActivityStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for ActivityStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('ActivityStore contract mined! address: "' + contract.address + '"\n');
                deployActivityStoreCallback(contract);
            }
        }
    });
};

var deployEvidenceStore = function (owner, deployEvidenceStoreCallback) {
    evidenceContract.new({
        from: owner,
        data: EvidenceStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating EvidenceStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for EvidenceStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('EvidenceStore contract mined! address: "' + contract.address + '"\n');
                deployEvidenceStoreCallback(contract);
            }
        }
    });
};


var deployRoleStore = function (owner, deployRoleStoreCallback) {
    roleContract.new({
        from: owner,
        data: RoleStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RoleStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RoleStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RoleStore contract mined! address: "' + contract.address + '"\n');
                deployRoleStoreCallback(contract);
            }
        }
    });
};

var linkContracts = function (
  railwayProcedure,ruleBookStore,rulebookDistributionStore,workdayStore,
  activityStore,transferStore,checklistStore,workdayEvidenceStore,
  trainProcedure,trainStore,operationbookStore,operationbookDistributionStore,
  routeBookStore,routebookDistributionStore,cargoCardStore, cardCGSStore, cardPFStore,
  verificationStore,routebookEvidenceStore, rolestore) {

    console.log('Linking contracts ');
    railwayProcedure.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    trainProcedure.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    trainStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    ruleBookStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});

    operationbookStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    routeBookStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    rulebookDistributionStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    cargoCardStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    transferStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    checklistStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    cardCGSStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    cardPFStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    verificationStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    workdayStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    activityStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    workdayEvidenceStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    routebookEvidenceStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    operationbookDistributionStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});
    routebookDistributionStore.setRoleContract(rolestore.address, {from: owner, gas: transGas});

    console.log('RoleStore in RailwayProcedure and stores done.');
    console.log(ruleBookStore.address);

    railwayProcedure.setRuleBookContract(ruleBookStore.address, {from: owner, gas: transGas});
    railwayProcedure.setRuleBookDistributionContract(rulebookDistributionStore.address, {from: owner, gas: transGas});
    railwayProcedure.setWorkdayContract(workdayStore.address, {from: owner, gas: transGas});
    railwayProcedure.setActivityContract(activityStore.address, {from: owner, gas: transGas});
    railwayProcedure.setTrainContract(trainStore.address, {from: owner, gas: transGas});
    railwayProcedure.setTransferContract(transferStore.address, {from: owner, gas: transGas});
    railwayProcedure.setChecklistContract(checklistStore.address, {from: owner, gas: transGas});
    railwayProcedure.setVerificationContract(verificationStore.address, {from: owner, gas: transGas});
    railwayProcedure.setEvidenceContract(EvidenceStoreName.WorkdayEvidence, workdayEvidenceStore.address, {from: owner, gas: transGas});
    console.log('RuleBookStore, BookDistributionStore, WorkdayStore, ActivityStore, TrainStore, TransferStore, VerificationStore and WorkdayEvidenceStore in RailwayProcedure done.');

    trainProcedure.setTrainContract(trainStore.address, {from: owner, gas: transGas});
    trainProcedure.setBookContract(BookStoreName.operationbook, operationbookStore.address, {from: owner, gas: transGas});
    trainProcedure.setBookContract(BookStoreName.RouteBook, routeBookStore.address, {from: owner, gas: transGas});
    trainProcedure.setBookDistributionContract(BookDistributionName.operationbook, operationbookDistributionStore.address, {from: owner, gas: transGas});
    trainProcedure.setBookDistributionContract(BookDistributionName.RouteBook , routebookDistributionStore.address, {from: owner, gas: transGas});
    trainProcedure.setCargoCardContract(cargoCardStore.address, {from: owner, gas: transGas});
    trainProcedure.setCardContract(CardType.CGSCards, cardCGSStore.address, {from: owner, gas: transGas});
    trainProcedure.setCardContract(CardType.PFCards, cardPFStore.address, {from: owner, gas: transGas});
    trainProcedure.setVerificationContract(verificationStore.address, {from: owner, gas: transGas});
    trainProcedure.setEvidenceContract(EvidenceStoreName.BookEvidence, routebookEvidenceStore.address, {from: owner, gas: transGas});
    console.log('TrainStore, operationbookStore, RouteBookStore, RuleBookStore, RouteBookStore, operationbookStore, CargoCardStore, CGSCardsStore, PFCardsStore, VerificationStore and BookEvidenceStore in TrainProcedure done.');

    ruleBookStore.setContractStore(railwayProcedure.address, {from: owner, gas: transGas});
    console.log('RailwayProcedure in RuleBookStore done.');
    rulebookDistributionStore.setParentAddress(ruleBookStore.address, {from: owner, gas: transGas});
    console.log('ruleBookStore in rulebookDistributionStore done.');
    workdayStore.setContractStore(railwayProcedure.address, {from: owner, gas: transGas});
    console.log('RailwayProcedure in WorkdayStore done.');
    activityStore.setContractStore(railwayProcedure.address, {from: owner, gas: transGas});
    console.log('RailwayProcedure in ActivityStore done.');
    transferStore.setContractStore(railwayProcedure.address, {from: owner, gas: transGas});
    console.log('RailwayProcedure in TransferStore done.');
    checklistStore.setContractStore(railwayProcedure.address, {from: owner, gas: transGas});
    console.log('RailwayProcedure in ChecklistStore done.');
    verificationStore.setContractStore(railwayProcedure.address, {from: owner, gas: transGas});
    console.log('RailwayProcedure in VerificationStore done.');
    workdayEvidenceStore.setParentAddress(workdayStore.address, {from: owner, gas: transGas});
    console.log('workdayStore in WorkdayEvidenceStore done.');


    trainStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in TrainStore done.');
    operationbookStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in operationbookStore done.');
    routeBookStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in RouteBookStore done.');
    cargoCardStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in CargoCardStore done.');
    cardCGSStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in CardCGSStore done.');
    cardPFStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in CardPFStore done.');
    verificationStore.setContractStore(trainProcedure.address, {from: owner, gas: transGas});
    console.log('TrainProcedure in VerificationStore done.');
    routebookEvidenceStore.setParentAddress(routeBookStore.address, {from: owner, gas: transGas});
    console.log('routeBookStore in routebookEvidenceStore done.');
    operationbookDistributionStore.setParentAddress(operationbookStore.address, {from: owner, gas: transGas});
    console.log('operationbookStore in operationbookDistributionStore done.');
    routebookDistributionStore.setParentAddress(routeBookStore.address, {from: owner, gas: transGas});
    console.log('routeBookStore in routebookDistributionStore done.');

    railwayProcedureAddress = railwayProcedure.address;
    trainProcedureAddress = trainProcedure.address;
    trainStoreAddress = trainStore.address;
    ruleBookStoreAddress = ruleBookStore.address;
    routeBookStoreAddress = routeBookStore.address;
    operationbookStoreAddress = operationbookStore.address;
    rulebookDistributionStoreAddress = rulebookDistributionStore.address;
    operationbookDistributionStoreAddress = operationbookDistributionStore.address;
    routebookDistributionStoreAddress = routebookDistributionStore.address;
    cargoCardStoreAddress = cargoCardStore.address;
    transferStoreAddress = transferStore.address;
    checklistStoreAddress = checklistStore.address;
    cardCGSStoreAddress = cardCGSStore.address;
    cardPFStoreAddress = cardPFStore.address;
    verificationStoreAddress = verificationStore.address;
    workdayStoreAddress = workdayStore.address;
    activityStoreAddress = activityStore.address;
    routebookEvidenceStoreAddress = routebookEvidenceStore.address;
    workdayEvidenceStoreAddress = workdayEvidenceStore.address;
    roleStoreAddress = rolestore.address;

    // Print Info
    info();

};

var deploy = function () {
    console.log('Calling contract creation');
    deployRailwayProcedure(owner, function (railwayProcedure) {
        console.log('railwayProcedure ready, calling trainProcedure');
        deployTrainProcedure(owner, function (trainProcedure) {
            console.log('RuleBookStore ready, calling rulebookDistributionStore');
            deployBookDistributionStore(owner, function (rulebookDistributionStore) {
                console.log('BookDistributionStore ready, calling workdayStore');
                deployWorkdayStore(owner, function (workdayStore) {
                    console.log('WorkdayStore ready, calling activityStore');
                    deployActivityStore(owner, function (activityStore) {
                        console.log('activityStore ready, calling transferStore');
                        deployTransferStore(owner, function (transferStore) {
                            console.log('TransferStore ready, calling checklistStore');
                            deployChecklistStore(owner, function (checklistStore) {
                                console.log('ChecklistStore ready, calling workdayEvidenceStore');
                                deployEvidenceStore(owner, function (workdayEvidenceStore) {
                                    console.log('workdayEvidenceStore ready, calling ruleBookStore');
                                    deployRuleBookStore(owner, function (ruleBookStore) {
                                        console.log('ruleBookStore ready, calling trainStore');
                                        deployTrainStore(owner, function (trainStore) {
                                            console.log('TrainStore ready, calling operationbookStore');
                                            deployOperationBookStore(owner, function (operationbookStore) {
                                                console.log('operationbookStore ready, calling operationbookDistributionStore');
                                                deployBookDistributionStore(owner, function (operationbookDistributionStore) {
                                                    console.log('operationbookDistributionStore ready, calling routeBookStore');
                                                    deployRouteBookStore(owner, function (routeBookStore) {
                                                        console.log('operationbookStore ready, calling routebookDistributionStore');
                                                        deployBookDistributionStore(owner, function (routebookDistributionStore) {
                                                            console.log('routebookDistributionStore ready, calling cargoCardStore');
                                                            deployCargoCardStore(owner, function (cargoCardStore) {
                                                                console.log('CargoCardStore ready, calling cardCGSStore');
                                                                deployCardStore(owner, function (cardCGSStore) {
                                                                    console.log('CardCGSStore ready, calling cardPFStore');
                                                                    deployCardStore(owner, function (cardPFStore) {
                                                                      console.log('cardPFStore ready, calling verificationStore');
                                                                      deployVerificationStore(owner, function (verificationStore) {
                                                                          console.log('VerificationStore ready, calling roleStore');
                                                                          deployEvidenceStore(owner, function (routebookEvidenceStore) {
                                                                              console.log('BookEvidenceStore ready, calling roleStore');
                                                                              deployRoleStore(owner, function (roleStore) {
                                                                                  console.log('RoleStore ready, calling final config');
                                                                                  linkContracts(
                                                                                    railwayProcedure,ruleBookStore,rulebookDistributionStore,workdayStore,
                                                                                        activityStore,transferStore,checklistStore,workdayEvidenceStore,
                                                                                        trainProcedure,trainStore,operationbookStore,operationbookDistributionStore,
                                                                                        routeBookStore,routebookDistributionStore,cargoCardStore, cardCGSStore, cardPFStore,
                                                                                        verificationStore,routebookEvidenceStore, roleStore
                                                                                    );
                                                                              });
                                                                          });
                                                                      });
                                                                    });
                                                                });
                                                            });
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};

// ========================================================================

var ruleBookStorePromotions = function (ruleBookStore) {
    console.log('Setting ruleBookStore Promotions ... ');
    //                             Action         currentStatus       onlyBy      finalStatus           position
    ruleBookStore.setPromotion(RuleBookAction.Create,           RuleBookStatus.Created,           Actor.RS,               RuleBookStatus.Created,           RuleBookStatus.Created,           {from:owner, gas: transGas});
    ruleBookStore.setPromotion(RuleBookAction.SendCGS,          RuleBookStatus.Created,           Actor.RS,               RuleBookStatus.CGSSent,           RuleBookStatus.CGSSent,           {from:owner, gas: transGas});
    ruleBookStore.setPromotion(RuleBookAction.ReceiveCGS,       RuleBookStatus.CGSSent,           Actor.RS| Actor.CGS,    RuleBookStatus.CGSReceived,       RuleBookStatus.CGSReceived,       {from:owner, gas: transGas});
    ruleBookStore.setPromotion(RuleBookAction.EndDistribution,  RuleBookStatus.CGSReceived,       Actor.RS| Actor.CGS,    RuleBookStatus.DistributionDone,  RuleBookStatus.DistributionDone,  {from:owner, gas: transGas});

    var promo = ruleBookStore.getPromotion(RuleBookAction.EndDistribution,  RuleBookStatus.CGSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var rulebookDistributionStorePromotions = function (bookDistributionStore) {
    console.log('Setting rulebookDistributionStorePromotions Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    bookDistributionStore.setPromotion(BookDistributionAction.Create,    BookDistributionStatus.Created     , Actor.RS | Actor.CGS , BookDistributionStatus.Created    , BookDistributionStatus.Created,    RuleBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.ReceivePF, BookDistributionStatus.Created     , Actor.RS | Actor.PF  , BookDistributionStatus.PFReceived , BookDistributionStatus.PFReceived, RuleBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.SendRS,    BookDistributionStatus.PFReceived  , Actor.RS | Actor.CGS , BookDistributionStatus.RSSent     , BookDistributionStatus.RSSent,     RuleBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.ReceiveRS, BookDistributionStatus.RSSent      , Actor.RS             , BookDistributionStatus.RSReceived , BookDistributionStatus.RSReceived, RuleBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.StoreACK , BookDistributionStatus.RSReceived  , Actor.RS             , BookDistributionStatus.End        , BookDistributionStatus.End       , RuleBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});

    var promo = bookDistributionStore.getPromotion(BookDistributionAction.StoreACK,  BookDistributionStatus.RSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS , 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var operationbookDistributionStorePromotions = function (bookDistributionStore) {
    console.log('Setting operationbookDistributionStorePromotions Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    bookDistributionStore.setPromotion(BookDistributionAction.Create,    BookDistributionStatus.Created     , Actor.RS | Actor.CGS , BookDistributionStatus.Created    , BookDistributionStatus.Created,    operationbookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.ReceivePF, BookDistributionStatus.Created     , Actor.RS | Actor.PF  , BookDistributionStatus.PFReceived , BookDistributionStatus.PFReceived, operationbookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.SendRS,    BookDistributionStatus.PFReceived  , Actor.RS | Actor.CGS , BookDistributionStatus.RSSent     , BookDistributionStatus.RSSent,     operationbookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.ReceiveRS, BookDistributionStatus.RSSent      , Actor.RS             , BookDistributionStatus.RSReceived , BookDistributionStatus.RSReceived, operationbookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.StoreACK , BookDistributionStatus.RSReceived  , Actor.RS             , BookDistributionStatus.End        , BookDistributionStatus.End       , operationbookStatusFlag.CGSReceived,   {from:owner, gas: transGas});

    var promo = bookDistributionStore.getPromotion(BookDistributionAction.StoreACK,  BookDistributionStatus.RSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS , 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var routebookDistributionStorePromotions = function (bookDistributionStore) {
    console.log('Setting routebookDistributionStorePromotions Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    bookDistributionStore.setPromotion(BookDistributionAction.Create,    BookDistributionStatus.Created     , Actor.RS | Actor.CGS , BookDistributionStatus.Created    , BookDistributionStatus.Created,    RouteBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.ReceivePF, BookDistributionStatus.Created     , Actor.RS | Actor.PF  , BookDistributionStatus.PFReceived , BookDistributionStatus.PFReceived, RouteBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.SendRS,    BookDistributionStatus.PFReceived  , Actor.RS | Actor.CGS , BookDistributionStatus.RSSent     , BookDistributionStatus.RSSent,     RouteBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.ReceiveRS, BookDistributionStatus.RSSent      , Actor.RS             , BookDistributionStatus.RSReceived , BookDistributionStatus.RSReceived, RouteBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});
    bookDistributionStore.setPromotion(BookDistributionAction.StoreACK , BookDistributionStatus.RSReceived  , Actor.RS             , BookDistributionStatus.End        , BookDistributionStatus.End       , RouteBookStatusFlag.CGSReceived,   {from:owner, gas: transGas});

    var promo = bookDistributionStore.getPromotion(BookDistributionAction.StoreACK,  BookDistributionStatus.RSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS , 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var workdayStorePromotions = function (workdayStore) {
    console.log('Setting WorkdayStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    workdayStore.setPromotion(WorkdayAction.Create,             WorkdayStatus.Analyzing,      Actor.RO | Actor.RS,    WorkdayStatus.Analyzing,   WorkdayStatus.Analyzing,   {from:owner, gas: transGas});
    workdayStore.setPromotion(WorkdayAction.DoGraphic,          WorkdayStatus.Analyzing,      Actor.RO | Actor.RS,    WorkdayStatus.Created,     WorkdayStatus.Created,     {from:owner, gas: transGas});
    workdayStore.setPromotion(WorkdayAction.Review,             WorkdayStatus.Created,        Actor.RO | Actor.RS,    WorkdayStatus.Reviewing,   WorkdayStatus.Reviewing,   {from:owner, gas: transGas});
    workdayStore.setPromotion(WorkdayAction.Send,               WorkdayStatus.Reviewing,      Actor.RO | Actor.RS,    WorkdayStatus.Sent,        WorkdayStatus.Sent,        {from:owner, gas: transGas});
    workdayStore.setPromotion(WorkdayAction.Receive,            WorkdayStatus.Sent,           Actor.RS,               WorkdayStatus.Received,    WorkdayStatus.Received,    {from:owner, gas: transGas});
    workdayStore.setPromotion(WorkdayAction.SendVerification,   WorkdayStatus.Received,       Actor.RS,               WorkdayStatus.Verified,    WorkdayStatus.Verified,    {from:owner, gas: transGas});

    var promo = workdayStore.getPromotion(WorkdayAction.SendVerification,  WorkdayStatus.Received, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS , 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var activityStorePromotions = function (activityStore) {
    console.log('Setting ActivityStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    activityStore.setPromotion(ActivityAction.Create,           ActivityStatus.Reported,      Actor.RO | Actor.RS,  ActivityStatus.Reported,      ActivityStatus.Reported,    {from:owner, gas: transGas});
    activityStore.setPromotion(ActivityAction.Receive,          ActivityStatus.Reported,      Actor.RO | Actor.RS,  ActivityStatus.CGSReceived,   ActivityStatus.CGSReceived, {from:owner, gas: transGas});
    activityStore.setPromotion(ActivityAction.DoReport,         ActivityStatus.CGSReceived,   Actor.RO | Actor.RS,  ActivityStatus.ReportDone,    ActivityStatus.ReportDone,  {from:owner, gas: transGas});

    var promo = activityStore.getPromotion(ActivityAction.DoReport,  ActivityStatus.CGSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RO | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var transferStorePromotions = function (transferStore) {
    console.log('Setting TransferStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    transferStore.setPromotion(TransferAction.Create,         TransferStatus.Created,             Actor.RS | Actor.PF,          TransferStatus.Created,             TransferStatus.Created,             TrainStatusFlag.Created,      {from:owner, gas: transGas});
    transferStore.setPromotion(TransferAction.SignOut,        TransferStatus.Created,             Actor.RS | Actor.PF,          TransferStatus.OutgoingSigned,      TransferStatus.OutgoingSigned,      TrainStatusFlag.Created,      {from:owner, gas: transGas});
    transferStore.setPromotion(TransferAction.SignIn,         TransferStatus.OutgoingSigned,      Actor.RS | Actor.PF,          TransferStatus.IncomingSigned,      TransferStatus.IncomingSigned,      TrainStatusFlag.Created,      {from:owner, gas: transGas});

    var promo = activityStore.getPromotion(TransferAction.SignIn,  TransferStatus.OutgoingSigned, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.PF, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var checklistStorePromotions = function (checklistStore) {
    console.log('Setting ChecklistStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    checklistStore.setPromotion(ChecklistAction.Create,         ChecklistStatus.Created,            Actor.RS | Actor.PF,          ChecklistStatus.Created,          ChecklistStatus.Created,        TrainStatusFlag.Created,      {from:owner, gas: transGas});
    checklistStore.setPromotion(ChecklistAction.Send,           ChecklistStatus.Created,            Actor.RS | Actor.PF,          ChecklistStatus.Sent,             ChecklistStatus.Sent,           TrainStatusFlag.Created,      {from:owner, gas: transGas});
    checklistStore.setPromotion(ChecklistAction.Receive,        ChecklistStatus.Sent,               Actor.RS | Actor.CGS,         ChecklistStatus.Received,         ChecklistStatus.Received,       TrainStatusFlag.Created,      {from:owner, gas: transGas});
    checklistStore.setPromotion(ChecklistAction.Store,          ChecklistStatus.Received,           Actor.RS | Actor.CGS,         ChecklistStatus.Stored,           ChecklistStatus.Stored,         TrainStatusFlag.Created,      {from:owner, gas: transGas});

    var promo = checklistStore.getPromotion(ChecklistAction.Store,  ChecklistStatus.Received, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var trainStorePromotions = function (trainStore) {
    console.log('Setting TrainStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    trainStore.setPromotion(TrainAction.Create,       TrainStatus.Created,            Actor.RS,    TrainStatus.Created,        TrainStatus.Created,    { from: owner, gas: transGas });
    trainStore.setPromotion(TrainAction.Close,        TrainStatus.Created,            Actor.RS,    TrainStatus.End,            TrainStatus.End,        { from: owner, gas: transGas });
    var promo = trainStore.getPromotion(TrainAction.Close,  TrainStatus.Created, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS , 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var operationbookStorePromotions = function (checklistStore) {
    console.log('Setting operationbookStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    operationbookStore.setPromotion(operationbookAction.Create,          operationbookStatus.Created,     Actor.RS,                operationbookStatus.Created,            operationbookStatus.Created,            TrainStatusFlag.Created, {from : owner, gas: transGas});
    operationbookStore.setPromotion(operationbookAction.SendCGS,         operationbookStatus.Created,     Actor.RS,                operationbookStatus.CGSSent,            operationbookStatus.CGSSent,            TrainStatusFlag.Created, {from : owner, gas: transGas});
    operationbookStore.setPromotion(operationbookAction.ReceiveCGS,      operationbookStatus.CGSSent,     Actor.RS | Actor.CGS,    operationbookStatus.CGSReceived,        operationbookStatus.CGSReceived,        TrainStatusFlag.Created, {from : owner, gas: transGas});
    operationbookStore.setPromotion(operationbookAction.EndDistribution, operationbookStatus.CGSReceived, Actor.RS | Actor.CGS,    operationbookStatus.DistributionDone,   operationbookStatus.DistributionDone,   TrainStatusFlag.Created, {from : owner, gas: transGas});

    var promo = operationbookStore.getPromotion(operationbookAction.EndDistribution,  operationbookStatus.CGSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var routeBookPromotions = function (routeBookStore) {
    console.log('Setting RouteBookStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    routeBookStore.setPromotion(RouteBookAction.Open,             RouteBookStatus.Analyzing,    Actor.RS,                RouteBookStatus.Analyzing,         RouteBookStatus.Analyzing,          TrainStatusFlag.Created, {from : owner, gas: transGas});
    routeBookStore.setPromotion(RouteBookAction.Create,           RouteBookStatus.Analyzing,    Actor.RS,                RouteBookStatus.Created,           RouteBookStatus.Created,            TrainStatusFlag.Created, {from : owner, gas: transGas});
    routeBookStore.setPromotion(RouteBookAction.SendCGS,          RouteBookStatus.Created,      Actor.RS,                RouteBookStatus.CGSSent,           RouteBookStatus.CGSSent,            TrainStatusFlag.Created, {from : owner, gas: transGas});
    routeBookStore.setPromotion(RouteBookAction.ReceiveCGS,       RouteBookStatus.CGSSent,      Actor.RS | Actor.CGS,    RouteBookStatus.CGSReceived,       RouteBookStatus.CGSReceived,        TrainStatusFlag.Created, {from : owner, gas: transGas});
    routeBookStore.setPromotion(RouteBookAction.EndDistribution,  RouteBookStatus.CGSReceived,  Actor.RS | Actor.CGS,    RouteBookStatus.DistributionDone,  RouteBookStatus.DistributionDone,   TrainStatusFlag.Created, {from : owner, gas: transGas});

    var promo = routeBookStore.getPromotion(RouteBookAction.EndDistribution,  RouteBookStatus.CGSReceived, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var cargoCardPromotions = function (cargoCardStore) {
    console.log('Setting CargoCardStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    cargoCardStore.setPromotion(CargoCardAction.Create,           CargoCardStatus.Created,            Actor.RS,                     CargoCardStatus.Created,            CargoCardStatus.Created,            TrainStatusFlag.Created,      {from:owner, gas: transGas});
    cargoCardStore.setPromotion(CargoCardAction.SendResults,      CargoCardStatus.Created,            Actor.RS | Actor.PF,          CargoCardStatus.ResultsSent,        CargoCardStatus.ResultsSent,        TrainStatusFlag.Created,      {from:owner, gas: transGas});
    cargoCardStore.setPromotion(CargoCardAction.ReceiveResults,   CargoCardStatus.ResultsSent,        Actor.RS | Actor.CGS,         CargoCardStatus.ResultsReceived,    CargoCardStatus.ResultsReceived,    TrainStatusFlag.Created,      {from:owner, gas: transGas});

    var promo = cargoCardStore.getPromotion(CargoCardAction.ReceiveResults,  CargoCardStatus.ResultsSent, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var cardCGSPromotions = function (cardStore) {
    console.log('Setting CardStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    cardStore.setPromotion(CardAction.Create,                 CardStatus.CardSent,            Actor.RS,                     CardStatus.CardSent,        CardStatus.CardSent,      CargoCardStatusFlag.Created,      {from:owner, gas: transGas});
    cardStore.setPromotion(CardAction.Receive,                CardStatus.CardSent,            Actor.RS | Actor.CGS,         CardStatus.Received,        CardStatus.Received,      CargoCardStatusFlag.Created,      {from:owner, gas: transGas});
    cardStore.setPromotion(CardAction.Store,                  CardStatus.Received,            Actor.RS ,                    CardStatus.Stored,          CardStatus.Stored,        CargoCardStatusFlag.Created,      {from:owner, gas: transGas});

    var promo = cardStore.getPromotion(CardAction.Store,  CardStatus.Received, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var cardPFPromotions = function (cardStore) {
    console.log('Setting CardStore Promotions ... ');
    //                              Action                                currentStatus                 onlyBy       finalStatus                          position
    cardStore.setPromotion(CardAction.Create,                 CardStatus.CardSent,            Actor.RS,                     CardStatus.CardSent,        CardStatus.CardSent,      CargoCardStatusFlag.Created,      {from:owner, gas: transGas});
    cardStore.setPromotion(CardAction.Receive,                CardStatus.CardSent,            Actor.RS | Actor.PF,         CardStatus.Received,        CardStatus.Received,      CargoCardStatusFlag.Created,      {from:owner, gas: transGas});
    cardStore.setPromotion(CardAction.Store,                  CardStatus.Received,            Actor.RS ,                    CardStatus.Stored,          CardStatus.Stored,        CargoCardStatusFlag.Created,      {from:owner, gas: transGas});

    var promo = cardStore.getPromotion(CardAction.Store,  CardStatus.Received, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var evidenceWorkdayPromotions = function(evidenceStore){
    console.log('Setting evidenceWorkdayStore Promotions ... ');
    evidenceStore.setPromotion(EvidenceAction.Create , EvidenceStatus.Created       , Actor.RS | Actor.RO , EvidenceStatus.Created     , EvidenceStatus.Created , WorkdayStatusFlag.Analyzing, {from:owner, gas: transGas});

    var promo = evidenceStore.getPromotion(EvidenceAction.Create,  EvidenceStatus.Created, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.RO, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var evidenceRouteBookPromotions = function(evidenceStore){
    console.log('Setting evidenceRouteBookStore Promotions ... ');
    evidenceStore.setPromotion(EvidenceAction.Create , EvidenceStatus.Created       , Actor.RS | Actor.RO , EvidenceStatus.Created     , EvidenceStatus.Created , RouteBookStatusFlag.Analyzing, {from:owner, gas: transGas});

    var promo = evidenceStore.getPromotion(EvidenceAction.Create,  EvidenceStatus.Created, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.RO, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var verificationPromotions = function(verificationStore) {
    console.log('Setting verificationRouteBookStore Promotions ... ');

    verificationStore.setPromotion(VerificationAction.SendInformation,      VerificationStatus.InformationSent,     Actor.RS,                     VerificationStatus.InformationSent,         VerificationStatus.InformationSent,         RouteBookStatusFlag.Analyzing,      {from:owner, gas: transGas});
    verificationStore.setPromotion(VerificationAction.VerifyCGS,            VerificationStatus.InformationSent,     Actor.RS | Actor.CGS,         VerificationStatus.Verified,                VerificationStatus.Verified,                RouteBookStatusFlag.Analyzing,      {from:owner, gas: transGas});

    var promo = verificationStore.getPromotion(VerificationAction.VerifyCGS,  VerificationStatus.InformationSent, {from: owner, gas: transGas});
    result = assert(promo[0] == Actor.RS | Actor.CGS, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var info = function () {
    console.log('-------------------------- CONTRACTS INFO -------------------------');
    console.log('/* Copy & paste this to access deployed contracts */');
    console.log('setAddrs({');
    console.log('railwayProcedure : "' + railwayProcedureAddress + '",');
    console.log('trainProcedure : "' + trainProcedureAddress + '",');
    console.log('ruleBookStore : "' + ruleBookStoreAddress + '",');
    console.log('routeBookStore : "' + routeBookStoreAddress + '",');
    console.log('routeBookEvidenceStore : "' + routebookEvidenceStoreAddress + '",');
    console.log('operationbookStore : "' + operationbookStoreAddress + '",');
    console.log('rulebookDistributionStore : "' + rulebookDistributionStoreAddress + '",');
    console.log('workdayStore : "' + workdayStoreAddress + '",');
    console.log('workdayEvidenceStore : "' + workdayEvidenceStoreAddress + '",');
    console.log('activityStore : "' + activityStoreAddress + '",');
    console.log('transferStore : "' + transferStoreAddress + '",');
    console.log('verificationStore : "' + verificationStoreAddress + '",');
    console.log('routebookDistributionStore : "' + routebookDistributionStoreAddress + '",');
    console.log('operationbookDistributionStore : "' + operationbookDistributionStoreAddress + '",');
    console.log('cargoCardStore : "' + cargoCardStoreAddress + '",');
    console.log('cardCGSStore : "' + cardCGSStoreAddress + '",');
    console.log('cardPFStore : "' + cardPFStoreAddress + '",');
    console.log('checklistStore : "' + checklistStoreAddress + '",');
    console.log('roleStore : "' + roleStoreAddress + '"');
    console.log('});');
    console.log('/* End here */');
    console.log('-------------------------------------------------------------------');
};

var roles = function () {
    console.log('---------------------------- ROLES INFO ---------------------------');
    console.log('roleRS : "' + roleRS + '", ' + roleStore.getRole(roleRS, {from: owner}));
    console.log('roleRO : "' + roleRO + '", ' + roleStore.getRole(roleRO, {from: owner}));
    console.log('roleCGS : "' + roleCGS + '", ' + roleStore.getRole(roleCGS, {from: owner}));
    console.log('rolePF : "' + rolePF + '", ' + roleStore.getRole(rolePF, {from: owner}));
    console.log('-------------------------------------------------------------------');
};

var addRoles = function (rolestore) {
    console.log('Adding Roles ... ');
    rolestore.setRole(roleRO, Actor.RO, {from: owner});
    rolestore.setRole(roleCGS, Actor.CGS, {from: owner});
    rolestore.setRole(rolePF, Actor.PF, {from: owner});
    console.log('--> done.');
    roles();
};

var setContracts = function () {
    if (railwayProcedureAddress === "") {
        railwayProcedureAddress = railwayProcedureDefault;
    }
    if (trainProcedureAddress === "") {
        trainProcedureAddress = trainProcedureDefault;
    }
    if (trainStoreAddress === "") {
        trainStoreAddress = trainStoreDefault;
    }
    if (ruleBookStoreAddress === "") {
        ruleBookStoreAddress = ruleBookStoreDefault;
    }
    if (routeBookStoreAddress === "") {
        routeBookStoreAddress = routeBookStoreDefault;
    }
    if (operationbookStoreAddress === "") {
        operationbookStoreAddress = operationbookStoreDefault;
    }
    if (rulebookDistributionStoreAddress === "") {
        rulebookDistributionStoreAddress = rulebookDistributionStoreDefault;
    }
    if (routebookDistributionStoreAddress === "") {
        routebookDistributionStoreAddress = routebookDistributionStoreDefault;
    }
    if (operationbookDistributionStoreAddress === "") {
        operationbookDistributionStoreAddress = operationbookDistributionStoreDefault;
    }
    if (cargoCardStoreAddress === "") {
        cargoCardStoreAddress = cargoCardStoreDefault;
    }
    if (checklistStoreAddress === "") {
        checklistStoreAddress = checklistStoreDefault;
    }
    if (cardCGSStoreAddress === "") {
        cardCGSStoreAddress = cardCGSStoreDefault;
    }
    if (cardPFStoreAddress === "") {
        cardPFStoreAddress = cardPFStoreDefault;
    }
    if (verificationStoreAddress === "") {
        verificationStoreAddress = verificationStoreDefault;
    }
    if (workdayStoreAddress === "") {
        workdayStoreAddress = workdayStoreDefault;
    }
    if (activityStoreAddress === "") {
        activityStoreAddress = activityStoreDefault;
    }

    if (routebookEvidenceStoreAddress === "") {
         routebookEvidenceStoreAddress = routebookEvidenceStoreDefault;
    }
    if (workdayEvidenceStoreAddress === "") {
        workdayEvidenceStoreAddress = workdayEvidenceStoreDefault;
    }
    if (transferStoreAddress === "") {
        transferStoreAddress = transferStoreDefault;
    }
    if (roleStoreAddress === "") {
        roleStoreAddress = roleStoreDefault;
    }

    railwayProcedure = eth.contract(RailwayProcedureCompiled.abi).at(railwayProcedureAddress);
    trainProcedure = eth.contract(TrainProcedureCompiled.abi).at(trainProcedureAddress);
    trainStore = eth.contract(TrainStoreCompiled.abi).at(trainStoreAddress);
    ruleBookStore = eth.contract(RuleBookStoreCompiled.abi).at(ruleBookStoreAddress);
    routeBookStore = eth.contract(RouteBookStoreCompiled.abi).at(routeBookStoreAddress);
    operationbookStore = eth.contract(OperationBookStoreCompiled.abi).at(operationbookStoreAddress);

    rulebookDistributionStore = eth.contract(BookDistributionStoreCompiled.abi).at(rulebookDistributionStoreAddress);
    routebookDistributionStore = eth.contract(BookDistributionStoreCompiled.abi).at(routebookDistributionStoreAddress);
    operationbookDistributionStore = eth.contract(BookDistributionStoreCompiled.abi).at(operationbookDistributionStoreAddress);

    cargoCardStore = eth.contract(CargoCardStoreCompiled.abi).at(cargoCardStoreAddress);
    transferStore = eth.contract(TransferStoreCompiled.abi).at(transferStoreAddress);
    checklistStore = eth.contract(ChecklistStoreCompiled.abi).at(checklistStoreAddress);
    cardCGSStore = eth.contract(CardStoreCompiled.abi).at(cardCGSStoreAddress);
    cardPFStore = eth.contract(CardStoreCompiled.abi).at(cardPFStoreAddress);
    verificationStore = eth.contract(VerificationStoreCompiled.abi).at(verificationStoreAddress);
    workdayStore = eth.contract(WorkdayStoreCompiled.abi).at(workdayStoreAddress);
    activityStore = eth.contract(ActivityStoreCompiled.abi).at(activityStoreAddress);

    routebookEvidenceStore = eth.contract(EvidenceStoreCompiled.abi).at(routebookEvidenceStoreAddress);
    workdayEvidenceStore = eth.contract(EvidenceStoreCompiled.abi).at(workdayEvidenceStoreAddress);

    roleStore = eth.contract(RoleStoreCompiled.abi).at(roleStoreAddress);

};

var setAddrs = function (data) {
    railwayProcedureAddress = data.railwayProcedureAddress;
    trainProcedureAddress = data.trainProcedureAddress;
    trainStoreAddress = data.trainStoreAddress;
    ruleBookStoreAddress = data.ruleBookStoreAddress;
    routeBookStoreAddress = data.routeBookStoreAddress;
    operationbookStoreAddress = data.operationbookStoreAddress;
    bookDistributionStoreAddress = data.bookDistributionStoreAddress;
    cargoCardStoreAddress = data.cargoCardStoreAddress;
    transferStoreAddress = data.transferStoreAddress;
    checklistStoreAddress = data.checklistStoreAddress;
    cardCGSStoreAddress = data.cardCGSStoreAddress;
    cardPFStoreAddress = data.cardPFStoreAddress;
    verificationStoreAddress = data.verificationStoreAddress;
    workdayStoreAddress = data.workdayStoreAddress;
    activityStoreAddress = data.activityStoreAddress;
    routebookEvidenceStore = data.routebookEvidenceStoreAddress;
    workdayEvidenceStore = data.workdayEvidenceStoreAddress;
    roleStoreAddress = data.roleStoreAddress;

    railwayProcedure = eth.contract(RailwayProcedureCompiled.abi).at(railwayProcedureAddress);
    trainProcedure = eth.contract(TrainProcedureCompiled.abi).at(trainProcedureAddress);
    trainStore = eth.contract(TrainStoreCompiled.abi).at(trainStoreAddress);
    ruleBookStore = eth.contract(RuleBookStoreCompiled.abi).at(ruleBookStoreAddress);
    routeBookStore = eth.contract(RouteBookStoreCompiled.abi).at(routeBookStoreAddress);
    operationbookStore = eth.contract(OperationBookStoreCompiled.abi).at(operationbookStoreAddress);

    rulebookDistributionStore = eth.contract(BookDistributionStoreCompiled.abi).at(rulebookDistributionStoreAddress);
    routebookDistributionStore = eth.contract(BookDistributionStoreCompiled.abi).at(routebookDistributionStoreAddress);
    operationbookDistributionStore = eth.contract(BookDistributionStoreCompiled.abi).at(operationbookDistributionStoreAddress);

    cargoCardStore = eth.contract(CargoCardStoreCompiled.abi).at(cargoCardStoreAddress);
    transferStore = eth.contract(TransferStoreCompiled.abi).at(transferStoreAddress);
    checklistStore = eth.contract(ChecklistStoreCompiled.abi).at(checklistStoreAddress);
    cardCGSStore = eth.contract(CardStoreCompiled.abi).at(cardCGSStoreAddress);
    cardPFStore = eth.contract(CardStoreCompiled.abi).at(cardPFStoreAddress);
    verificationStore = eth.contract(VerificationStoreCompiled.abi).at(verificationStoreAddress);
    workdayStore = eth.contract(WorkdayStoreCompiled.abi).at(workdayStoreAddress);
    activityStore = eth.contract(ActivityStoreCompiled.abi).at(activityStoreAddress);

    routebookEvidenceStore = eth.contract(EvidenceStoreCompiled.abi).at(routebookEvidenceStoreAddress);
    workdayEvidenceStore = eth.contract(EvidenceStoreCompiled.abi).at(workdayEvidenceStoreAddress);
    roleStore = eth.contract(RoleStoreCompiled.abi).at(roleStoreAddress);
};

var init = function () {
    setContracts();
    info();
    console.log('Add Roles');
    addRoles(roleStore);
    console.log('Roles Added');
    console.log('Set promotions');

    ruleBookStorePromotions(ruleBookStore);
    rulebookDistributionStorePromotions(rulebookDistributionStore);
    operationbookDistributionStorePromotions(operationbookDistributionStore);
    routebookDistributionStorePromotions(routebookDistributionStore);
    workdayStorePromotions(workdayStore);
    activityStorePromotions(activityStore);
    transferStorePromotions(transferStore);
    checklistStorePromotions(checklistStore);
    trainStorePromotions(trainStore);
    operationbookStorePromotions(operationbookStore);
    routeBookPromotions(routeBookStore);
    cargoCardPromotions(cargoCardStore);
    cardPFPromotions(cardPFStore);
    cardCGSPromotions(cardCGSStore);
    evidenceWorkdayPromotions(workdayEvidenceStore);
    evidenceRouteBookPromotions(routebookEvidenceStore);

    verificationPromotions(verificationStore);

    console.log('Promotions configured');
    console.log('/* End here */');
};

var manage = function () {
    setContracts();
    info();
    console.log('Ready');
};

var push = function () {
    loadScript('script1.js');
};

var assert = function (value, desc) {
    var msg = value ? ' -> PASS' : ' -> *** FAIL ***';
    if (typeof desc !== 'undefined' && !value) {
        msg = msg + ' - ' + desc;
    }
    return msg;
};

var test = function () {
    setContracts();
    var result;

    console.log('--------------------------- Init TEST ----------------------------');

    console.log('--------------------------- RuleBook TEST ----------------------------');

    //New railwayProcedure RuleBook
    var rulebookId = 'RULEBOOKID001';
    var hash = 'HASHRULEBOOK01';
    var name = 'RULEBOOK_NAME';
    var rejectHash = 'HASHRULEBOOKREJECTED1';
    var sizePrev = railwayProcedure.ruleBookCount({from: roleRS});
    railwayProcedure.addRuleBook(rulebookId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = railwayProcedure.ruleBookCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'RuleBook not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('RuleBook created - Count: ' + sizePost + result);

    //Get railwayProcedure RuleBook
    var statusReaded = railwayProcedure.getRuleBookStatus(rulebookId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(RuleBookStatus.Created), 'RuleBook incorrect status');
    console.log('RuleBook status readed: ' + statusReaded + result);
    var rulebookInfo = railwayProcedure.getRuleBookInfo(rulebookId, RuleBookStatus.Created, {from: roleRS});
    result = assert(rulebookInfo[0] > 0, 'RuleBook incorrect date');
    console.log('RuleBook info date: ' + rulebookInfo[0] + result);
    result = assert(hash === rulebookInfo[1], 'RuleBook incorrect hash');
    console.log('RuleBook info hash: ' + rulebookInfo[1] + result);

    //Register railwayProcedure RuleBook status
    railwayProcedure.registerRuleBook(rulebookId, RuleBookAction.SendCGS, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getRuleBookStatus(rulebookId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(RuleBookStatus.CGSSent), 'RuleBook incorrect status');
    console.log('RuleBook registered : Status CGSSent:' + statusReaded + result);

    //Update railwayProcedure RuleBook status
    railwayProcedure.setRuleBookStatus(rulebookId, RuleBookStatus.CGSReceived, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getRuleBookStatus(rulebookId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(RuleBookStatus.CGSReceived), 'RuleBook incorrect status');

    console.log('--------------------------- Train TEST ----------------------------');
    //New trainProcedure Train
    var trainId = 'TRAINID001';
    var hash = 'HASHTRAIN01';
    var name = 'TRAIN_NAME';
    var rejectHash = 'HASHTRAINREJECTED1';
    var sizePrev = trainProcedure.trainCount({from: roleRS});
    trainProcedure.addTrain(trainId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.trainCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Train not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Train created - Count: ' + sizePost + result);

    //Update and Get trainProcedure Train
    var statusReaded = trainProcedure.getTrainStatus(trainId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(TrainStatus.Created), 'Train incorrect status');
    console.log('Train status readed: ' + statusReaded + result);
    trainProcedure.updateTrain(trainId, 'New Name', {from: roleRS});
    var trainInfo = trainProcedure.getTrainInfo(trainId, TrainStatus.Created, {from: roleRS});
    result = assert(trainInfo[0] > 0, 'Train incorrect date');
    console.log('Train info date: ' + trainInfo[0] + result);
    result = assert(hash === trainInfo[1], 'Train incorrect hash');
    console.log('Train info hash: ' + trainInfo[1] + result);

    //Register trainProcedure Train status
    trainProcedure.registerTrain(trainId, TrainAction.Close, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getTrainStatus(trainId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(TrainStatus.End), 'Train incorrect status');
    console.log('Train registered : Status End:' + statusReaded + result);

    //Update trainProcedure Train status
    trainProcedure.setTrainStatus(trainId, TrainStatus.End, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getTrainStatus(trainId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(TrainStatus.End), 'Train incorrect status');
    console.log('Train status updated : status End:' + statusReaded + result);

    console.log('--------------------------- RulebookDistribution TEST ----------------------------');

    //New railwayProcedure RulebookDistribution
    var hash = 'HASHRULEBOOKDIS01';
    var staffId = 'RULEBOOKDIS';
    var rejectHash = 'HASHRULEBOOKDISREJECTED1';

    railwayProcedure.addRuleBookDistribution(rulebookId, staffId, hash, {from: roleRS, gas: transGas});
    var rulebookDisInfo = railwayProcedure.getRuleBookDistributionInfo(rulebookId, staffId, BookDistributionStatus.Created, {from: roleRS});
    result = assert(rulebookDisInfo[0] > 0, 'RulebookDistribution incorrect date');
    console.log('RulebookDistribution info date: ' + rulebookDisInfo[0] + result);
    result = assert(hash === rulebookDisInfo[1], 'RulebookDistribution incorrect hash');
    console.log('RulebookDistribution info hash: ' + rulebookDisInfo[1] + result);

    //Get railwayProcedure RulebookDistribution
    var statusReaded = railwayProcedure.getRuleBookDistributionStatus(rulebookId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(BookDistributionStatus.Created), 'RulebookDistribution incorrect status');
    console.log('RulebookDistribution status readed: ' + statusReaded + result);
    rulebookDisInfo = railwayProcedure.getRuleBookDistributionInfo(rulebookId, staffId, BookDistributionStatus.Created, {from: roleRS});
    result = assert(rulebookDisInfo[0] > 0, 'RulebookDistribution incorrect date');
    console.log('RulebookDistribution info date: ' + rulebookDisInfo[0] + result);
    result = assert(hash === rulebookDisInfo[1], 'RulebookDistribution incorrect hash');
    console.log('RulebookDistribution info hash: ' + rulebookDisInfo[1] + result);

    //Register railwayProcedure RulebookDistribution status
    railwayProcedure.registerRuleBookDistribution(rulebookId, staffId, BookDistributionAction.ReceivePF, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getRuleBookDistributionStatus(rulebookId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(BookDistributionStatus.PFReceived), 'RuleBook incorrect status');
    console.log('RuleBook registered : Status PFReceived:' + statusReaded + result);

    //Update railwayProcedure RulebookDistribution status
    railwayProcedure.setRuleBookDistributionStatus(rulebookId, staffId, BookDistributionStatus.RSSent, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getRuleBookDistributionStatus(rulebookId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(BookDistributionStatus.RSSent), 'RulebookDistribution incorrect status');
    console.log('RulebookDistribution status updated : status RSSent:' + statusReaded + result);

    console.log('--------------------------- WorkDay TEST ----------------------------');

    //New railwayProcedure WorkDay
    var workdayId = 'WORKDAYID001';
    var hash = 'HASHWORKDAY01';
    var name = 'WORKDAY_NAME';
    var rejectHash = 'HASHWORKDAYREJECTED1';
    var date = 20191128;
    var sizePrev = railwayProcedure.workdayCount({from: roleRS});
    railwayProcedure.addWorkday(workdayId, name, date, hash, {from: roleRS, gas: transGas});
    var sizePost = railwayProcedure.workdayCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'WorkDay not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('WorkDay created - Count: ' + sizePost + result);

    //Update  and Get railwayProcedure WorkDay
    var statusReaded = railwayProcedure.getWorkdayStatus(workdayId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(WorkdayStatus.Analyzing), 'WorkDay incorrect status');
    console.log('WorkDay status readed: ' + statusReaded + result);
    railwayProcedure.updateWorkday(workdayId, 'New name', date, {from: roleRS});
    var workdayInfo = railwayProcedure.getWorkdayInfo(workdayId, WorkdayStatus.Analyzing, {from: roleRS});
    result = assert(workdayInfo[0] > 0, 'WorkDay incorrect date');
    console.log('WorkDay info date: ' + workdayInfo[0] + result);
    result = assert(hash === workdayInfo[1], 'WorkDay incorrect hash');
    console.log('WorkDay info hash: ' + workdayInfo[1] + result);

    //Register railwayProcedure WorkDay status
    railwayProcedure.registerWorkday(workdayId, WorkdayAction.DoGraphic, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getWorkdayStatus(workdayId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(WorkdayStatus.Created), 'WorkDay incorrect status');
    console.log('WorkDay registered : Status Created:' + statusReaded + result);

    //Update railwayProcedure WorkDay status
    railwayProcedure.setWorkdayStatus(workdayId, WorkdayStatus.Reviewing, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getWorkdayStatus(workdayId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(WorkdayStatus.Reviewing), 'WorkDay incorrect status');
    console.log('WorkDay status updated : status Reviewing:' + statusReaded + result);

    console.log('--------------------------- Activity TEST ----------------------------');

    //New railwayProcedure Activity
    var activityId = 'ACTIVITYID001';
    var hash = 'HASHACTIVITY01';
    var name = 'ACTIVITY_NAME';
    var rejectHash = 'HASHACTIVITYREJECTED1';
    var sizePrev = railwayProcedure.activityCount(staffId, {from: roleRS});
    railwayProcedure.addActivity(staffId, activityId, name, trainId, date, hash, {from: roleRS, gas: transGas});
    var sizePost = railwayProcedure.activityCount(staffId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Activity not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Activity created - Count: ' + sizePost + result);

    //Get railwayProcedure Activity
    var index = railwayProcedure.getActivityIndex(staffId, activityId, {from: roleRS});
    var statusReaded = railwayProcedure.getActivityStatus(staffId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(ActivityStatus.Reported), 'Activity incorrect status');
    console.log('Activity status readed: ' + statusReaded + result);
    railwayProcedure.updateActivity(staffId, index, 'New name', trainId, date, {from: roleRS});
    var activityInfo = railwayProcedure.getActivityInfo(staffId, index, ActivityStatus.Reported, {from: roleRS});
    result = assert(activityInfo[0] > 0, 'Activity incorrect date');
    console.log('Activity info date: ' + activityInfo[0] + result);
    result = assert(hash === activityInfo[1], 'Activity incorrect hash');
    console.log('Activity info hash: ' + activityInfo[1] + result);

    //Register railwayProcedure Activity status
    railwayProcedure.registerActivity(staffId, index, ActivityAction.Receive, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getActivityStatus(staffId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(ActivityStatus.CGSReceived), 'Activity incorrect status');
    console.log('Activity registered : Status CGSReceived:' + statusReaded + result);

    //Update railwayProcedure Activity status
    railwayProcedure.setActivityStatus(staffId, index, ActivityStatus.ReportDone, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getActivityStatus(staffId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(ActivityStatus.ReportDone), 'Activity incorrect status');
    console.log('Activity status updated : status ReportDone:' + statusReaded + result);

    console.log('--------------------------- Transfer TEST ----------------------------');

    //New railwayProcedure Transfer
    var transferId = 'TRANSFERID001';
    var hash = 'HASHTRANSFER01';
    var name = 'TRANSFER_NAME';
    var rejectHash = 'HASHTRANSFERREJECTED1';

    var trainId = 'TRAINID002';
    var hash = 'HASHTRAIN02';
    var name = 'TRAIN_NAME2';
    var rejectHash = 'HASHTRAINREJECTED2';
    var sizePrev = trainProcedure.trainCount({from: roleRS});
    trainProcedure.addTrain(trainId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.trainCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Train not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Train created - Count: ' + sizePost + result);

    var sizePrev = railwayProcedure.transferCount(trainId, {from: roleRS});
    railwayProcedure.addTransfer(trainId, transferId, name, staffId, staffId, hash, {from: roleRS, gas: transGas});
    var sizePost = railwayProcedure.transferCount(trainId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Transfer not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Transfer created - Count: ' + sizePost + result);

    //Get railwayProcedure Transfer
    var index = railwayProcedure.getTransferIndex(trainId, transferId, {from: roleRS});
    var statusReaded = railwayProcedure.getTransferStatus(trainId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(TransferStatus.Created), 'Transfer incorrect status');
    console.log('Transfer status readed: ' + statusReaded + result);
    railwayProcedure.updateTransfer(trainId, index, 'New name', {from: roleRS});
    var transferInfo = railwayProcedure.getTransferInfo(trainId, index, TransferStatus.Created, {from: roleRS});
    result = assert(transferInfo[0] > 0, 'Transfer incorrect date');
    console.log('Transfer info date: ' + transferInfo[0] + result);
    result = assert(hash === transferInfo[1], 'Transfer incorrect hash');
    console.log('Transfer info hash: ' + transferInfo[1] + result);

    //Register railwayProcedure Transfer status
    railwayProcedure.registerTransfer(trainId, index, TransferAction.SignOut, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getTransferStatus(trainId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(TransferStatus.OutgoingSigned), 'Transfer incorrect status');
    console.log('Transfer registered : Status OutgoingSigned:' + statusReaded + result);

    //Update railwayProcedure Transfer status
    railwayProcedure.setTransferStatus(trainId, index, TransferStatus.IncomingSigned, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getTransferStatus(trainId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(TransferStatus.IncomingSigned), 'Transfer incorrect status');
    console.log('Transfer status updated : status IncomingSigned:' + statusReaded + result);

    console.log('--------------------------- Checklist TEST ----------------------------');

    //New railwayProcedure Checklist
    var checklistId = 'CHECKLISTID001';
    var hash = 'HASHCHECKLIST01';
    var name = 'CHECKLIST_NAME';
    var rejectHash = 'HASHCHECKLISTREJECTED1';
    railwayProcedure.addChecklist(trainId, staffId, name, hash, {from: roleRS, gas: transGas});
    var nameChecklist =  railwayProcedure.getChecklist(trainId, staffId, {from: roleRS, gas: transGas});
    result = assert(name === nameChecklist, 'Checklist incorrect name');
    console.log('Checklist created');

    //Get railwayProcedure Checklist
    var statusReaded = railwayProcedure.getChecklistStatus(trainId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(ChecklistStatus.Created), 'Checklist incorrect status');
    console.log('Checklist status readed: ' + statusReaded + result);
    railwayProcedure.updateChecklist(trainId, staffId, 'New name', {from: roleRS});
    var checklistInfo = railwayProcedure.getChecklistInfo(trainId, staffId, ChecklistStatus.Created, {from: roleRS});
    result = assert(checklistInfo[0] > 0, 'Checklist incorrect date');
    console.log('Checklist info date: ' + checklistInfo[0] + result);
    result = assert(hash === checklistInfo[1], 'Checklist incorrect hash');
    console.log('Checklist info hash: ' + checklistInfo[1] + result);

    //Register railwayProcedure Checklist status
    railwayProcedure.registerChecklist(trainId, staffId, ChecklistAction.Send, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getChecklistStatus(trainId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(ChecklistStatus.Sent), 'Checklist incorrect status');
    console.log('Checklist registered : Status Sent:' + statusReaded + result);

    //Update railwayProcedure Checklist status
    railwayProcedure.setChecklistStatus(trainId, staffId, ChecklistStatus.Stored, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getChecklistStatus(trainId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(ChecklistStatus.Stored), 'Checklist incorrect status');
    console.log('Checklist status updated : status Stored:' + statusReaded + result);

    console.log('--------------------------- Workday Evidence TEST ----------------------------');

    //New railwayProcedure Evidence
    var workdayId = 'WORKDAYID002';
    var hash = 'HASHWORKDAY02';
    var name = 'WORKDAY2_NAME';
    var rejectHash = 'HASHWORKDAYREJECTED2';
    var date = 20191128;
    var sizePrev = railwayProcedure.workdayCount({from: roleRS});
    railwayProcedure.addWorkday(workdayId, name, date, hash, {from: roleRS, gas: transGas});
    var sizePost = railwayProcedure.workdayCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'WorkDay not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('WorkDay created - Count: ' + sizePost + result);

    var evidenceId = 'EVIDENCEID001';
    var hash = 'HASHEVIDENCE01';
    var name = 'EVIDENCE_NAME';
    var rejectHash = 'HASHEVIDENCEREJECTED1';
    var evidenceStoreName = EvidenceStoreName.WorkdayEvidence;
    var parentId = workdayId;

    var sizePrev = railwayProcedure.evidenceCount(evidenceStoreName, parentId, {from: roleRS});
    railwayProcedure.addEvidence(evidenceStoreName, parentId, evidenceId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = railwayProcedure.evidenceCount(evidenceStoreName, parentId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Evidence not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Evidence created - Count: ' + sizePost + result);

    //Get railwayProcedure Evidence
    var index = railwayProcedure.getEvidenceIndex(evidenceStoreName, parentId, evidenceId, {from: roleRS});
    var statusReaded = railwayProcedure.getEvidenceStatus(evidenceStoreName, parentId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(EvidenceStatus.Created), 'Evidence incorrect status');
    console.log('Evidence status readed: ' + statusReaded + result);
    railwayProcedure.updateEvidence(evidenceStoreName, parentId, index, 'New name', {from: roleRS});
    var evidenceInfo = railwayProcedure.getEvidenceInfo(evidenceStoreName, parentId, index, EvidenceStatus.Created, {from: roleRS});
    result = assert(evidenceInfo[0] > 0, 'Evidence incorrect date');
    console.log('Evidence info date: ' + evidenceInfo[0] + result);
    result = assert(hash === evidenceInfo[1], 'Evidence incorrect hash');
    console.log('Evidence info hash: ' + evidenceInfo[1] + result);

    //Register railwayProcedure Evidence status
    railwayProcedure.registerEvidence(evidenceStoreName, parentId, index, EvidenceAction.Create, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getEvidenceStatus(evidenceStoreName, parentId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(EvidenceStatus.Created), 'Evidence incorrect status');
    console.log('Evidence registered : Status Sent:' + statusReaded + result);

    //Update railwayProcedure Evidence status
    railwayProcedure.setEvidenceStatus(evidenceStoreName, parentId, index, EvidenceStatus.Created, {from: roleRS, gas: transGas});
    statusReaded = railwayProcedure.getEvidenceStatus(evidenceStoreName, parentId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(EvidenceStatus.Created), 'Evidence incorrect status');
    console.log('Evidence status updated : status Created:' + statusReaded + result);

    console.log('--------------------------- OperationBook TEST ----------------------------');

    //New trainProcedure OperationBook
    var bookId = 'BOOKID001';
    var hash = 'HASHBOOK01';
    var name = 'BOOK_NAME';
    var rejectHash = 'HASHBOOKREJECTED1';
    var operationBookName = BookStoreName.operationbook;
    var sizePrev = trainProcedure.bookCount(operationBookName, trainId, {from: roleRS});
    trainProcedure.addBook(operationBookName, trainId, bookId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.bookCount(operationBookName, trainId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'OperationBook not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('OperationBook created - Count: ' + sizePost + result);

    //Get trainProcedure OperationBook
    var index = trainProcedure.getBookKey(operationBookName, bookId, {from: roleRS});
    var statusReaded = trainProcedure.getBookStatus(operationBookName, trainId, index[1], {from: roleRS});
    result = assert(Number(statusReaded) === Number(operationbookStatus.Created), 'OperationBook incorrect status');
    console.log('OperationBook status readed: ' + statusReaded + result);
    trainProcedure.updateBook(operationBookName, trainId, index[1], 'New name', {from: roleRS});
    var bookInfo = trainProcedure.getBookInfo(operationBookName, trainId, index[1], operationbookStatus.Created, {from: roleRS});
    result = assert(bookInfo[0] > 0, 'OperationBook incorrect date');
    console.log('OperationBook info date: ' + bookInfo[0] + result);
    result = assert(hash === bookInfo[1], 'OperationBook incorrect hash');
    console.log('OperationBook info hash: ' + bookInfo[1] + result);

    //Register trainProcedure OperationBook status
    trainProcedure.registerBook(operationBookName, trainId, index[1], operationbookAction.Create, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getBookStatus(operationBookName, trainId, index[1], {from: roleRS});
    result = assert(Number(statusReaded) === Number(operationbookStatus.Created), 'OperationBook incorrect status');
    console.log('OperationBook registered : Status Created:' + statusReaded + result);

    //Update trainProcedure OperationBook status
    trainProcedure.setBookStatus(operationBookName, trainId, index[1], operationbookStatus.CGSSent, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getBookStatus(operationBookName, trainId, index[1], {from: roleRS});
    result = assert(Number(statusReaded) === Number(operationbookStatus.CGSSent), 'OperationBook incorrect status');
    console.log('OperationBook status updated : status CGSSent:' + statusReaded + result);

    console.log('--------------------------- BookDistribution TEST ----------------------------');

    //New trainProcedure BookDistribution
    trainProcedure.setBookStatus(operationBookName, trainId, index[1], operationbookStatus.CGSReceived, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getBookStatus(operationBookName, trainId, index[1], {from: roleRS});
    result = assert(Number(statusReaded) === Number(operationbookStatus.CGSReceived), 'BookDistribution incorrect status');
    console.log('BookDistribution status updated : status CGSReceived:' + statusReaded + result);

    trainProcedure.addBookDistribution(operationBookName, bookId, staffId, hash, {from: roleRS, gas: transGas});
    var routebookInfo = trainProcedure.getBookDistributionInfo(operationBookName, bookId, staffId, BookDistributionStatus.Created, {from: roleRS});
    result = assert(routebookInfo[0] > 0, 'BookDistribution incorrect date');
    console.log('BookDistribution created: ' + routebookInfo[0] + result);
   
    //Get trainProcedure BookDistribution
    var statusReaded = trainProcedure.getBookDistributionStatus(operationBookName, bookId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(BookDistributionStatus.Created), 'BookDistribution incorrect status');
    console.log('BookDistribution status readed: ' + statusReaded + result);
    var routebookInfo = trainProcedure.getBookDistributionInfo(operationBookName, bookId, staffId, BookDistributionStatus.Created, {from: roleRS});
    result = assert(routebookInfo[0] > 0, 'BookDistribution incorrect date');
    console.log('BookDistribution info date: ' + routebookInfo[0] + result);
    result = assert(hash === routebookInfo[1], 'BookDistribution incorrect hash');
    console.log('BookDistribution info hash: ' + routebookInfo[1] + result);

    //Register trainProcedure BookDistribution status
    trainProcedure.registerBookDistribution(operationBookName, bookId, staffId, BookDistributionAction.Create, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getBookDistributionStatus(operationBookName, bookId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(BookDistributionStatus.Created), 'BookDistribution incorrect status');
    console.log('BookDistribution registered : Status Created:' + statusReaded + result);

    //Update trainProcedure BookDistribution status
    trainProcedure.setBookDistributionStatus(operationBookName, bookId, staffId, BookDistributionStatus.PFReceived, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getBookDistributionStatus(operationBookName, bookId, staffId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(BookDistributionStatus.PFReceived), 'BookDistribution incorrect status');
    console.log('BookDistribution status updated : status PFReceived:' + statusReaded + result);

    console.log('--------------------------- CargoCard TEST ----------------------------');

    //New trainProcedure CargoCard
    var cargoCardId = 'CARGOCARDID001';
    var hash = 'HASHCARGOCARD01';
    var name = 'CARGOCARD_NAME';
    var rejectHash = 'HASHCARGOCARDREJECTED1';
    var sizePrev = trainProcedure.cargoCardCount(trainId, {from: roleRS});
    trainProcedure.addCargoCard(trainId, cargoCardId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.cargoCardCount(trainId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'CargoCard not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('CargoCard created - Count: ' + sizePost + result);

    //Get trainProcedure CargoCard
    var index = trainProcedure.getCargoCardIndex(trainId, cargoCardId, {from: roleRS});
    var statusReaded = trainProcedure.getCargoCardStatus(trainId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(CargoCardStatus.Created), 'CargoCard incorrect status');
    console.log('CargoCard status readed: ' + statusReaded + result);
    trainProcedure.updateCargoCard(trainId, index, 'New name', {from: roleRS});
    var cargoCardInfo = trainProcedure.getCargoCardInfo(trainId, index, CargoCardStatus.Created, {from: roleRS});
    result = assert(cargoCardInfo[0] > 0, 'CargoCard incorrect date');
    console.log('CargoCard info date: ' + cargoCardInfo[0] + result);
    result = assert(hash === cargoCardInfo[1], 'CargoCard incorrect hash');
    console.log('CargoCard info hash: ' + cargoCardInfo[1] + result);

    //Register trainProcedure CargoCard status
    trainProcedure.registerCargoCard(trainId, index, CargoCardAction.SendResults, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getCargoCardStatus(trainId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(CargoCardStatus.ResultsSent), 'CargoCard incorrect status');
    console.log('CargoCard registered : Status ResultsSent:' + statusReaded + result);

    //Update trainProcedure CargoCard status
    trainProcedure.setCargoCardStatus(trainId, index, CargoCardStatus.ResultsReceived, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getCargoCardStatus(trainId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(CargoCardStatus.ResultsReceived), 'CargoCard incorrect status');
    console.log('CargoCard status updated : status Results ResultsReceived:' + statusReaded + result);


    console.log('--------------------------- Card TEST ----------------------------');

    //New trainProcedure Card
    var trainId = 'TRAINID003';
    var hash = 'HASHTRAIN03';
    var name = 'TRAIN_NAME3';
    var rejectHash = 'HASHTRAINREJECTED3';
    var sizePrev = trainProcedure.trainCount({from: roleRS});
    trainProcedure.addTrain(trainId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.trainCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Train not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Train created - Count: ' + sizePost + result);

    var cardId = 'CARGOCARDID002';
    var hash = 'HASHCARGOCARD02';
    var nameCargo = 'CARGOCARD2_NAME';
    var rejectHash = 'HASHCARGOCARDREJECTED2';
    var cgsCardName = CardType.CGSCards;

    var sizePrev = trainProcedure.cargoCardCount(trainId, {from: roleRS});
    trainProcedure.addCargoCard(trainId, cardId, nameCargo, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.cargoCardCount(trainId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'CargoCard not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('CargoCard created - Count: ' + sizePost + result);

    trainProcedure.addCard(cgsCardName, trainId, cardId, nameCargo, hash, {from: roleRS, gas: transGas});
        
    //Get trainProcedure Card
    var statusReaded = trainProcedure.getCardStatus(cgsCardName, trainId, cardId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(CardStatus.CardSent), 'Card incorrect status');
    console.log('Card status readed: ' + statusReaded + result);
    trainProcedure.updateCard(cgsCardName, trainId, cardId, 'New name', {from: roleRS});
    var cardInfo = trainProcedure.getCardInfo(cgsCardName, trainId, cardId, CardStatus.CardSent, {from: roleRS});
    result = assert(cardInfo[0] > 0, 'Card incorrect date');
    console.log('Card info date: ' + cardInfo[0] + result);
    result = assert(hash === cardInfo[1], 'Card incorrect hash');
    console.log('Card info hash: ' + cardInfo[1] + result);

    //Register trainProcedure Card status
    trainProcedure.registerCard(cgsCardName, trainId, cardId, CardAction.Receive, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getCardStatus(cgsCardName, trainId, cardId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(CardStatus.Received), 'Card incorrect status');
    console.log('Card registered : Status Received:' + statusReaded + result);

    //Update trainProcedure Card status 
    trainProcedure.setCardStatus(cgsCardName, trainId, cardId, CardStatus.Stored, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getCardStatus(cgsCardName, trainId, cardId, {from: roleRS});
    result = assert(Number(statusReaded) === Number(CardStatus.Stored), 'Card incorrect status');
    console.log('Card status updated : status Stored:' + statusReaded + result);
    
    console.log('--------------------------- Verification TEST ----------------------------');

    //New trainProcedure Verification
    var routeBookName = BookStoreName.RouteBook;

    var bookId = 'ROUTEBOOKID003';
    var hash = 'HASHROUTEBOOK03';
    var name = 'ROUTEBOOK3_NAME';
    var rejectHash = 'HASHROUTEBOOKREJECTED3';
    var sizePrev = trainProcedure.bookCount(routeBookName, trainId, {from: roleRS});
    trainProcedure.addBook(routeBookName, trainId, bookId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.bookCount(routeBookName, trainId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'RouteBookName not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('RouteBookName created - Count: ' + sizePost + result);

    var verificationId = 'VERIFICATIONID001';
    var hash = 'HASHVERIFICATION01';
    var name = 'VERIFICATION_NAME';
    var rejectHash = 'HASHVERIFICATIONREJECTED1';

    var sizePrev = trainProcedure.verificationCount(routeBookName, bookId, {from: roleRS});
    trainProcedure.addVerification(routeBookName, bookId, verificationId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.verificationCount(routeBookName, bookId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Verification not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Verification created - Count: ' + sizePost + result);

    //Get trainProcedure Verification
    var index = trainProcedure.getVerificationIndex(routeBookName, bookId, verificationId, {from: roleRS});
    var statusReaded = trainProcedure.getVerificationStatus(routeBookName, bookId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(VerificationStatus.InformationSent), 'Verification incorrect status');
    console.log('Verification status readed: ' + statusReaded + result);
    trainProcedure.updateVerification(routeBookName, bookId, index, verificationId, 'New name', {from: roleRS});
    var bookInfo = trainProcedure.getVerificationInfo(routeBookName, bookId, index, VerificationStatus.InformationSent, {from: roleRS});
    result = assert(bookInfo[0] > 0, 'Verification incorrect date');
    console.log('Verification info date: ' + bookInfo[0] + result);
    result = assert(hash === bookInfo[1], 'Verification incorrect hash');
    console.log('Verification info hash: ' + bookInfo[1] + result);

    //Register trainProcedure Verification status
    trainProcedure.registerVerification(routeBookName, bookId, index, VerificationAction.SendInformation, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getVerificationStatus(routeBookName, bookId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(VerificationStatus.InformationSent), 'Verification incorrect status');
    console.log('Verification registered : Status InformationSent:' + statusReaded + result);

    //Update trainProcedure Verification status 
    trainProcedure.setVerificationStatus(routeBookName, bookId, index, VerificationStatus.Verified, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getVerificationStatus(routeBookName, bookId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(VerificationStatus.Verified), 'Verification incorrect status');
    console.log('Verification status updated : status Verified:' + statusReaded + result);

    console.log('--------------------------- RouteBook Evidence TEST ----------------------------');

    //New trainProcedure Evidence
    var trainId = 'TRAINID004';
    var hash = 'HASHTRAIN04';
    var name = 'TRAIN_NAME4';
    var rejectHash = 'HASHTRAINREJECTED4';
    var sizePrev = trainProcedure.trainCount({from: roleRS});
    trainProcedure.addTrain(trainId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.trainCount({from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Train not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Train created - Count: ' + sizePost + result);

    var routebookId = 'BOOKID002';
    var hash = 'HASHBOOK02';
    var name = 'BOOK2_NAME';
    var rejectHash = 'HASHBOOKREJECTED2';
    var routeBookName = BookStoreName.RouteBook;
    var sizePrev = trainProcedure.bookCount(routeBookName, trainId, {from: roleRS});
    trainProcedure.addBook(routeBookName, trainId, routebookId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.bookCount(routeBookName, trainId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Book not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Book created - Count: ' + sizePost + result);

    var evidenceId = 'EVIDENCEID002';
    var hash = 'HASHEVIDENCE02';
    var name = 'EVIDENCE_NAME';
    var rejectHash = 'HASHEVIDENCEREJECTED2';
    var evidenceStoreName = EvidenceStoreName.BookEvidence;
    var parentId = routebookId;

    var sizePrev = trainProcedure.evidenceCount(evidenceStoreName, parentId, {from: roleRS});
    trainProcedure.addEvidence(evidenceStoreName, parentId, evidenceId, name, hash, {from: roleRS, gas: transGas});
    var sizePost = trainProcedure.evidenceCount(evidenceStoreName, parentId, {from: roleRS});
    result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Evidence not created. Antes:' + sizePrev + 'Despues:' + sizePost);
    console.log('Evidence created - Count: ' + sizePost + result);

    //Get trainProcedure Evidence
    var index = trainProcedure.getEvidenceIndex(evidenceStoreName, parentId, evidenceId, {from: roleRS});
    var statusReaded = trainProcedure.getEvidenceStatus(evidenceStoreName, parentId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(EvidenceStatus.Created), 'Evidence incorrect status');
    console.log('Evidence status readed: ' + statusReaded + result);
    trainProcedure.updateEvidence(evidenceStoreName, parentId, index, 'New name', {from: roleRS});
    var evidenceInfo = trainProcedure.getEvidenceInfo(evidenceStoreName, parentId, index, EvidenceStatus.Created, {from: roleRS});
    result = assert(evidenceInfo[0] > 0, 'Evidence incorrect date');
    console.log('Evidence info date: ' + evidenceInfo[0] + result);
    result = assert(hash === evidenceInfo[1], 'Evidence incorrect hash');
    console.log('Evidence info hash: ' + evidenceInfo[1] + result);

    //Register trainProcedure Evidence status
    trainProcedure.registerEvidence(evidenceStoreName, parentId, index, EvidenceAction.Create, rejectHash, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getEvidenceStatus(evidenceStoreName, parentId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(EvidenceStatus.Created), 'Evidence incorrect status');
    console.log('Evidence registered : Status Created:' + statusReaded + result);

    //Update trainProcedure Evidence status 
    trainProcedure.setEvidenceStatus(evidenceStoreName, parentId, index, EvidenceStatus.Created, {from: roleRS, gas: transGas});
    statusReaded = trainProcedure.getEvidenceStatus(evidenceStoreName, parentId, index, {from: roleRS});
    result = assert(Number(statusReaded) === Number(EvidenceStatus.Created), 'Evidence incorrect status');
    console.log('Evidence status updated : status Created:' + statusReaded + result);

    console.log('-------------------------- Finished TESTs ----------------------------');

};

var usage = function () {
    console.log('Usage: ');
    console.log('     deploy()   -> Deploy contracts.');
    console.log('     init()     -> Initialize and configure contracts.');
    console.log('     setAddrs() -> Sets previous deployed contract addresses.');
    console.log('     manage()   -> Manage contracts.');
    console.log('     info()     -> Print contracts information.');
    console.log('     roles()    -> Print roles information.');
    console.log('     push()     -> Push contracts deployment.');
    console.log('     test()     -> Execute a simple use case.');
    console.log('     usage()    -> Show this help.');
};


usage();

