/////////////////////////////////////////
// Auto generated code. Do not modify! //
/////////////////////////////////////////

var RailwayIncidentCompiled = {"abi":[{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getDatasheetType","outputs":[{"name":"dType","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerDatasheet","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getIncidentContract","outputs":[{"name":"incidentAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"datasheetId","type":"string"}],"name":"getDatasheetKey","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"cType","type":"uint8"},{"name":"incidentDate","type":"uint256"}],"name":"updateIncident","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getDatasheetContract","outputs":[{"name":"datasheetAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getDatasheetId","outputs":[{"name":"datasheetId","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentAddress","type":"address"}],"name":"setIncidentContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"status","type":"uint8"}],"name":"setIncidentStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidenceInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"}],"name":"getIncident","outputs":[{"name":"cType","type":"uint8"},{"name":"date","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"cType","type":"uint8"},{"name":"incidentDate","type":"uint256"},{"name":"hash","type":"string"}],"name":"addIncident","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerIncident","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"string"}],"name":"registerEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"}],"name":"getIncidentStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getDatasheetStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"datasheetId","type":"string"},{"name":"dType","type":"uint8"},{"name":"hash","type":"string"}],"name":"addDatasheet","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidenceType","outputs":[{"name":"eType","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"}],"name":"evidenceCount","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"incidentCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"evidenceId","type":"string"},{"name":"eType","type":"uint8"},{"name":"hash","type":"string"}],"name":"addEvidence","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setEvidenceStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getIncidentIdByIndex","outputs":[{"name":"incidentId","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"datasheetAddress","type":"address"}],"name":"setDatasheetContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getDatasheetInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidenceStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"evidenceId","type":"string"}],"name":"getEvidenceKey","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"}],"name":"getEvidenceId","outputs":[{"name":"evidenceId","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"string"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setDatasheetStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"},{"name":"status","type":"uint8"}],"name":"getIncidentInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"evidenceAddress","type":"address"}],"name":"setEvidenceContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getEvidenceContract","outputs":[{"name":"evidenceAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"string"}],"name":"datasheetCount","outputs":[{"name":"_count","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055611ec2806100306000396000f3006060604052600436106101c95763ffffffff60e060020a600035041663069ba61381146101ce57806316e31277146102455780631dbf4269146102e6578063379f5c5b146103155780633b2dde45146103ba5780633b4ebe29146104155780634cffa6f7146104285780634fb2e45d146104f257806350c8d50214610511578063524fd6a0146105305780635a1723641461058657806368af56e51461065757806377a28bd7146106d357806381171459146107015780638c0b3887146107a05780638d50405a1461083f5780638de59177146108de5780638f32d59b1461093f578063912b23b61461095257806392541362146109b55780639ddd741f14610a965780639e9b6e1814610af9578063a09b86ac14610b4a578063ae00010514610b5d578063b1ef764914610c3e578063b6b6443814610c99578063bb03341f14610caf578063bd9241e814610cce578063c8eeffeb14610ced578063d234e45f14610d40578063dbf30aa814610d93578063dd5efee414610dc3578063dd9fd5da14610e56578063dff0982b14610e69578063e0aea9ee14610ebc578063e195049614610f17578063ee097b7614610f6d578063ef26a2d314610f8c578063fd15ec8814610f9f575b600080fd5b34156101d957600080fd5b61022160046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350610ff092505050565b6040518082600381111561023157fe5b60ff16815260200191505060405180910390f35b341561025057600080fd5b6102e460046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f83018190048102019051908101604052818152929190602084018383808284375094965061107395505050505050565b005b34156102f157600080fd5b6102f9611112565b604051600160a060020a03909116815260200160405180910390f35b341561032057600080fd5b6103a860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061117a95505050505050565b60405190815260200160405180910390f35b34156103c557600080fd5b6102e460046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505060ff853516946020013593506111e492505050565b341561042057600080fd5b6102f961126e565b341561043357600080fd5b61047b60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050933593506112d692505050565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156104b757808201518382015260200161049f565b50505050905090810190601f1680156104e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156104fd57600080fd5b6102e4600160a060020a0360043516611368565b341561051c57600080fd5b6102e4600160a060020a03600435166113b7565b341561053b57600080fd5b6102e460046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff169250611406915050565b341561059157600080fd5b6105d960046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650509335935061148792505050565b60405182815260406020820181815290820183818151815260200191508051906020019080838360005b8381101561061b578082015183820152602001610603565b50505050905090810190601f1680156106485780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b341561066257600080fd5b6106a860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061152f95505050505050565b604051808360028111156106b857fe5b60ff1681526020018281526020019250505060405180910390f35b34156106de57600080fd5b6106ed61ffff600435166115b6565b604051901515815260200160405180910390f35b341561070c57600080fd5b6102e460046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949660ff873516966020808201359750919550606081019450604090810135860180830194503592508291601f83018190048102019051908101604052818152929190602084018383808284375094965061162c95505050505050565b34156107ab57600080fd5b6102e460046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506116b195505050505050565b341561084a57600080fd5b6102e460046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949686359660208082013560ff169750919550606081019450604090810135860180830194503592508291601f83018190048102019051908101604052818152929190602084018383808284375094965061172c95505050505050565b34156108e957600080fd5b61092f60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061174695505050505050565b6040518082601481111561023157fe5b341561094a57600080fd5b6106ed6117a2565b341561095d57600080fd5b6109a560046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965050933593506117bd92505050565b6040518082600081111561023157fe5b34156109c057600080fd5b6102e460046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506117da95505050505050565b3415610aa157600080fd5b610ae960046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650509335935061183792505050565b6040518082600681111561023157fe5b3415610b0457600080fd5b6103a860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061185495505050505050565b3415610b5557600080fd5b6103a8611871565b3415610b6857600080fd5b6102e460046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803560ff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506118da95505050505050565b3415610c4957600080fd5b6102e460046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff16935061193792505050565b3415610ca457600080fd5b61047b6004356119a9565b3415610cba57600080fd5b6102e4600160a060020a0360043516611a0c565b3415610cd957600080fd5b6102e4600160a060020a0360043516611a5b565b3415610cf857600080fd5b6105d960046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350611a8a92505050565b3415610d4b57600080fd5b6109a560046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350611ab192505050565b3415610d9e57600080fd5b610dac60ff60043516611ace565b60405161ffff909116815260200160405180910390f35b3415610dce57600080fd5b6103a860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650611ae595505050505050565b3415610e6157600080fd5b6102f9611b02565b3415610e7457600080fd5b61047b60046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505093359350611b1192505050565b3415610ec757600080fd5b6102e460046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650508435946020013560ff169350611b3692505050565b3415610f2257600080fd5b6105d960046024813581810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496505050923560ff169250611b50915050565b3415610f7857600080fd5b6102e4600160a060020a0360043516611bce565b3415610f9757600080fd5b6102f9611bfd565b3415610faa57600080fd5b6103a860046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650611c6595505050505050565b600454600090600160a060020a031663dd6c753861100d85611c7e565b8460006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b151561105257600080fd5b6102c65a03f1151561106357600080fd5b5050506040518051949350505050565b600454600160a060020a031663b7973ad961108d86611c7e565b858561109886611c7e565b60405160e060020a63ffffffff87160281526004810185815260248201859052906044018360018111156110c857fe5b60ff168152602081019290925250604090810193506000925090505180830381600087803b15156110f857600080fd5b6102c65a03f1151561110957600080fd5b50505050505050565b600254600090819033600160a060020a0390811691161480611142575060035433600160a060020a039081169116145b8061115b575060045433600160a060020a039081169116145b905080151561116957600080fd5b5050600254600160a060020a031690565b600454600090600160a060020a0316633050e19461119785611c7e565b6111a085611c7e565b60006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b151561105257600080fd5b600254600160a060020a031663b52a61766111fe85611c7e565b848460405160e060020a63ffffffff8616028152600481018481529060240183600281111561122957fe5b60ff1681526020018281526020019350505050600060405180830381600087803b151561125557600080fd5b6102c65a03f1151561126657600080fd5b505050505050565b600254600090819033600160a060020a039081169116148061129e575060035433600160a060020a039081169116145b806112b7575060045433600160a060020a039081169116145b90508015156112c557600080fd5b5050600454600160a060020a031690565b6112de611e84565b60045461136190600160a060020a031663c342560e6112fc86611c7e565b8560006040516020015260405160e060020a63ffffffff851602815260048101929092526024820152604401602060405180830381600087803b151561134157600080fd5b6102c65a03f1151561135257600080fd5b50505060405180519050611ca9565b9392505050565b60005461137d90600160a060020a0316611e54565b151561138857600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000546113cc90600160a060020a0316611e54565b15156113d757600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600160a060020a0316638de654ba61142084611c7e565b8360405160e060020a63ffffffff8516028152600481018381529060240182601481111561144a57fe5b60ff16815260200192505050600060405180830381600087803b151561146f57600080fd5b6102c65a03f1151561148057600080fd5b5050505050565b6000611491611e84565b600354600090600160a060020a0316636026c2d16114ae87611c7e565b8660006040516040015260405160e060020a63ffffffff8516028152600481019290925260248201526044016040805180830381600087803b15156114f257600080fd5b6102c65a03f1151561150357600080fd5b505050604051805190602001805191945090915083905061152382611ca9565b92509250509250929050565b6002546000908190600160a060020a0316638eaa6ac061154e85611c7e565b60006040516040015260405160e060020a63ffffffff841602815260048101919091526024016040805180830381600087803b151561158c57600080fd5b6102c65a03f1151561159d57600080fd5b5050506040518051906020018051905091509150915091565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561160c57600080fd5b6102c65a03f1151561161d57600080fd5b50505060405180519392505050565b600254600160a060020a0316634cfbe48361164686611c7e565b858561165186611c7e565b60405160e060020a63ffffffff8716028152600481018581529060240184600281111561167a57fe5b60ff16815260208101939093525060408083019190915260609091019250600091505180830381600087803b15156110f857600080fd5b600254600160a060020a031663c704fb7d6116cb85611c7e565b846116d585611c7e565b60405160e060020a63ffffffff861602815260048101848152906024018360158111156116fe57fe5b60ff16815260208101929092525060409081019250600091505180830381600087803b151561125557600080fd5b600354600160a060020a031663b7973ad961108d86611c7e565b600254600090600160a060020a0316635de28ae061176384611c7e565b60006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561160c57600080fd5b600080546117b890600160a060020a0316611e54565b905090565b600454600090600160a060020a031663a55f992761100d85611c7e565b600454600160a060020a031663dc8c14ad6117f486611c7e565b6117fd86611c7e565b8561180786611c7e565b60405160e060020a63ffffffff87160281526004810185815260248201859052906044018360038111156110c857fe5b600354600090600160a060020a031663671ff7fa61100d85611c7e565b600354600090600160a060020a0316637937354c61176384611c7e565b600254600090600160a060020a03166306661abd82604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b15156118bb57600080fd5b6102c65a03f115156118cc57600080fd5b505050604051805191505090565b600354600160a060020a031663dc8c14ad6118f486611c7e565b6118fd86611c7e565b8561190786611c7e565b60405160e060020a63ffffffff87160281526004810185815260248201859052906044018360068111156110c857fe5b600354600160a060020a031663673e639b61195185611c7e565b848460405160e060020a63ffffffff861602815260048101848152602482018490529060440182600081111561198357fe5b60ff1681526020019350505050600060405180830381600087803b151561125557600080fd5b6119b1611e84565b600254611a0690600160a060020a031663ff94e5028460006040516020015260405160e060020a63ffffffff84160281526004810191909152602401602060405180830381600087803b151561134157600080fd5b92915050565b600054611a2190600160a060020a0316611e54565b1515611a2c57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6004805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000611a94611e84565b600454600090600160a060020a0316636026c2d16114ae87611c7e565b600354600090600160a060020a031663a55f992761100d85611c7e565b6000816005811115611adc57fe5b60020a92915050565b600354600090600160a060020a031663d56339cb61119785611c7e565b600154600160a060020a031690565b611b19611e84565b60035461136190600160a060020a03166264d70f6112fc86611c7e565b600454600160a060020a031663673e639b61195185611c7e565b6000611b5a611e84565b600254600090600160a060020a0316634bd5322b611b7787611c7e565b8660006040516040015260405160e060020a63ffffffff85160281526004810183815290602401826014811115611baa57fe5b60ff168152602001925050506040805180830381600087803b15156114f257600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600254600090819033600160a060020a0390811691161480611c2d575060035433600160a060020a039081169116145b80611c46575060045433600160a060020a039081169116145b9050801515611c5457600080fd5b5050600354600160a060020a031690565b600454600090600160a060020a0316637937354c611763845b6000611c88611e84565b508180511515611c9b5760009150611ca3565b602083015191505b50919050565b611cb1611e84565b611cb9611e84565b6000806000611cc6611e84565b600060408051805910611cd65750595b818152601f19601f830116810160200160405290509550600093505b6020841015611d7d576008840260020a880292507fff00000000000000000000000000000000000000000000000000000000000000831615611d725782868681518110611d3b57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001850194505b600190930192611cf2565b84604051805910611d8b5750595b818152601f19601f830116810160200160405290509150600090505b84811015611e4957858181518110611dbb57fe5b01602001517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002828281518110611e1157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101611da7565b509695505050505050565b600081600160a060020a031633600160a060020a03161480611a0657505032600160a060020a0390811691161490565b602060405190810160405260008152905600a165627a7a723058205e1fef171cf179a11d553f1386037d3783c4b550f7c3d1b5d9e12e90141782fa0029"};

var IncidentStoreCompiled = {"abi":[{"constant":true,"inputs":[],"name":"count","outputs":[{"name":"size","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"iType","type":"uint8"},{"name":"incidentDate","type":"uint256"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"}],"name":"get","outputs":[{"name":"iType","type":"uint8"},{"name":"incidentDate","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"iType","type":"uint8"},{"name":"incidentDate","type":"uint256"}],"name":"update","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getIdByIndex","outputs":[{"name":"incidentId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610cd3806100306000396000f3006060604052600436106100e25763ffffffff60e060020a60003504166306661abd81146100e75780634bd5322b1461010c5780634cfbe483146101405780634fb2e45d146101645780635de28ae01461018357806377a28bd7146101bd578063848a423f146101eb5780638de654ba146102405780638eaa6ac01461025c5780638f32d59b1461029d578063a3684f00146102b0578063b52a6176146102e0578063bb03341f146102ff578063c704fb7d1461031e578063dbf30aa81461033d578063dd9fd5da1461036d578063f7ff1b6a1461039c578063ff94e502146103bb575b600080fd5b34156100f257600080fd5b6100fa6103d1565b60405190815260200160405180910390f35b341561011757600080fd5b61012860043560ff602435166103d8565b60405191825260208201526040908101905180910390f35b341561014b57600080fd5b61016260043560ff60243516604435606435610437565b005b341561016f57600080fd5b610162600160a060020a0360043516610576565b341561018e57600080fd5b6101996004356105c5565b604051808260148111156101a957fe5b60ff16815260200191505060405180910390f35b34156101c857600080fd5b6101d761ffff600435166105dd565b604051901515815260200160405180910390f35b34156101f657600080fd5b61020a60ff60043581169060243516610653565b60405161ffff841681526020810183601481111561022457fe5b60ff168152602001828152602001935050505060405180910390f35b341561024b57600080fd5b61016260043560ff602435166106c4565b341561026757600080fd5b61027260043561079b565b6040518083600281111561028257fe5b60ff1681526020018281526020019250505060405180910390f35b34156102a857600080fd5b6101d76107d5565b34156102bb57600080fd5b61016260ff60043581169060243581169061ffff6044351690606435166084356107f0565b34156102eb57600080fd5b61016260043560ff6024351660443561092e565b341561030a57600080fd5b610162600160a060020a0360043516610990565b341561032957600080fd5b61016260043560ff602435166044356109df565b341561034857600080fd5b61035660ff60043516610ad1565b60405161ffff909116815260200160405180910390f35b341561037857600080fd5b610380610ae8565b604051600160a060020a03909116815260200160405180910390f35b34156103a757600080fd5b610162600160a060020a0360043516610af7565b34156103c657600080fd5b6100fa600435610bab565b6003545b90565b600082815260026020526040812081906003018360148111156103f757fe5b6015811061040157fe5b0154600085815260026020526040902060180184601481111561042057fe5b6015811061042a57fe5b0154915091509250929050565b60006104436000610ad1565b61044d6005610ad1565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156104a457600080fd5b6102c65a03f115156104b557600080fd5b5050506040518051905015156104ca57600080fd5b60008560028111156104d857fe5b14156104e357600080fd5b6104ec86610bdd565b156104f657600080fd5b6000868152600260208190526040909120878155600180820180549295508893909260ff19169190849081111561052957fe5b0217905550602d8201805460ff191690556002820184905560038054600181016105538382610c60565b50600091825260209091200186905561056e866001856109df565b505050505050565b60005461058b90600160a060020a0316610c0a565b151561059657600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000908152600260205260409020602d015460ff1690565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561063357600080fd5b6102c65a03f1151561064457600080fd5b50505060405180519392505050565b6000806000806004600087601581111561066957fe5b60ff1660ff168152602001908152602001600020600086601481111561068b57fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b6106ce6000610ad1565b6106d86005610ad1565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561072f57600080fd5b6102c65a03f1151561074057600080fd5b50505060405180519050151561075557600080fd5b61075e83610bdd565b151561076957600080fd5b6000838152600260205260409020602d01805483919060ff1916600183601481111561079157fe5b0217905550505050565b6000806107a783610bdd565b15156107b257600080fd5b50506000908152600260208190526040909120600181015491015460ff90911691565b600080546107eb90600160a060020a0316610c0a565b905090565b6107fa6005610ad1565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561084e57600080fd5b6102c65a03f1151561085f57600080fd5b50505060405180519050151561087457600080fd5b6060604051908101604052808561ffff16815260200184601481111561089657fe5b8152602001839052600460008860158111156108ae57fe5b60ff1660ff16815260200190815260200160002060008760148111156108d057fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff000019166201000083601481111561091557fe5b0217905550604082015160019091015550505050505050565b61093783610bdd565b151561094257600080fd5b6000838152600260208190526040909120600190810180548593919260ff1990911691849081111561097057fe5b021790555060009283526002602081905260409093209092019190915550565b6000546109a590600160a060020a0316610c0a565b15156109b057600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000806109eb85610bdd565b15156109f657600080fd5b60008581526002602052604081209250600490856015811115610a1557fe5b60ff908116825260208201929092526040016000908120602d8501549092166014811115610a3f57fe5b60ff1681526020810191909152604001600020805490915061ffff161515610a6657610aca565b610a6f81610c43565b8054602d830180546201000090920460ff169160ff19166001836014811115610a9457fe5b021790555042826003018260010154601581101515610aaf57fe5b015560018101548390601884019060158110610ac757fe5b01555b5050505050565b6000816005811115610adf57fe5b60020a92915050565b600154600160a060020a031690565b610b016005610ad1565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610b5557600080fd5b6102c65a03f11515610b6657600080fd5b505050604051805190501515610b7b57600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6003546000908210610bbc57600080fd5b6003805483908110610bca57fe5b9060005260206000209001549050919050565b60008060008381526002602081905260409091206001015460ff1690811115610c0257fe5b141592915050565b600081600160a060020a031633600160a060020a03161480610c3d575081600160a060020a031632600160a060020a0316145b92915050565b8054610c529061ffff166105dd565b1515610c5d57600080fd5b50565b815481835581811511610c8457600083815260209020610c84918101908301610c89565b505050565b6103d591905b80821115610ca35760008155600101610c8f565b50905600a165627a7a72305820499bc6788ca65b12feedcefa5a1d86e234260a35c53442327fdee84bda61f2af0029"};

var EvidenceStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getEvidenceId","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getInfo","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getEvidenceType","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"}],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"evidenceId","type":"bytes32"}],"name":"getEvidenceKey","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"evidenceId","type":"bytes32"},{"name":"eType","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddress","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610f65806100306000396000f3006060604052600436106100e15763ffffffff60e060020a60003504166264d70f81146100e65780634fb2e45d146101115780636026c2d114610132578063671ff7fa14610163578063673e639b146101a057806377a28bd7146101bf5780637937354c146101ed578063848a423f146102035780638f32d59b14610258578063a3684f001461026b578063a55f99271461029b578063b7973ad9146102c4578063bb03341f146102e6578063d56339cb14610305578063dbf30aa81461031e578063dc8c14ad1461034e578063dd9fd5da14610370578063f7ff1b6a1461039f575b600080fd5b34156100f157600080fd5b6100ff6004356024356103be565b60405190815260200160405180910390f35b341561011c57600080fd5b610130600160a060020a0360043516610423565b005b341561013d57600080fd5b61014b600435602435610472565b60405191825260208201526040908101905180910390f35b341561016e57600080fd5b61017c6004356024356104f2565b6040518082600681111561018c57fe5b60ff16815260200191505060405180910390f35b34156101ab57600080fd5b61013060043560243560ff60443516610559565b34156101ca57600080fd5b6101d961ffff6004351661066d565b604051901515815260200160405180910390f35b34156101f857600080fd5b6100ff6004356106e3565b341561020e57600080fd5b61022260ff600435811690602435166106f5565b60405161ffff841681526020810183600081111561023c57fe5b60ff168152602001828152602001935050505060405180910390f35b341561026357600080fd5b6101d9610766565b341561027657600080fd5b61013060ff60043581169060243581169061ffff604435169060643516608435610782565b34156102a657600080fd5b6102b46004356024356108c0565b6040518082600081111561018c57fe5b34156102cf57600080fd5b61013060043560243560ff60443516606435610929565b34156102f157600080fd5b610130600160a060020a03600435166109fd565b341561031057600080fd5b6100ff600435602435610a4c565b341561032957600080fd5b61033760ff60043516610a80565b60405161ffff909116815260200160405180910390f35b341561035957600080fd5b61013060043560243560ff60443516606435610a97565b341561037b57600080fd5b610383610c5c565b604051600160a060020a03909116815260200160405180910390f35b34156103aa57600080fd5b610130600160a060020a0360043516610c6b565b60006103c983610d1f565b15156103d457600080fd5b6000838152600260205260409020548290116103ef57600080fd5b600083815260026020526040902080548390811061040957fe5b906000526020600020906005020160000154905092915050565b60005461043890600160a060020a0316610e18565b151561044357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082815260026020526040812054819083901161048f57600080fd5b60008481526002602052604090208054849081106104a957fe5b60009182526020808320600260059093020182015487845291905260409091208054859081106104d557fe5b906000526020600020906005020160030154915091509250929050565b60008281526002602052604081205482901161050d57600080fd5b61051683610d1f565b151561052157600080fd5b600083815260026020526040902080548390811061053b57fe5b600091825260209091206005909102016001015460ff169392505050565b6105636004610a80565b61056d6005610a80565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156105c457600080fd5b6102c65a03f115156105d557600080fd5b5050506040518051905015156105ea57600080fd5b6105f384610d1f565b15156105fe57600080fd5b60008481526002602052604090205483901161061957600080fd5b600084815260026020526040902080548391908590811061063657fe5b906000526020600020906005020160040160006101000a81548160ff0219169083600081111561066257fe5b021790555050505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156106c357600080fd5b6102c65a03f115156106d457600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b6000806000806004600087600181111561070b57fe5b60ff1660ff168152602001908152602001600020600086600081111561072d57fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b6000805461077c90600160a060020a0316610e18565b90505b90565b61078c6005610a80565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156107e057600080fd5b6102c65a03f115156107f157600080fd5b50505060405180519050151561080657600080fd5b6060604051908101604052808561ffff16815260200184600081111561082857fe5b81526020018390526004600088600181111561084057fe5b60ff1660ff168152602001908152602001600020600087600081111561086257fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360008111156108a757fe5b0217905550604082015160019091015550505050505050565b60006108cb83610d1f565b15156108d657600080fd5b6000838152600260205260409020548290116108f157600080fd5b600083815260026020526040902080548390811061090b57fe5b600091825260209091206005909102016004015460ff169392505050565b60008061093586610d1f565b151561094057600080fd5b60008681526002602052604090205485901161095b57600080fd5b600086815260026020526040902080548690811061097557fe5b60009182526020822060046005909202018181015490945090919060ff168181111561099d57fe5b60ff1660ff16815260200190815260200160002060008560018111156109bf57fe5b60ff1660ff16815260200190815260200160002090506109de81610e51565b80546109f590839062010000900460ff1685610e6e565b505050505050565b600054610a1290600160a060020a0316610e18565b1515610a1d57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008281526003602090815260408083208484529091528120805460ff161515610a7557600080fd5b600101549392505050565b6000816005811115610a8e57fe5b60020a92915050565b600080600080610aa76004610a80565b610ab16005610a80565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610b0857600080fd5b6102c65a03f11515610b1957600080fd5b505050604051805190501515610b2e57600080fd5b60008981526002602052604090209450610b4789610d1f565b1515610b5257600080fd5b610b5c8989610ea0565b15610b6657600080fd5b6000876006811115610b7457fe5b1415610b7f57600080fd5b8454610b8e8660018301610ec0565b5084546000198101945060009350859085908110610ba857fe5b60009182526020909120600590910201888155600180820180549294508992909160ff1990911690836006811115610bdc57fe5b021790555060048201805484919060ff19166001836000811115610bfc57fe5b021790555060408051908101604090815260018252602080830187905260008c8152600382528281208c8252909152208151815460ff1916901515178155602082015160019091015550610c51828488610e6e565b505050505050505050565b600154600160a060020a031690565b610c756005610a80565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610cc957600080fd5b6102c65a03f11515610cda57600080fd5b505050604051805190501515610cef57600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6005546000908190600160a060020a0316631dbf426982604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610d6b57600080fd5b6102c65a03f11515610d7c57600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826014811115610dc857fe5b60ff168152602001925050506040805180830381600087803b1515610dec57600080fd5b6102c65a03f11515610dfd57600080fd5b50505060405180519060200180515050600090119392505050565b600081600160a060020a031633600160a060020a03161480610e4b575081600160a060020a031632600160a060020a0316145b92915050565b8054610e609061ffff1661066d565b1515610e6b57600080fd5b50565b60048301805483919060ff19166001836000811115610e8957fe5b021790555042600284015560039092019190915550565b600091825260036020908152604080842092845291905290205460ff1690565b815481835581811511610eec57600502816005028360005260206000209182019101610eec9190610ef1565b505050565b61077f91905b80821115610f3557600080825560018201805460ff199081169091556002830182905560038301919091556004820180549091169055600501610ef7565b50905600a165627a7a72305820386e592c66006eaab7df041829d11554bb644e8dcd84e5ad553db1a271b36c790029"};

var DatasheetStoreCompiled = {"abi":[{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"datasheetId","type":"bytes32"}],"name":"getDatasheetKey","outputs":[{"name":"index","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getInfo","outputs":[{"name":"date","type":"uint256"},{"name":"hash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"status","type":"uint8"}],"name":"setStatus","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"}],"name":"count","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"}],"name":"getPromotion","outputs":[{"name":"","type":"uint16"},{"name":"","type":"uint8"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"action","type":"uint8"},{"name":"currentStatus","type":"uint8"},{"name":"_role","type":"uint16"},{"name":"finalStatus","type":"uint8"},{"name":"position","type":"uint256"}],"name":"setPromotion","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getStatus","outputs":[{"name":"status","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"},{"name":"action","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"roleAddress","type":"address"}],"name":"setRoleContract","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getDatasheetId","outputs":[{"name":"datasheetId","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"}],"name":"role","outputs":[{"name":"","type":"uint16"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"datasheetId","type":"bytes32"},{"name":"dType","type":"uint8"},{"name":"hash","type":"bytes32"}],"name":"add","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"incidentId","type":"bytes32"},{"name":"index","type":"uint256"}],"name":"getDatasheetType","outputs":[{"name":"dType","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getRoleContract","outputs":[{"name":"roleAddress","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"contractStoreAddr","type":"address"}],"name":"setContractStore","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x606060405260008054600160a060020a033316600160a060020a0319909116179055610f2c806100306000396000f3006060604052600436106100e25763ffffffff60e060020a6000350416633050e19481146100e75780634fb2e45d146101125780636026c2d114610133578063673e639b1461016457806377a28bd7146101835780637937354c146101b1578063848a423f146101c75780638f32d59b1461021c578063a3684f001461022f578063a55f99271461025f578063b7973ad91461029c578063bb03341f146102be578063c342560e146102dd578063dbf30aa8146102f6578063dc8c14ad14610326578063dd6c753814610348578063dd9fd5da14610371578063f7ff1b6a146103a0575b600080fd5b34156100f257600080fd5b6101006004356024356103bf565b60405190815260200160405180910390f35b341561011d57600080fd5b610131600160a060020a03600435166103f3565b005b341561013e57600080fd5b61014c600435602435610442565b60405191825260208201526040908101905180910390f35b341561016f57600080fd5b61013160043560243560ff60443516610486565b341561018e57600080fd5b61019d61ffff6004351661059a565b604051901515815260200160405180910390f35b34156101bc57600080fd5b610100600435610610565b34156101d257600080fd5b6101e660ff60043581169060243516610622565b60405161ffff841681526020810183600081111561020057fe5b60ff168152602001828152602001935050505060405180910390f35b341561022757600080fd5b61019d610693565b341561023a57600080fd5b61013160ff60043581169060243581169061ffff6044351690606435166084356106af565b341561026a57600080fd5b6102786004356024356107ed565b6040518082600081111561028857fe5b60ff16815260200191505060405180910390f35b34156102a757600080fd5b61013160043560243560ff60443516606435610856565b34156102c957600080fd5b610131600160a060020a036004351661092a565b34156102e857600080fd5b610100600435602435610979565b341561030157600080fd5b61030f60ff600435166109de565b60405161ffff909116815260200160405180910390f35b341561033157600080fd5b61013160043560243560ff604435166064356109f5565b341561035357600080fd5b610361600435602435610bba565b6040518082600381111561028857fe5b341561037c57600080fd5b610384610c23565b604051600160a060020a03909116815260200160405180910390f35b34156103ab57600080fd5b610131600160a060020a0360043516610c32565b60008281526003602090815260408083208484529091528120805460ff1615156103e857600080fd5b600101549392505050565b60005461040890600160a060020a0316610ce6565b151561041357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008281526002602052604081208054829182918590811061046057fe5b906000526020600020906005020190508060020154816003015492509250509250929050565b61049060046109de565b61049a60056109de565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156104f157600080fd5b6102c65a03f1151561050257600080fd5b50505060405180519050151561051757600080fd5b61052084610d1f565b151561052b57600080fd5b60008481526002602052604090205483901161054657600080fd5b600084815260026020526040902080548391908590811061056357fe5b906000526020600020906005020160040160006101000a81548160ff0219169083600081111561058f57fe5b021790555050505050565b600154600090600160a060020a03166377a28bd783836040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b15156105f057600080fd5b6102c65a03f1151561060157600080fd5b50505060405180519392505050565b60009081526002602052604090205490565b6000806000806004600087600181111561063857fe5b60ff1660ff168152602001908152602001600020600086600081111561065a57fe5b60ff90811682526020820192909252604001600020805460019091015461ffff8216996201000090920490921697509095509350505050565b600080546106a990600160a060020a0316610ce6565b90505b90565b6106b960056109de565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b151561070d57600080fd5b6102c65a03f1151561071e57600080fd5b50505060405180519050151561073357600080fd5b6060604051908101604052808561ffff16815260200184600081111561075557fe5b81526020018390526004600088600181111561076d57fe5b60ff1660ff168152602001908152602001600020600087600081111561078f57fe5b60ff16815260208101919091526040016000208151815461ffff191661ffff9190911617815560208201518154829062ff00001916620100008360008111156107d457fe5b0217905550604082015160019091015550505050505050565b60006107f883610d1f565b151561080357600080fd5b60008381526002602052604090205482901161081e57600080fd5b600083815260026020526040902080548390811061083857fe5b600091825260209091206005909102016004015460ff169392505050565b60008061086286610d1f565b151561086d57600080fd5b60008681526002602052604090205485901161088857600080fd5b60008681526002602052604090208054869081106108a257fe5b60009182526020822060046005909202018181015490945090919060ff16818111156108ca57fe5b60ff1660ff16815260200190815260200160002060008560018111156108ec57fe5b60ff1660ff168152602001908152602001600020905061090b81610e18565b805461092290839062010000900460ff1685610e35565b505050505050565b60005461093f90600160a060020a0316610ce6565b151561094a57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600061098483610d1f565b151561098f57600080fd5b6000838152600260205260409020548290116109aa57600080fd5b60008381526002602052604090208054839081106109c457fe5b906000526020600020906005020160000154905092915050565b60008160058111156109ec57fe5b60020a92915050565b600080600080610a0560046109de565b610a0f60056109de565b600154911790600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610a6657600080fd5b6102c65a03f11515610a7757600080fd5b505050604051805190501515610a8c57600080fd5b60008981526002602052604090209450610aa589610d1f565b1515610ab057600080fd5b610aba8989610e67565b15610ac457600080fd5b6000876003811115610ad257fe5b1415610add57600080fd5b8454610aec8660018301610e87565b5084546000198101945060009350859085908110610b0657fe5b60009182526020909120600590910201888155600180820180549294508992909160ff1990911690836003811115610b3a57fe5b021790555060048201805484919060ff19166001836000811115610b5a57fe5b021790555060408051908101604090815260018252602080830187905260008c8152600382528281208c8252909152208151815460ff1916901515178155602082015160019091015550610baf828488610e35565b505050505050505050565b6000610bc583610d1f565b1515610bd057600080fd5b600083815260026020526040902054829011610beb57600080fd5b6000838152600260205260409020805483908110610c0557fe5b600091825260209091206005909102016001015460ff169392505050565b600154600160a060020a031690565b610c3c60056109de565b600154600160a060020a03166377a28bd78260006040516020015260405160e060020a63ffffffff841602815261ffff9091166004820152602401602060405180830381600087803b1515610c9057600080fd5b6102c65a03f11515610ca157600080fd5b505050604051805190501515610cb657600080fd5b506005805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600081600160a060020a031633600160a060020a03161480610d19575081600160a060020a031632600160a060020a0316145b92915050565b6005546000908190600160a060020a0316631dbf426982604051602001526040518163ffffffff1660e060020a028152600401602060405180830381600087803b1515610d6b57600080fd5b6102c65a03f11515610d7c57600080fd5b50505060405180519050600160a060020a0316634bd5322b846000806040516040015260405160e060020a63ffffffff85160281526004810183815290602401826014811115610dc857fe5b60ff168152602001925050506040805180830381600087803b1515610dec57600080fd5b6102c65a03f11515610dfd57600080fd5b50505060405180519060200180515050600090119392505050565b8054610e279061ffff1661059a565b1515610e3257600080fd5b50565b60048301805483919060ff19166001836000811115610e5057fe5b021790555042600284015560039092019190915550565b600091825260036020908152604080842092845291905290205460ff1690565b815481835581811511610eb357600502816005028360005260206000209182019101610eb39190610eb8565b505050565b6106ac91905b80821115610efc57600080825560018201805460ff199081169091556002830182905560038301919091556004820180549091169055600501610ebe565b50905600a165627a7a7230582088c3e248e6eedfff9a1b86f18e9df843fd290b46847cd35e50ea6467a37fa52f0029"};

var RoleStoreCompiled = {"abi":[{"constant":false,"inputs":[{"name":"account","type":"address"},{"name":"role","type":"uint16"}],"name":"setRole","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getRole","outputs":[{"name":"role","type":"uint16"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"transferOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"role","type":"uint16"}],"name":"allowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"bytecode":"0x6060604052341561000f57600080fd5b60008054600160a060020a03191633600160a060020a0381169190911790915561004a90600560020a64010000000061020561004f82021704565b610093565b600160a060020a038216151561006457600080fd5b600160a060020a03919091166000908152600160205260409020805461ffff191661ffff909216919091179055565b610285806100a26000396000f3006060604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166315f924a98114610066578063442767331461008e5780634fb2e45d146100c457806377a28bd7146100e3575b600080fd5b341561007157600080fd5b61008c600160a060020a036004351661ffff60243516610111565b005b341561009957600080fd5b6100ad600160a060020a036004351661013f565b60405161ffff909116815260200160405180910390f35b34156100cf57600080fd5b61008c600160a060020a036004351661015e565b34156100ee57600080fd5b6100fd61ffff600435166101ad565b604051901515815260200160405180910390f35b60005461012690600160a060020a03166101cc565b151561013157600080fd5b61013b8282610205565b5050565b600160a060020a031660009081526001602052604090205461ffff1690565b60005461017390600160a060020a03166101cc565b151561017e57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000806101b8610249565b9050600081841661ffff1611915050919050565b600081600160a060020a031633600160a060020a031614806101ff575081600160a060020a031632600160a060020a0316145b92915050565b600160a060020a038216151561021a57600080fd5b600160a060020a03919091166000908152600160205260409020805461ffff191661ffff909216919091179055565b60006102543261013f565b9050905600a165627a7a72305820d715b777fee910ff8f4703be792e803a5fea320578557a47e120625ffc3a4d4b0029"};

var railwayIncidentDefault = "0x1349f3e1b8d71effb47b840594ff27da7e603d17";
var incidentStoreDefault = "0x9d13c6d3afe1721beef56b55d303b09e021e27ab";
var evidenceStoreDefault = "0xd9d64b7dc034fafdba5dc2902875a67b5d586420";
var datasheetStoreDefault = "0x8a5e2a6343108babed07899510fb42297938d41f";
var roleStoreAddressDefault = "0x938781b9796aea6376e40ca158f67fa89d5d8a18";

var railwayIncidentAddress = "";
var incidentStoreAddress = "";
var evidenceStoreAddress = "";
var datasheetStoreAddress = "";
var roleStoreAddress = "";

var owner = web3.personal.listAccounts[0];
var roleRS = owner;
var roleDS = web3.personal.listAccounts[1];
var roleCIAF = web3.personal.listAccounts[2];
var roleCGS = web3.personal.listAccounts[3];
var roleADIF = web3.personal.listAccounts[5];
var rolePF = web3.personal.listAccounts[6];

console.log("Unlocking roleRS (owner)");
web3.personal.unlockAccount(owner, "", 15000);
console.log("Unlocking roleDS");
web3.personal.unlockAccount(roleDS, "garfield123", 15000);
console.log("Unlocking rolePF");
web3.personal.unlockAccount(rolePF, "", 15000);

var railwayIncidentContract = web3.eth.contract(RailwayIncidentCompiled.abi);
var incidentStoreContract = web3.eth.contract(IncidentStoreCompiled.abi);
var evidenceStoreContract = web3.eth.contract(EvidenceStoreCompiled.abi);
var datasheetStoreContract = web3.eth.contract(DatasheetStoreCompiled.abi);
var roleStoreContract = web3.eth.contract(RoleStoreCompiled.abi);

var railwayIncident = {};        // eth.contract(RailwayIncidentCompiled.abi).at(railwayIncidentAddress);
var incidentStore = {}; // eth.contract(IncidentStoreCompiled.abi).at(incidentStoreAddress);
var evidenceStore = {};   // eth.contract(EvidenceStoreCompiled.abi).at(evidenceStoreAddress);
var datasheetStore = {}; // eth.contract(DatasheetStoreCompiled.abi).at(datasheetStoreAddress);
var roleStore = {};     // eth.contract(RoleStoreCompiled.abi).at(roleStoreAddress);

var deployGas = 6712390;
var transGas = 600000;

var inspections = [];

var Actor = {
    'NONE' : 0,
    'PF' : 1,
    'ADIF' : 2,
    'CGS' : 4,
    'CIAF' : 8,
    'DS' : 16,
    'RS' : 32
}

var IncidentStatus = {
    'Created' : 0,
    'NotifiedADIF' : 1,
    'NotifiedCGS' : 2,
    'NotifiedRS' : 3,
    'NotifiedRO' : 4,
    'NotifiedCIAF' : 5,
    'ReviewedCIAF' : 6,
    'StructureSent' : 7,
    'DSAssigned' : 8,
    'Delegated' : 9,
    'DelegationNotified' : 10,
    'InProcess' : 11,
    'ClosedInquiry' : 12,
    'DatasheetsGenerated' : 13,
    'Analyzing' : 14,
    'Closed' : 15,
    'ReportSent' : 16,
    'NotesAdded' : 17,
    'ReportReceived' : 18,
    'ActionsTaken' : 19,
    'End' : 20
};

var IncidentAction = {
    'None' : 0,
    'Create' : 1,
    'NotifyADIF' : 2,
    'NotifyCGS' : 3,
    'NotifyRS' : 4,
    'NotifyRO' : 5,
    'NotifyCIAF' : 6,
    'Review' : 7,
    'SendStructure' : 8,
    'AssignDS' : 9,
    'Delegate' : 10,
    'NotifyDelegation' : 11,
    'Start' : 12,
    'CloseInquiry' : 13,
    'CloseDataGeneration' : 14,
    'Analyze' : 15,
    'CreateReport' : 16,
    'ReportCIAF' : 17,
    'ResponseCIAF' : 18,
    'AddNotes' : 19,
    'TakeActions' : 20,
    'DoAnnualReport' : 21
};

var IncidentType = {
	'NONE' : 0,
	'Accident' : 1,
	'Incident' : 2
}

var EvidenceStatus = {
    'Created' : 0
};

var EvidenceAction = {
    'None' : 0,
    'Create' : 1
};

var EvidenceType = {
    'NONE' : 0,
    'Train' : 1,
    'Testimony' : 2,
    'CAD' : 3,
    'Record' : 4,
    'Installation' : 5,
    'Equipment' : 6
}

var DatasheetStatus = {
    'Created' : 0
};

var DatasheetAction = {
    'None' : 0,
    'Create' : 1
};

var DatasheetType = {
    'NONE' : 0,
   'Train' : 1,
   'Vcitim' : 2,
   'Event' : 3
}


var deployRailwayIncident = function (owner, deployRailwayIncidentCallback) {
    railwayIncidentContract.new({
        from: owner,
        data: RailwayIncidentCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RailwayIncident contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RailwayIncident. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RailwayIncident contract mined! address: "' + contract.address + '"\n');
                deployRailwayIncidentCallback(contract);
            }
        }
    });
};

var deployIncidentStore = function (owner, deployIncidentStoreCallback) {
    incidentStoreContract.new({
        from: owner,
        data: IncidentStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating IncidentStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for IncidentStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('IncidentStore contract mined! address: "' + contract.address + '"\n');
                deployIncidentStoreCallback(contract);
            }
        }
    });
};

var deployEvidenceStore = function (owner, deployEvidenceStoreCallback) {
    evidenceStoreContract.new({
        from: owner,
        data: EvidenceStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating EvidenceStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for EvidenceStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('EvidenceStore contract mined! address: "' + contract.address + '"\n');
                deployEvidenceStoreCallback(contract);
            }
        }
    });
};

var deployDatasheetStore = function (owner, deployDatasheetStoreCallback) {
    datasheetStoreContract.new({
        from: owner,
        data: DatasheetStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating DatasheetStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for DatasheetStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('DatasheetStore contract mined! address: "' + contract.address + '"\n');
                deployDatasheetStoreCallback(contract);
            }
        }
    });
};

var deployRoleStore = function (owner, deployRoleStoreCallback) {
    roleStoreContract.new({
        from: owner,
        data: RoleStoreCompiled.bytecode,
        gas: deployGas
    }, function (e, contract) {
        if (e) {
            console.log("Error creating RoleStore contract ", e);
        } else {
            if (!contract.address) {
                console.log('Waiting for RoleStore. TransactionHash: ' + contract.transactionHash);
            } else {
                console.log('RoleStore contract mined! address: "' + contract.address + '"\n');
                deployRoleStoreCallback(contract);
            }
        }
    });
};

var linkContracts = function (railwayIncident, incidentStore, evidenceStore, datasheetStore, roleStore) {

    console.log('Linking contracts ');
    railwayIncident.setRoleContract(roleStore.address, {from: owner, gas: transGas});
    incidentStore.setRoleContract(roleStore.address, {from: owner, gas: transGas});
    evidenceStore.setRoleContract(roleStore.address, {from: owner, gas: transGas});
    datasheetStore.setRoleContract(roleStore.address, {from: owner, gas: transGas});
    console.log('RoleStore in RailwayIncident and stores done.');
    railwayIncident.setIncidentContract(incidentStore.address, {from: owner, gas: transGas});
    railwayIncident.setEvidenceContract(evidenceStore.address, {from: owner, gas: transGas});
    railwayIncident.setDatasheetContract(datasheetStore.address, {from: owner, gas: transGas});
    console.log('IncidentStore, DatasheetStore and EvidenceStore in RailwayIncident done.');
    evidenceStore.setContractStore(railwayIncident.address, {from: owner, gas: transGas});
    console.log('RailwayIncident in EvidenceStore done.');
    datasheetStore.setContractStore(railwayIncident.address, {from: owner, gas: transGas});
    console.log('RailwayIncident in DatasheetStore done.');

    railwayIncidentAddress = railwayIncident.address;
    incidentStoreAddress = incidentStore.address;
    evidenceStoreAddress = evidenceStore.address;
    roleStoreAddress = roleStore.address;
    datasheetStoreAddress = datasheetStore.address;

    // Print Info
    info();

};

var deploy = function () {
    console.log('Calling contract creation');
    deployRailwayIncident(owner, function (railwayIncident) {
        console.log('RailwayIncident ready, calling incidentStore');
        deployIncidentStore(owner, function (incidentStore) {
            console.log('incidentStore ready, calling evidenceStore');
            deployEvidenceStore(owner, function (evidenceStore) {
                console.log('evidenceStore ready, calling datasheetStore');
                deployDatasheetStore(owner, function (datasheetStore) {
                    console.log('datasheetStore ready, calling roleStore');
					             deployRoleStore(owner, function (roleStore) {
                            console.log('RoleStore ready, calling final config');
                            linkContracts(railwayIncident, incidentStore, evidenceStore, datasheetStore, roleStore);
                    });
                });
            });
        });
    });
};

// ========================================================================

var incidentStorePromotions = function (incidentStore) {
  console.log('Setting incidentStore Promotions ... ');
  incidentStore.setPromotion(IncidentAction.Create,    			IncidentStatus.Created,   			Actor.RS | Actor.PF,	IncidentStatus.Created,  			IncidentStatus.Created, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.NotifyADIF,    		IncidentStatus.Created,   			Actor.RS | Actor.PF,	IncidentStatus.Created,  			IncidentStatus.NotifiedADIF, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.NotifyCGS,    		IncidentStatus.Created,   			Actor.RS | Actor.PF,	IncidentStatus.Created,  			IncidentStatus.NotifiedCGS, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.NotifyCIAF,    		IncidentStatus.Created,   			Actor.RS | Actor.CGS,	IncidentStatus.Created,  			IncidentStatus.NotifiedCIAF, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.NotifyRO,    		    IncidentStatus.Created,   			Actor.RS | Actor.CGS,	IncidentStatus.Created,  			IncidentStatus.NotifiedRO, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.NotifyRS,    		    IncidentStatus.Created,   			Actor.RS | Actor.CGS,	IncidentStatus.Created,  			IncidentStatus.NotifiedRS, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.Review,    			IncidentStatus.Created,   			Actor.RS,				IncidentStatus.ReviewedCIAF,  		IncidentStatus.ReviewedCIAF, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.Start,    			IncidentStatus.ReviewedCIAF,   		Actor.RS | Actor.DS,	IncidentStatus.InProcess,  			IncidentStatus.InProcess, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.SendStructure,    	IncidentStatus.ReviewedCIAF,		Actor.RS,				IncidentStatus.StructureSent,  		IncidentStatus.StructureSent, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.AssignDS,    		    IncidentStatus.StructureSent,		Actor.RS,				IncidentStatus.DSAssigned,  		IncidentStatus.DSAssigned, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.Start,    			IncidentStatus.DSAssigned,   		Actor.RS | Actor.DS,	IncidentStatus.InProcess,  			IncidentStatus.InProcess, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.Delegate,    		    IncidentStatus.DSAssigned,			Actor.RS,				IncidentStatus.Delegated,  			IncidentStatus.Delegated, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.NotifyDelegation, 	IncidentStatus.Delegated,			Actor.RS | Actor.DS,	IncidentStatus.DelegationNotified,  IncidentStatus.DelegationNotified, 	{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.CloseInquiry,    	    IncidentStatus.InProcess,			Actor.RS,				IncidentStatus.ClosedInquiry,  		IncidentStatus.ClosedInquiry, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.CloseDataGeneration,  IncidentStatus.ClosedInquiry,		Actor.RS | Actor.DS,	IncidentStatus.DatasheetsGenerated,	IncidentStatus.DatasheetsGenerated, {from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.Analyze,    		    IncidentStatus.DatasheetsGenerated,	Actor.RS | Actor.DS,	IncidentStatus.Analyzing,  			IncidentStatus.Analyzing, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.CreateReport,    	    IncidentStatus.Analyzing,			Actor.RS | Actor.DS,	IncidentStatus.Closed,  			IncidentStatus.Closed, 				{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.ReportCIAF,    		IncidentStatus.Closed,				Actor.RS | Actor.DS,	IncidentStatus.ReportSent,  		IncidentStatus.ReportSent, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.TakeActions,    	    IncidentStatus.Closed,				Actor.RS,				IncidentStatus.ActionsTaken,  		IncidentStatus.ActionsTaken, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.ResponseCIAF,    	    IncidentStatus.ReportSent,			Actor.RS | Actor.DS,	IncidentStatus.ReportReceived,  	IncidentStatus.ReportReceived, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.AddNotes,    		    IncidentStatus.ReportReceived,		Actor.RS | Actor.DS,	IncidentStatus.ReportReceived,  	IncidentStatus.NotesAdded, 			{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.TakeActions,    	    IncidentStatus.ReportReceived,		Actor.RS,				IncidentStatus.ActionsTaken,  		IncidentStatus.ActionsTaken, 		{from:owner, gas: transGas});
	incidentStore.setPromotion(IncidentAction.DoAnnualReport,    	IncidentStatus.ActionsTaken,		Actor.RS,				IncidentStatus.End,  				IncidentStatus.End, 				{from:owner, gas: transGas});
  var promo = incidentStore.getPromotion(IncidentAction.DoAnnualReport,  IncidentStatus.ActionsTaken, {from: owner, gas: transGas});
  result = assert(promo[0] == 32, 'Error in setPromotions');
  msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
  console.log(msg);
};

var evidenceStorePromotions = function (evidenceStore) {
    console.log('Setting EvidenceStore Promotions ... ');
    evidenceStore.setPromotion(EvidenceAction.Create,    EvidenceStatus.Created,   Actor.RS | Actor.DS,	EvidenceStatus.Created,  	EvidenceStatus.Created, {from:owner, gas: transGas});
    promo = evidenceStore.getPromotion(EvidenceAction.Create,  EvidenceStatus.Created, {from: owner, gas: transGas});
    result = assert(promo[0] == 48, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var datasheetStorePromotions = function (datasheetStore) {
    console.log('Setting DatasheetStore Promotions ... ');
    datasheetStore.setPromotion(DatasheetAction.Create,    DatasheetStatus.Created,   Actor.RS | Actor.DS,	DatasheetStatus.Created,  	DatasheetStatus.Created, {from:owner, gas: transGas});
    promo = datasheetStore.getPromotion(DatasheetAction.Create,  DatasheetStatus.Created, {from: owner, gas: transGas});
    result = assert(promo[0] == 48, 'Error in setPromotions');
    msg = result.indexOf('PASS') !== -1 ? '--> done.' : result;
    console.log(msg);
};

var info = function () {
    console.log('-------------------------- CONTRACTS INFO -------------------------');
    console.log('/* Copy & paste this to access deployed contracts */');
    console.log('setAddrs({');
    console.log('railwayIncident : "' + railwayIncidentAddress + '",');
    console.log('incidentStore : "' + incidentStoreAddress + '",');
    console.log('evidenceStore : "' + evidenceStoreAddress + '",');
    console.log('datasheetStore : "' + datasheetStoreAddress + '",');
    console.log('roleStoreAddress : "' + roleStoreAddress + '"');
    console.log('});');
    console.log('/* End here */');
    console.log('-------------------------------------------------------------------');
};

var roles = function () {
    console.log('---------------------------- ROLES INFO ---------------------------');
    console.log('roleRS : "' + roleRS + '", ' + roleStore.getRole(roleRS, {from: owner}));
    console.log('roleDS : "' + roleDS + '", ' + roleStore.getRole(roleDS, {from: owner}));
    console.log('roleCIAF : "' + roleCIAF + '", ' + roleStore.getRole(roleCIAF, {from: owner}));
    console.log('roleCGS : "' + roleCGS + '", ' + roleStore.getRole(roleCGS, {from: owner}));
    console.log('roleADIF : "' + roleADIF + '", ' + roleStore.getRole(roleADIF, {from: owner}));
    console.log('rolePF : "' + rolePF + '", ' + roleStore.getRole(rolePF, {from: owner}));
    console.log('-------------------------------------------------------------------');
};

var addRoles = function (rolestore) {
    console.log('Adding Roles ... ');
    roleStore.setRole(roleDS, Actor.DS, {from: owner});
    roleStore.setRole(roleCIAF, Actor.CIAF, {from: owner});
    roleStore.setRole(roleCGS, Actor.CGS, {from: owner});
    roleStore.setRole(roleADIF, Actor.ADIF, {from: owner});
    roleStore.setRole(rolePF, Actor.PF, {from: owner});
    console.log('--> done.');
    roles();
};

var setContracts = function () {
    if (railwayIncidentAddress === "") {
        railwayIncidentAddress = railwayIncidentDefault;
    }
    if (incidentStoreAddress === "") {
        incidentStoreAddress = incidentStoreDefault;
    }
    if (evidenceStoreAddress === "") {
        evidenceStoreAddress = evidenceStoreDefault;
    }
    if (datasheetStoreAddress === "") {
        datasheetStoreAddress = datasheetStoreDefault;
    }
    if (roleStoreAddress === "") {
        roleStoreAddress = roleStoreAddressDefault;
    }

    railwayIncident = eth.contract(RailwayIncidentCompiled.abi).at(railwayIncidentAddress);
    incidentStore = eth.contract(IncidentStoreCompiled.abi).at(incidentStoreAddress);
    evidenceStore = eth.contract(EvidenceStoreCompiled.abi).at(evidenceStoreAddress);
    roleStore = eth.contract(RoleStoreCompiled.abi).at(roleStoreAddress);
    datasheetStore = eth.contract(DatasheetStoreCompiled.abi).at(datasheetStoreAddress);
};

var setAddrs = function (data) {
    railwayIncidentAddress = data.railwayIncidentAddress;
    incidentStoreAddress = data.incidentStoreAddress;
    evidenceStoreAddress = data.evidenceStoreAddress;
    roleStoreAddress = data.roleStoreAddress;
    datasheetStoreAddress = data.datasheetStoreAddress;
    railwayIncident = eth.contract(RailwayIncidentCompiled.abi).at(railwayIncidentAddress);
    incidentStore = eth.contract(IncidentStoreCompiled.abi).at(incidentStoreAddress);
    evidenceStore = eth.contract(EvidenceStoreCompiled.abi).at(evidenceStoreAddress);
    roleStore = eth.contract(RoleStoreCompiled.abi).at(roleStoreAddress);
    datasheetStore = eth.contract(DatasheetStoreCompiled.abi).at(datasheetStoreAddress);
};

var init = function () {
    setContracts();
    info();
    console.log('Set promotions');
    incidentStorePromotions(incidentStore);
    evidenceStorePromotions(evidenceStore);
    datasheetStorePromotions(datasheetStore);
    console.log('Promotions configured');
    console.log('Add Roles');
    addRoles(roleStore);
    console.log('Roles Added');
    console.log('/* End here */');
};

var manage = function () {
    setContracts();
    info();
    console.log('Ready');
};

var push = function () {
    loadScript('script1.js');
};

var assert = function (value, desc) {
    var msg = value ? ' -> PASS' : ' -> *** FAIL ***';
    if (typeof desc !== 'undefined' && !value) {
        msg = msg + ' - ' + desc;
    }
    return msg;
};

var test = function () {
    setContracts();
    var index;
    var result;
    var info;
    var actualStatus;

    console.log('--------------------------- Incident TEST ----------------------------');
    	  var incidentId = "incidentId1";
		    var typeIncident = IncidentType.Incident;
        var currentDate = 20190805;
        var creationHash = 'CREATION HASH';

        var sizePrev = railwayIncident.incidentCount({from : roleRS});

        // New Incident
		    railwayIncident.addIncident(incidentId, typeIncident, currentDate, creationHash, {from : roleRS, gas: transGas});
        var sizePost = railwayIncident.incidentCount({from : roleRS});
        result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Incident not created. Antes:' + sizePrev + 'Despues:' + sizePost);
        console.log('Incident created - Count: ' + sizePost + result);

        // Get Incident
        actualStatus = railwayIncident.getIncidentStatus(incidentId, {from : roleRS});
        result = assert((Number(actualStatus) === Number(IncidentStatus.Created)), 'Incident incorrect status');
        console.log('Incident actual status: ' + actualStatus + result);

        console.log('--------------------------- Evidence TEST ----------------------------');
            var evidenceId = "evidenceId1";
            var typeEvidence = EvidenceType.CAD;

            // New Evidence
            sizePrev = railwayIncident.evidenceCount(incidentId, {from : roleRS});
            railwayIncident.addEvidence(incidentId, evidenceId, typeEvidence, creationHash, {from : roleRS, gas: transGas} );
            sizePost = railwayIncident.evidenceCount(incidentId, {from : roleRS});
            result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Evidence not created. Antes:' + sizePrev + 'Despues:' + sizePost);
            console.log('Evidence created - Count: ' + sizePost + result);
            index = sizePost - 1;

            // Get Evidence
            info = railwayIncident.getEvidenceInfo(incidentId, index, {from : roleRS});
            result = assert(info[0] > 0, 'Evidence incorrect date');
            console.log('Evidence info date: ' + info[0] + result);
            result = assert(creationHash === info[1], 'Evidence incorrect hash');
            console.log('Evidence info hash: ' + info[1] + result);


    console.log('--------------------------- Datasheet TEST ----------------------------');
        var datasheetId = "datasheetId1";
        var typeDatasheet = DatasheetType.Train;

        // New Datasheet
        sizePrev = railwayIncident.datasheetCount(incidentId, {from : roleRS});
        railwayIncident.addDatasheet(incidentId, datasheetId, typeDatasheet, creationHash, {from : roleRS, gas: transGas});
        sizePost = railwayIncident.datasheetCount(incidentId, {from : roleRS});
        result = assert(Number(sizePost) === Number(sizePrev) + 1, 'Datasheet not created. Antes:' + sizePrev + 'Despues:' + sizePost);
        console.log('Datasheet created - Count: ' + sizePost + result);
        index = Number(sizePost - 1);

        // Get Datasheet
        info = railwayIncident.getDatasheetInfo(incidentId, index, {from : roleRS});
        result = assert(info[0] > 0, 'Datasheet incorrect date');
        console.log('Datasheet info date: ' + info[0] + result);
        result = assert(creationHash === info[1], 'Datasheet incorrect hash');
        console.log('Datasheet info hash: ' + info[1] + result);

      console.log('-------------------------- Finished TESTs ----------------------------');

};

var usage = function () {
    console.log('Usage: ');
    console.log('     deploy()   -> Deploy contracts.');
    console.log('     init()     -> Initialize and configure contracts.');
    console.log('     setAddrs() -> Sets previous deployed contract addresses.');
    console.log('     manage()   -> Manage contracts.');
    console.log('     info()     -> Print contracts information.');
    console.log('     roles()    -> Print roles information.');
    console.log('     push()     -> Push contracts deployment.');
    console.log('     test()     -> Execute a simple use case.');
    console.log('     usage()    -> Show this help.');
};

usage();

//automated
